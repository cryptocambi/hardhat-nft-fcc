{"id":"9145ba466d0840c9aeeee4f779bda1f1","_format":"hh-sol-build-info-1","solcVersion":"0.8.8","solcLongVersion":"0.8.8+commit.dddeac2f","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(uint80 _roundId)\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface LinkTokenInterface {\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\n\n  function approve(address spender, uint256 value) external returns (bool success);\n\n  function balanceOf(address owner) external view returns (uint256 balance);\n\n  function decimals() external view returns (uint8 decimalPlaces);\n\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\n\n  function increaseApproval(address spender, uint256 subtractedValue) external;\n\n  function name() external view returns (string memory tokenName);\n\n  function symbol() external view returns (string memory tokenSymbol);\n\n  function totalSupply() external view returns (uint256 totalTokensIssued);\n\n  function transfer(address to, uint256 value) external returns (bool success);\n\n  function transferAndCall(\n    address to,\n    uint256 value,\n    bytes calldata data\n  ) external returns (bool success);\n\n  function transferFrom(\n    address from,\n    address to,\n    uint256 value\n  ) external returns (bool success);\n}\n"},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig()\n    external\n    view\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    );\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(uint64 subId)\n    external\n    view\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    );\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\n// A mock for testing code that relies on VRFCoordinatorV2.\npragma solidity ^0.8.4;\n\nimport \"../interfaces/LinkTokenInterface.sol\";\nimport \"../interfaces/VRFCoordinatorV2Interface.sol\";\nimport \"../VRFConsumerBaseV2.sol\";\n\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\n  uint96 public immutable BASE_FEE;\n  uint96 public immutable GAS_PRICE_LINK;\n  uint16 public immutable MAX_CONSUMERS = 100;\n\n  error InvalidSubscription();\n  error InsufficientBalance();\n  error MustBeSubOwner(address owner);\n  error TooManyConsumers();\n  error InvalidConsumer();\n  error InvalidRandomWords();\n\n  event RandomWordsRequested(\n    bytes32 indexed keyHash,\n    uint256 requestId,\n    uint256 preSeed,\n    uint64 indexed subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords,\n    address indexed sender\n  );\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\n  event SubscriptionCreated(uint64 indexed subId, address owner);\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\n  event ConsumerAdded(uint64 indexed subId, address consumer);\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\n\n  uint64 s_currentSubId;\n  uint256 s_nextRequestId = 1;\n  uint256 s_nextPreSeed = 100;\n  struct Subscription {\n    address owner;\n    uint96 balance;\n  }\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\n  mapping(uint64 => address[]) s_consumers; /* subId */ /* consumers */\n\n  struct Request {\n    uint64 subId;\n    uint32 callbackGasLimit;\n    uint32 numWords;\n  }\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\n\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\n    BASE_FEE = _baseFee;\n    GAS_PRICE_LINK = _gasPriceLink;\n  }\n\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\n    address[] memory consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\n    if (!consumerIsAdded(_subId, _consumer)) {\n      revert InvalidConsumer();\n    }\n    _;\n  }\n\n  /**\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n   * @notice consumer.\n   *\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n   * @dev against the real coordinator a small amount of additional LINK is required.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   */\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\n  }\n\n  /**\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n   *\n   * @param _requestId the request to fulfill\n   * @param _consumer the VRF randomness consumer to send the result to\n   * @param _words user-provided random words\n   */\n  function fulfillRandomWordsWithOverride(\n    uint256 _requestId,\n    address _consumer,\n    uint256[] memory _words\n  ) public {\n    uint256 startGas = gasleft();\n    if (s_requests[_requestId].subId == 0) {\n      revert(\"nonexistent request\");\n    }\n    Request memory req = s_requests[_requestId];\n\n    if (_words.length == 0) {\n      _words = new uint256[](req.numWords);\n      for (uint256 i = 0; i < req.numWords; i++) {\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\n      }\n    } else if (_words.length != req.numWords) {\n      revert InvalidRandomWords();\n    }\n\n    VRFConsumerBaseV2 v;\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\n\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\n    if (s_subscriptions[req.subId].balance < payment) {\n      revert InsufficientBalance();\n    }\n    s_subscriptions[req.subId].balance -= payment;\n    delete (s_requests[_requestId]);\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\n  }\n\n  /**\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n   *\n   * @param _subId the subscription to fund\n   * @param _amount the amount to fund\n   */\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    uint96 oldBalance = s_subscriptions[_subId].balance;\n    s_subscriptions[_subId].balance += _amount;\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\n  }\n\n  function requestRandomWords(\n    bytes32 _keyHash,\n    uint64 _subId,\n    uint16 _minimumRequestConfirmations,\n    uint32 _callbackGasLimit,\n    uint32 _numWords\n  ) external override onlyValidConsumer(_subId, msg.sender) returns (uint256) {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n\n    uint256 requestId = s_nextRequestId++;\n    uint256 preSeed = s_nextPreSeed++;\n\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\n\n    emit RandomWordsRequested(\n      _keyHash,\n      requestId,\n      preSeed,\n      _subId,\n      _minimumRequestConfirmations,\n      _callbackGasLimit,\n      _numWords,\n      msg.sender\n    );\n    return requestId;\n  }\n\n  function createSubscription() external override returns (uint64 _subId) {\n    s_currentSubId++;\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\n    return s_currentSubId;\n  }\n\n  function getSubscription(uint64 _subId)\n    external\n    view\n    override\n    returns (\n      uint96 balance,\n      uint64 reqCount,\n      address owner,\n      address[] memory consumers\n    )\n  {\n    if (s_subscriptions[_subId].owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\n  }\n\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\n    delete (s_subscriptions[_subId]);\n  }\n\n  modifier onlySubOwner(uint64 _subId) {\n    address owner = s_subscriptions[_subId].owner;\n    if (owner == address(0)) {\n      revert InvalidSubscription();\n    }\n    if (msg.sender != owner) {\n      revert MustBeSubOwner(owner);\n    }\n    _;\n  }\n\n  function getRequestConfig()\n    external\n    pure\n    override\n    returns (\n      uint16,\n      uint32,\n      bytes32[] memory\n    )\n  {\n    return (3, 2000000, new bytes32[](0));\n  }\n\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\n      revert TooManyConsumers();\n    }\n\n    if (consumerIsAdded(_subId, _consumer)) {\n      return;\n    }\n\n    s_consumers[_subId].push(_consumer);\n    emit ConsumerAdded(_subId, _consumer);\n  }\n\n  function removeConsumer(uint64 _subId, address _consumer)\n    external\n    override\n    onlySubOwner(_subId)\n    onlyValidConsumer(_subId, _consumer)\n  {\n    address[] storage consumers = s_consumers[_subId];\n    for (uint256 i = 0; i < consumers.length; i++) {\n      if (consumers[i] == _consumer) {\n        address last = consumers[consumers.length - 1];\n        consumers[i] = last;\n        consumers.pop();\n        break;\n      }\n    }\n\n    emit ConsumerRemoved(_subId, _consumer);\n  }\n\n  function getConfig()\n    external\n    view\n    returns (\n      uint16 minimumRequestConfirmations,\n      uint32 maxGasLimit,\n      uint32 stalenessSeconds,\n      uint32 gasAfterPaymentCalculation\n    )\n  {\n    return (4, 2_500_000, 2_700, 33285);\n  }\n\n  function getFeeConfig()\n    external\n    view\n    returns (\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\n      uint24 reqsForTier2,\n      uint24 reqsForTier3,\n      uint24 reqsForTier4,\n      uint24 reqsForTier5\n    )\n  {\n    return (\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      100000, // 0.1 LINK\n      0,\n      0,\n      0,\n      0\n    );\n  }\n\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\n    return 4000000000000000; // 0.004 Ether\n  }\n\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    revert(\"not implemented\");\n  }\n\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    revert(\"not implemented\");\n  }\n}\n"},"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"base64-sol/base64.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0;\n\n/// @title Base64\n/// @author Brecht Devos - <brecht@loopring.org>\n/// @notice Provides functions for encoding/decoding base64\nlibrary Base64 {\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    bytes  internal constant TABLE_DECODE = hex\"0000000000000000000000000000000000000000000000000000000000000000\"\n                                            hex\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\"\n                                            hex\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\"\n                                            hex\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\";\n\n    function encode(bytes memory data) internal pure returns (string memory) {\n        if (data.length == 0) return '';\n\n        // load the table into memory\n        string memory table = TABLE_ENCODE;\n\n        // multiply by 4/3 rounded up\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\n\n        // add some extra buffer at the end required for the writing\n        string memory result = new string(encodedLen + 32);\n\n        assembly {\n            // set the actual output length\n            mstore(result, encodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 3 bytes at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n                // read 3 bytes\n                dataPtr := add(dataPtr, 3)\n                let input := mload(dataPtr)\n\n                // write 4 characters\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\n                resultPtr := add(resultPtr, 1)\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\n                resultPtr := add(resultPtr, 1)\n            }\n\n            // padding with '='\n            switch mod(mload(data), 3)\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\n        }\n\n        return result;\n    }\n\n    function decode(string memory _data) internal pure returns (bytes memory) {\n        bytes memory data = bytes(_data);\n\n        if (data.length == 0) return new bytes(0);\n        require(data.length % 4 == 0, \"invalid base64 decoder input\");\n\n        // load the table into memory\n        bytes memory table = TABLE_DECODE;\n\n        // every 4 characters represent 3 bytes\n        uint256 decodedLen = (data.length / 4) * 3;\n\n        // add some extra buffer at the end required for the writing\n        bytes memory result = new bytes(decodedLen + 32);\n\n        assembly {\n            // padding with '='\n            let lastBytes := mload(add(data, mload(data)))\n            if eq(and(lastBytes, 0xFF), 0x3d) {\n                decodedLen := sub(decodedLen, 1)\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\n                    decodedLen := sub(decodedLen, 1)\n                }\n            }\n\n            // set the actual output length\n            mstore(result, decodedLen)\n\n            // prepare the lookup table\n            let tablePtr := add(table, 1)\n\n            // input ptr\n            let dataPtr := data\n            let endPtr := add(dataPtr, mload(data))\n\n            // result ptr, jump over length\n            let resultPtr := add(result, 32)\n\n            // run over the input, 4 characters at a time\n            for {} lt(dataPtr, endPtr) {}\n            {\n               // read 4 characters\n               dataPtr := add(dataPtr, 4)\n               let input := mload(dataPtr)\n\n               // write 3 bytes\n               let output := add(\n                   add(\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\n                   add(\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\n                    )\n                )\n                mstore(resultPtr, shl(232, output))\n                resultPtr := add(resultPtr, 3)\n            }\n        }\n\n        return result;\n    }\n}\n"},"contracts/BasicNft.sol":{"content":"//SPDX-License-Identifier: MIT\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\n\r\npragma solidity ^0.8.7;\r\n\r\ncontract BasicNft is ERC721 {\r\n    string public constant TOKEN_URI =\r\n        \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\";\r\n    uint256 private s_tokenCounter;\r\n\r\n    constructor() ERC721(\"Dogie\", \"DOG\") {\r\n        s_tokenCounter = 0;\r\n    }\r\n\r\n    function mintNft() public returns (uint256) {\r\n        _safeMint(msg.sender, s_tokenCounter);\r\n        s_tokenCounter = s_tokenCounter + 1;\r\n        return s_tokenCounter;\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        return (TOKEN_URI);\r\n    }\r\n\r\n    function getTokenCounter() public view returns (uint256) {\r\n        return s_tokenCounter;\r\n    }\r\n}\r\n"},"contracts/DynamicSvgNft.sol":{"content":"// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\r\nimport \"base64-sol/base64.sol\";\r\n\r\ncontract DynamicSvgNft is ERC721 {\r\n    uint256 private s_tokenCounter;\r\n    string private i_lowImageURI;\r\n    string private i_highImageURI;\r\n    string private constant base64EncodedSvgPrefix = \"data:image/svg+xml;base64,\";\r\n    AggregatorV3Interface internal immutable i_priceFeed;\r\n    mapping(uint256 => int256) public s_tokenIdHighValue;\r\n\r\n    event CreateNft(uint256 indexed tokenId, int256 highValue);\r\n\r\n    constructor(\r\n        address priceFeedAddress,\r\n        string memory lowSvg,\r\n        string memory highSvg\r\n    ) ERC721(\"Dynamic SVG NFT\", \"DSN\") {\r\n        s_tokenCounter = 0;\r\n        i_lowImageURI = svgToImageURI(lowSvg);\r\n        i_highImageURI = svgToImageURI(highSvg);\r\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\r\n    }\r\n\r\n    function svgToImageURI(string memory svg) public pure returns (string memory) {\r\n        string memory baseURL = \"data:image/svg+xml;base64,\";\r\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\r\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\r\n    }\r\n\r\n    function mintNft(int256 highValue) public {\r\n        s_tokenIdHighValue[s_tokenCounter] = highValue;\r\n        _safeMint(msg.sender, s_tokenCounter);\r\n        s_tokenCounter = s_tokenCounter + 1;\r\n        emit CreateNft(s_tokenCounter, highValue);\r\n    }\r\n\r\n    function _baseURI() internal pure override returns (string memory) {\r\n        return \"data:application/json;base64,\";\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\r\n        require(_exists(tokenId), \"URI Query for nonexistent token\");\r\n\r\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\r\n        string memory imageURI = i_lowImageURI;\r\n        if (price >= s_tokenIdHighValue[tokenId]) {\r\n            imageURI = i_highImageURI;\r\n        }\r\n\r\n        return\r\n            string(\r\n                abi.encodePacked(\r\n                    _baseURI(),\r\n                    Base64.encode(\r\n                        bytes(\r\n                            abi.encodePacked(\r\n                                '{\"name\":\"',\r\n                                name(), // You can add whatever name here\r\n                                '\", \"description\":\"An NFT that changes based on the Chainlink Feed\", ',\r\n                                '\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"',\r\n                                imageURI,\r\n                                '\"}'\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            );\r\n    }\r\n}\r\n"},"contracts/RandomIpfsNft.sol":{"content":"//SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nerror randomIpfsNft_RangeOutOfBounds();\r\nerror randomIpfsNft_NeedMoreETHSent();\r\nerror randomIpfsNft_TransferFailed();\r\n\r\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\r\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\r\n    uint64 private immutable i_subscriptionId;\r\n    bytes32 private immutable i_gasLane;\r\n    uint32 private immutable i_callbackGasLimit;\r\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\r\n    uint32 private constant NUM_WORDS = 1;\r\n\r\n    mapping(uint256 => address) s_requestIdToSender;\r\n\r\n    enum Breed {\r\n        PUG,\r\n        SHIBA_INU,\r\n        ST_BERNARD\r\n    }\r\n\r\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\r\n    uint256 private s_tokenCounter;\r\n    uint256 internal immutable i_mintFee;\r\n\r\n    string[] internal s_dogTokenUris;\r\n\r\n    event NftRequested(uint256 indexed requestId, address requester);\r\n    event Nftminted(Breed dogBreed, address minter);\r\n\r\n    constructor(\r\n        address vrfCoordinatorV2,\r\n        uint64 subscriptionId,\r\n        bytes32 gasLane,\r\n        uint32 callbackGasLimit,\r\n        string[3] memory dogTokenUris,\r\n        uint256 mintFee\r\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\"Random IPFS NFT\", \"RIN\") {\r\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\r\n        i_subscriptionId = subscriptionId;\r\n        i_gasLane = gasLane;\r\n        i_callbackGasLimit = callbackGasLimit;\r\n        s_dogTokenUris = dogTokenUris;\r\n        i_mintFee = mintFee;\r\n    }\r\n\r\n    function requestNft() public payable returns (uint256 requestId) {\r\n        if (msg.value < i_mintFee) {\r\n            revert randomIpfsNft_NeedMoreETHSent();\r\n        }\r\n        requestId = i_vrfCoordinator.requestRandomWords(\r\n            i_gasLane,\r\n            i_subscriptionId,\r\n            REQUEST_CONFIRMATIONS,\r\n            i_callbackGasLimit,\r\n            NUM_WORDS\r\n        );\r\n        s_requestIdToSender[requestId] = msg.sender;\r\n        emit NftRequested(requestId, msg.sender);\r\n    }\r\n\r\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\r\n        address dogOwner = s_requestIdToSender[requestId];\r\n        uint256 newTokenId = s_tokenCounter;\r\n\r\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\r\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\r\n        s_tokenCounter += s_tokenCounter;\r\n\r\n        _safeMint(dogOwner, newTokenId);\r\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\r\n\r\n        emit Nftminted(dogBreed, dogOwner);\r\n    }\r\n\r\n    function withdraw() public onlyOwner {\r\n        uint256 amount = address(this).balance;\r\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\r\n        if (!success) {\r\n            revert randomIpfsNft_TransferFailed();\r\n        }\r\n    }\r\n\r\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\r\n        uint256 cumulativeSum = 0;\r\n        uint[3] memory chanceArray = getChanceArray();\r\n\r\n        for (uint256 i = 0; i > chanceArray.length; i++) {\r\n            if (moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]) {\r\n                return Breed(i);\r\n            }\r\n            cumulativeSum += chanceArray[i];\r\n        }\r\n        revert randomIpfsNft_RangeOutOfBounds();\r\n    }\r\n\r\n    function getChanceArray() public pure returns (uint256[3] memory) {\r\n        return [10, 30, MAX_CHANCE_VALUE];\r\n    }\r\n\r\n    function getMintFee() public view returns (uint256) {\r\n        return i_mintFee;\r\n    }\r\n\r\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\r\n        return s_dogTokenUris[index];\r\n    }\r\n\r\n    function getTokenCounter() public view returns (uint256) {\r\n        return s_tokenCounter;\r\n    }\r\n}\r\n"},"contracts/test/VRFCoordinatorV2Mock.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\";\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:306:45:\n    |\n306 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                             ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9040,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9027},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:306:60:\n    |\n306 |   function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\n    |                                                            ^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9059,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9042},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:310:44:\n    |\n310 |   function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\n    |                                            ^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9178,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9165},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:314:33:\n    |\n314 |   function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    |                                 ^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":9285,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9273},"type":"Warning"},{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/BasicNft.sol:21:23:\n   |\n21 |     function tokenURI(uint256 tokenId) public view override returns (string memory) {\n   |                       ^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":635,"file":"contracts/BasicNft.sol","start":620},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:261:3:\n    |\n261 |   function getConfig()\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8266,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8016},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:274:3:\n    |\n274 |   function getFeeConfig()\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8860,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8270},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:302:3:\n    |\n302 |   function getFallbackWeiPerUnitLink() external view returns (int256) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":8981,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":8864},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n   --> @chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:314:3:\n    |\n314 |   function pendingRequestExists(uint64 subId) public view override returns (bool) {\n    |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":9359,"file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","start":9243},"type":"Warning"},{"component":"general","errorCode":"2018","formattedMessage":"Warning: Function state mutability can be restricted to pure\n  --> contracts/BasicNft.sol:21:5:\n   |\n21 |     function tokenURI(uint256 tokenId) public view override returns (string memory) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Function state mutability can be restricted to pure","severity":"warning","sourceLocation":{"end":719,"file":"contracts/BasicNft.sol","start":602},"type":"Warning"}],"sources":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5462:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5436:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5436:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5593:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5599:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5616:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5599:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5599:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5481:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5576:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5568:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5567:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5593:0:0"},"scope":57,"src":"5556:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5640:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6338:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6365:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6357:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6357:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6393:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6376:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6376:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6356:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6422:0:0"},"scope":57,"src":"6329:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6707:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6717:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6717:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6731:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6717:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6713:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6747:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6788:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6788:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6800:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6762:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6762:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"RevertStatement","src":"6755:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"6846:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"6857:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"6827:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6827:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"6827:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6627:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6657:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6649:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6649:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6685:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6668:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6668:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6668:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6648:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6707:0:0"},"scope":57,"src":"6618:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1543:0","usedErrors":[8]}],"src":"32:6845:0"},"id":0},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","exportedSymbols":{"AggregatorV3Interface":[103]},"id":104,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":103,"linearizedBaseContracts":[103],"name":"AggregatorV3Interface","nameLocation":"67:21:1","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":64,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"102:8:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"110:2:1"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":64,"src":"136:5:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":61,"name":"uint8","nodeType":"ElementaryTypeName","src":"136:5:1","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"135:7:1"},"scope":103,"src":"93:50:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"7284e416","id":69,"implemented":false,"kind":"function","modifiers":[],"name":"description","nameLocation":"156:11:1","nodeType":"FunctionDefinition","parameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"167:2:1"},"returnParameters":{"id":68,"nodeType":"ParameterList","parameters":[{"constant":false,"id":67,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":69,"src":"193:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":66,"name":"string","nodeType":"ElementaryTypeName","src":"193:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"192:15:1"},"scope":103,"src":"147:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"54fd4d50","id":74,"implemented":false,"kind":"function","modifiers":[],"name":"version","nameLocation":"221:7:1","nodeType":"FunctionDefinition","parameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"228:2:1"},"returnParameters":{"id":73,"nodeType":"ParameterList","parameters":[{"constant":false,"id":72,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":74,"src":"254:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":71,"name":"uint256","nodeType":"ElementaryTypeName","src":"254:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"253:9:1"},"scope":103,"src":"212:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9a6fc8f5","id":89,"implemented":false,"kind":"function","modifiers":[],"name":"getRoundData","nameLocation":"276:12:1","nodeType":"FunctionDefinition","parameters":{"id":77,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"_roundId","nameLocation":"296:8:1","nodeType":"VariableDeclaration","scope":89,"src":"289:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":75,"name":"uint80","nodeType":"ElementaryTypeName","src":"289:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"288:17:1"},"returnParameters":{"id":88,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"roundId","nameLocation":"355:7:1","nodeType":"VariableDeclaration","scope":89,"src":"348:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":78,"name":"uint80","nodeType":"ElementaryTypeName","src":"348:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"answer","nameLocation":"377:6:1","nodeType":"VariableDeclaration","scope":89,"src":"370:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":80,"name":"int256","nodeType":"ElementaryTypeName","src":"370:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":83,"mutability":"mutable","name":"startedAt","nameLocation":"399:9:1","nodeType":"VariableDeclaration","scope":89,"src":"391:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":82,"name":"uint256","nodeType":"ElementaryTypeName","src":"391:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"updatedAt","nameLocation":"424:9:1","nodeType":"VariableDeclaration","scope":89,"src":"416:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":84,"name":"uint256","nodeType":"ElementaryTypeName","src":"416:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"answeredInRound","nameLocation":"448:15:1","nodeType":"VariableDeclaration","scope":89,"src":"441:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":86,"name":"uint80","nodeType":"ElementaryTypeName","src":"441:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"340:129:1"},"scope":103,"src":"267:203:1","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"feaf968c","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"483:15:1","nodeType":"FunctionDefinition","parameters":{"id":90,"nodeType":"ParameterList","parameters":[],"src":"498:2:1"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":92,"mutability":"mutable","name":"roundId","nameLocation":"550:7:1","nodeType":"VariableDeclaration","scope":102,"src":"543:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":91,"name":"uint80","nodeType":"ElementaryTypeName","src":"543:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":94,"mutability":"mutable","name":"answer","nameLocation":"572:6:1","nodeType":"VariableDeclaration","scope":102,"src":"565:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":93,"name":"int256","nodeType":"ElementaryTypeName","src":"565:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"startedAt","nameLocation":"594:9:1","nodeType":"VariableDeclaration","scope":102,"src":"586:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":95,"name":"uint256","nodeType":"ElementaryTypeName","src":"586:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":98,"mutability":"mutable","name":"updatedAt","nameLocation":"619:9:1","nodeType":"VariableDeclaration","scope":102,"src":"611:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"611:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"answeredInRound","nameLocation":"643:15:1","nodeType":"VariableDeclaration","scope":102,"src":"636:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":99,"name":"uint80","nodeType":"ElementaryTypeName","src":"636:6:1","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"535:129:1"},"scope":103,"src":"474:191:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":104,"src":"57:610:1","usedErrors":[]}],"src":"32:636:1"},"id":1},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","exportedSymbols":{"LinkTokenInterface":[198]},"id":199,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":105,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":198,"linearizedBaseContracts":[198],"name":"LinkTokenInterface","nameLocation":"67:18:2","nodeType":"ContractDefinition","nodes":[{"functionSelector":"dd62ed3e","id":114,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"99:9:2","nodeType":"FunctionDefinition","parameters":{"id":110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":107,"mutability":"mutable","name":"owner","nameLocation":"117:5:2","nodeType":"VariableDeclaration","scope":114,"src":"109:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":106,"name":"address","nodeType":"ElementaryTypeName","src":"109:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"spender","nameLocation":"132:7:2","nodeType":"VariableDeclaration","scope":114,"src":"124:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":108,"name":"address","nodeType":"ElementaryTypeName","src":"124:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"108:32:2"},"returnParameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"mutability":"mutable","name":"remaining","nameLocation":"172:9:2","nodeType":"VariableDeclaration","scope":114,"src":"164:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":111,"name":"uint256","nodeType":"ElementaryTypeName","src":"164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"163:19:2"},"scope":198,"src":"90:93:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":123,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"196:7:2","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":116,"mutability":"mutable","name":"spender","nameLocation":"212:7:2","nodeType":"VariableDeclaration","scope":123,"src":"204:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"204:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":118,"mutability":"mutable","name":"value","nameLocation":"229:5:2","nodeType":"VariableDeclaration","scope":123,"src":"221:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":117,"name":"uint256","nodeType":"ElementaryTypeName","src":"221:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"203:32:2"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"success","nameLocation":"259:7:2","nodeType":"VariableDeclaration","scope":123,"src":"254:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":120,"name":"bool","nodeType":"ElementaryTypeName","src":"254:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"253:14:2"},"scope":198,"src":"187:81:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":130,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"281:9:2","nodeType":"FunctionDefinition","parameters":{"id":126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":125,"mutability":"mutable","name":"owner","nameLocation":"299:5:2","nodeType":"VariableDeclaration","scope":130,"src":"291:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":124,"name":"address","nodeType":"ElementaryTypeName","src":"291:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"290:15:2"},"returnParameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"balance","nameLocation":"337:7:2","nodeType":"VariableDeclaration","scope":130,"src":"329:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":127,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"328:17:2"},"scope":198,"src":"272:74:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":135,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"359:8:2","nodeType":"FunctionDefinition","parameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"367:2:2"},"returnParameters":{"id":134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"decimalPlaces","nameLocation":"399:13:2","nodeType":"VariableDeclaration","scope":135,"src":"393:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":132,"name":"uint8","nodeType":"ElementaryTypeName","src":"393:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"392:21:2"},"scope":198,"src":"350:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"66188463","id":144,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseApproval","nameLocation":"427:16:2","nodeType":"FunctionDefinition","parameters":{"id":140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":137,"mutability":"mutable","name":"spender","nameLocation":"452:7:2","nodeType":"VariableDeclaration","scope":144,"src":"444:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"444:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"mutability":"mutable","name":"addedValue","nameLocation":"469:10:2","nodeType":"VariableDeclaration","scope":144,"src":"461:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"461:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"443:37:2"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"success","nameLocation":"504:7:2","nodeType":"VariableDeclaration","scope":144,"src":"499:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":141,"name":"bool","nodeType":"ElementaryTypeName","src":"499:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"498:14:2"},"scope":198,"src":"418:95:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d73dd623","id":151,"implemented":false,"kind":"function","modifiers":[],"name":"increaseApproval","nameLocation":"526:16:2","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":146,"mutability":"mutable","name":"spender","nameLocation":"551:7:2","nodeType":"VariableDeclaration","scope":151,"src":"543:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":145,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":148,"mutability":"mutable","name":"subtractedValue","nameLocation":"568:15:2","nodeType":"VariableDeclaration","scope":151,"src":"560:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"542:42:2"},"returnParameters":{"id":150,"nodeType":"ParameterList","parameters":[],"src":"593:0:2"},"scope":198,"src":"517:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"06fdde03","id":156,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"607:4:2","nodeType":"FunctionDefinition","parameters":{"id":152,"nodeType":"ParameterList","parameters":[],"src":"611:2:2"},"returnParameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"mutability":"mutable","name":"tokenName","nameLocation":"651:9:2","nodeType":"VariableDeclaration","scope":156,"src":"637:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":153,"name":"string","nodeType":"ElementaryTypeName","src":"637:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"636:25:2"},"scope":198,"src":"598:64:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"675:6:2","nodeType":"FunctionDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[],"src":"681:2:2"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"tokenSymbol","nameLocation":"721:11:2","nodeType":"VariableDeclaration","scope":161,"src":"707:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":158,"name":"string","nodeType":"ElementaryTypeName","src":"707:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"706:27:2"},"scope":198,"src":"666:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"18160ddd","id":166,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"747:11:2","nodeType":"FunctionDefinition","parameters":{"id":162,"nodeType":"ParameterList","parameters":[],"src":"758:2:2"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"totalTokensIssued","nameLocation":"792:17:2","nodeType":"VariableDeclaration","scope":166,"src":"784:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":163,"name":"uint256","nodeType":"ElementaryTypeName","src":"784:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:27:2"},"scope":198,"src":"738:73:2","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":175,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"824:8:2","nodeType":"FunctionDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"mutability":"mutable","name":"to","nameLocation":"841:2:2","nodeType":"VariableDeclaration","scope":175,"src":"833:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"833:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"mutability":"mutable","name":"value","nameLocation":"853:5:2","nodeType":"VariableDeclaration","scope":175,"src":"845:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"845:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"832:27:2"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"success","nameLocation":"883:7:2","nodeType":"VariableDeclaration","scope":175,"src":"878:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":172,"name":"bool","nodeType":"ElementaryTypeName","src":"878:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"877:14:2"},"scope":198,"src":"815:77:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"4000aea0","id":186,"implemented":false,"kind":"function","modifiers":[],"name":"transferAndCall","nameLocation":"905:15:2","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":177,"mutability":"mutable","name":"to","nameLocation":"934:2:2","nodeType":"VariableDeclaration","scope":186,"src":"926:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":176,"name":"address","nodeType":"ElementaryTypeName","src":"926:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":179,"mutability":"mutable","name":"value","nameLocation":"950:5:2","nodeType":"VariableDeclaration","scope":186,"src":"942:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":178,"name":"uint256","nodeType":"ElementaryTypeName","src":"942:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":181,"mutability":"mutable","name":"data","nameLocation":"976:4:2","nodeType":"VariableDeclaration","scope":186,"src":"961:19:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":180,"name":"bytes","nodeType":"ElementaryTypeName","src":"961:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"920:64:2"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":184,"mutability":"mutable","name":"success","nameLocation":"1008:7:2","nodeType":"VariableDeclaration","scope":186,"src":"1003:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":183,"name":"bool","nodeType":"ElementaryTypeName","src":"1003:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1002:14:2"},"scope":198,"src":"896:121:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":197,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"1030:12:2","nodeType":"FunctionDefinition","parameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":188,"mutability":"mutable","name":"from","nameLocation":"1056:4:2","nodeType":"VariableDeclaration","scope":197,"src":"1048:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":187,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":190,"mutability":"mutable","name":"to","nameLocation":"1074:2:2","nodeType":"VariableDeclaration","scope":197,"src":"1066:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"1066:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"value","nameLocation":"1090:5:2","nodeType":"VariableDeclaration","scope":197,"src":"1082:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1082:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:57:2"},"returnParameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":195,"mutability":"mutable","name":"success","nameLocation":"1123:7:2","nodeType":"VariableDeclaration","scope":197,"src":"1118:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":194,"name":"bool","nodeType":"ElementaryTypeName","src":"1118:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1117:14:2"},"scope":198,"src":"1021:111:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":199,"src":"57:1077:2","usedErrors":[]}],"src":"32:1103:2"},"id":2},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[294]},"id":295,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":200,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":294,"linearizedBaseContracts":[294],"name":"VRFCoordinatorV2Interface","nameLocation":"67:25:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"97:267:3","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":211,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"376:16:3","nodeType":"FunctionDefinition","parameters":{"id":202,"nodeType":"ParameterList","parameters":[],"src":"392:2:3"},"returnParameters":{"id":210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"437:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":203,"name":"uint16","nodeType":"ElementaryTypeName","src":"437:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"451:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":205,"name":"uint32","nodeType":"ElementaryTypeName","src":"451:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":211,"src":"465:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"465:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":208,"nodeType":"ArrayTypeName","src":"465:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"429:58:3"},"scope":294,"src":"367:121:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":212,"nodeType":"StructuredDocumentation","src":"492:1511:3","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":227,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2015:18:3","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":214,"mutability":"mutable","name":"keyHash","nameLocation":"2047:7:3","nodeType":"VariableDeclaration","scope":227,"src":"2039:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2039:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"subId","nameLocation":"2067:5:3","nodeType":"VariableDeclaration","scope":227,"src":"2060:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":215,"name":"uint64","nodeType":"ElementaryTypeName","src":"2060:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2085:27:3","nodeType":"VariableDeclaration","scope":227,"src":"2078:34:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":217,"name":"uint16","nodeType":"ElementaryTypeName","src":"2078:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":220,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2125:16:3","nodeType":"VariableDeclaration","scope":227,"src":"2118:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":219,"name":"uint32","nodeType":"ElementaryTypeName","src":"2118:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":222,"mutability":"mutable","name":"numWords","nameLocation":"2154:8:3","nodeType":"VariableDeclaration","scope":227,"src":"2147:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":221,"name":"uint32","nodeType":"ElementaryTypeName","src":"2147:6:3","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2033:133:3"},"returnParameters":{"id":226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"mutability":"mutable","name":"requestId","nameLocation":"2193:9:3","nodeType":"VariableDeclaration","scope":227,"src":"2185:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":224,"name":"uint256","nodeType":"ElementaryTypeName","src":"2185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2184:19:3"},"scope":294,"src":"2006:198:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"2208:384:3","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":233,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2604:18:3","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[],"src":"2622:2:3"},"returnParameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"subId","nameLocation":"2650:5:3","nodeType":"VariableDeclaration","scope":233,"src":"2643:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":230,"name":"uint64","nodeType":"ElementaryTypeName","src":"2643:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2642:14:3"},"scope":294,"src":"2595:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":234,"nodeType":"StructuredDocumentation","src":"2661:381:3","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":248,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3054:15:3","nodeType":"FunctionDefinition","parameters":{"id":237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":236,"mutability":"mutable","name":"subId","nameLocation":"3077:5:3","nodeType":"VariableDeclaration","scope":248,"src":"3070:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":235,"name":"uint64","nodeType":"ElementaryTypeName","src":"3070:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3069:14:3"},"returnParameters":{"id":247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":239,"mutability":"mutable","name":"balance","nameLocation":"3133:7:3","nodeType":"VariableDeclaration","scope":248,"src":"3126:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":238,"name":"uint96","nodeType":"ElementaryTypeName","src":"3126:6:3","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":241,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:3","nodeType":"VariableDeclaration","scope":248,"src":"3148:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":240,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"owner","nameLocation":"3179:5:3","nodeType":"VariableDeclaration","scope":248,"src":"3171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":242,"name":"address","nodeType":"ElementaryTypeName","src":"3171:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"consumers","nameLocation":"3209:9:3","nodeType":"VariableDeclaration","scope":248,"src":"3192:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":244,"name":"address","nodeType":"ElementaryTypeName","src":"3192:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":245,"nodeType":"ArrayTypeName","src":"3192:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3118:106:3"},"scope":294,"src":"3045:180:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"3229:164:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":256,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3405:32:3","nodeType":"FunctionDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"subId","nameLocation":"3445:5:3","nodeType":"VariableDeclaration","scope":256,"src":"3438:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":250,"name":"uint64","nodeType":"ElementaryTypeName","src":"3438:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":253,"mutability":"mutable","name":"newOwner","nameLocation":"3460:8:3","nodeType":"VariableDeclaration","scope":256,"src":"3452:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"3452:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3437:32:3"},"returnParameters":{"id":255,"nodeType":"ParameterList","parameters":[],"src":"3478:0:3"},"scope":294,"src":"3396:83:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":257,"nodeType":"StructuredDocumentation","src":"3483:212:3","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":262,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3707:31:3","nodeType":"FunctionDefinition","parameters":{"id":260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":259,"mutability":"mutable","name":"subId","nameLocation":"3746:5:3","nodeType":"VariableDeclaration","scope":262,"src":"3739:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":258,"name":"uint64","nodeType":"ElementaryTypeName","src":"3739:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3738:14:3"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"3761:0:3"},"scope":294,"src":"3698:64:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"3766:170:3","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":270,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3948:11:3","nodeType":"FunctionDefinition","parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"subId","nameLocation":"3967:5:3","nodeType":"VariableDeclaration","scope":270,"src":"3960:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":264,"name":"uint64","nodeType":"ElementaryTypeName","src":"3960:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"consumer","nameLocation":"3982:8:3","nodeType":"VariableDeclaration","scope":270,"src":"3974:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"3974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3959:32:3"},"returnParameters":{"id":269,"nodeType":"ParameterList","parameters":[],"src":"4000:0:3"},"scope":294,"src":"3939:62:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"4005:172:3","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":278,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4189:14:3","nodeType":"FunctionDefinition","parameters":{"id":276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"subId","nameLocation":"4211:5:3","nodeType":"VariableDeclaration","scope":278,"src":"4204:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":272,"name":"uint64","nodeType":"ElementaryTypeName","src":"4204:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":275,"mutability":"mutable","name":"consumer","nameLocation":"4226:8:3","nodeType":"VariableDeclaration","scope":278,"src":"4218:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":274,"name":"address","nodeType":"ElementaryTypeName","src":"4218:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4203:32:3"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[],"src":"4244:0:3"},"scope":294,"src":"4180:65:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":279,"nodeType":"StructuredDocumentation","src":"4249:140:3","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":286,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4401:18:3","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":281,"mutability":"mutable","name":"subId","nameLocation":"4427:5:3","nodeType":"VariableDeclaration","scope":286,"src":"4420:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":280,"name":"uint64","nodeType":"ElementaryTypeName","src":"4420:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"to","nameLocation":"4442:2:3","nodeType":"VariableDeclaration","scope":286,"src":"4434:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"4434:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4419:26:3"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"4454:0:3"},"scope":294,"src":"4392:63:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":293,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4760:20:3","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"subId","nameLocation":"4788:5:3","nodeType":"VariableDeclaration","scope":293,"src":"4781:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":287,"name":"uint64","nodeType":"ElementaryTypeName","src":"4781:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4780:14:3"},"returnParameters":{"id":292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":293,"src":"4818:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":290,"name":"bool","nodeType":"ElementaryTypeName","src":"4818:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4817:6:3"},"scope":294,"src":"4751:73:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":295,"src":"57:4769:3","usedErrors":[]}],"src":"32:4795:3"},"id":3},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[198],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[294],"VRFCoordinatorV2Mock":[1157]},"id":1158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":296,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"92:23:4"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol","file":"../interfaces/LinkTokenInterface.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":199,"src":"117:46:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"../interfaces/VRFCoordinatorV2Interface.sol","id":298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":295,"src":"164:53:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"../VRFConsumerBaseV2.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":58,"src":"218:34:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":300,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":294,"src":"287:25:4"},"id":301,"nodeType":"InheritanceSpecifier","src":"287:25:4"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1157,"linearizedBaseContracts":[1157,294],"name":"VRFCoordinatorV2Mock","nameLocation":"263:20:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"3d18651e","id":303,"mutability":"immutable","name":"BASE_FEE","nameLocation":"341:8:4","nodeType":"VariableDeclaration","scope":1157,"src":"317:32:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":302,"name":"uint96","nodeType":"ElementaryTypeName","src":"317:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"a410347f","id":305,"mutability":"immutable","name":"GAS_PRICE_LINK","nameLocation":"377:14:4","nodeType":"VariableDeclaration","scope":1157,"src":"353:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":304,"name":"uint96","nodeType":"ElementaryTypeName","src":"353:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"public"},{"constant":false,"functionSelector":"64d51a2a","id":308,"mutability":"immutable","name":"MAX_CONSUMERS","nameLocation":"419:13:4","nodeType":"VariableDeclaration","scope":1157,"src":"395:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":306,"name":"uint16","nodeType":"ElementaryTypeName","src":"395:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"313030","id":307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"435:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"public"},{"id":310,"name":"InvalidSubscription","nameLocation":"449:19:4","nodeType":"ErrorDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[],"src":"468:2:4"},"src":"443:28:4"},{"id":312,"name":"InsufficientBalance","nameLocation":"480:19:4","nodeType":"ErrorDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[],"src":"499:2:4"},"src":"474:28:4"},{"id":316,"name":"MustBeSubOwner","nameLocation":"511:14:4","nodeType":"ErrorDefinition","parameters":{"id":315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":314,"mutability":"mutable","name":"owner","nameLocation":"534:5:4","nodeType":"VariableDeclaration","scope":316,"src":"526:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:15:4"},"src":"505:36:4"},{"id":318,"name":"TooManyConsumers","nameLocation":"550:16:4","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"566:2:4"},"src":"544:25:4"},{"id":320,"name":"InvalidConsumer","nameLocation":"578:15:4","nodeType":"ErrorDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[],"src":"593:2:4"},"src":"572:24:4"},{"id":322,"name":"InvalidRandomWords","nameLocation":"605:18:4","nodeType":"ErrorDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"623:2:4"},"src":"599:27:4"},{"anonymous":false,"id":340,"name":"RandomWordsRequested","nameLocation":"636:20:4","nodeType":"EventDefinition","parameters":{"id":339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":324,"indexed":true,"mutability":"mutable","name":"keyHash","nameLocation":"678:7:4","nodeType":"VariableDeclaration","scope":340,"src":"662:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":323,"name":"bytes32","nodeType":"ElementaryTypeName","src":"662:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":326,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"699:9:4","nodeType":"VariableDeclaration","scope":340,"src":"691:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":325,"name":"uint256","nodeType":"ElementaryTypeName","src":"691:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":328,"indexed":false,"mutability":"mutable","name":"preSeed","nameLocation":"722:7:4","nodeType":"VariableDeclaration","scope":340,"src":"714:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"750:5:4","nodeType":"VariableDeclaration","scope":340,"src":"735:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":329,"name":"uint64","nodeType":"ElementaryTypeName","src":"735:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":false,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"768:27:4","nodeType":"VariableDeclaration","scope":340,"src":"761:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":331,"name":"uint16","nodeType":"ElementaryTypeName","src":"761:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":false,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"808:16:4","nodeType":"VariableDeclaration","scope":340,"src":"801:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":333,"name":"uint32","nodeType":"ElementaryTypeName","src":"801:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"numWords","nameLocation":"837:8:4","nodeType":"VariableDeclaration","scope":340,"src":"830:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":335,"name":"uint32","nodeType":"ElementaryTypeName","src":"830:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"867:6:4","nodeType":"VariableDeclaration","scope":340,"src":"851:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":337,"name":"address","nodeType":"ElementaryTypeName","src":"851:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"656:221:4"},"src":"630:248:4"},{"anonymous":false,"id":350,"name":"RandomWordsFulfilled","nameLocation":"887:20:4","nodeType":"EventDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"924:9:4","nodeType":"VariableDeclaration","scope":350,"src":"908:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"908:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":344,"indexed":false,"mutability":"mutable","name":"outputSeed","nameLocation":"943:10:4","nodeType":"VariableDeclaration","scope":350,"src":"935:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":343,"name":"uint256","nodeType":"ElementaryTypeName","src":"935:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":346,"indexed":false,"mutability":"mutable","name":"payment","nameLocation":"962:7:4","nodeType":"VariableDeclaration","scope":350,"src":"955:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":345,"name":"uint96","nodeType":"ElementaryTypeName","src":"955:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":348,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"976:7:4","nodeType":"VariableDeclaration","scope":350,"src":"971:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":347,"name":"bool","nodeType":"ElementaryTypeName","src":"971:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"907:77:4"},"src":"881:104:4"},{"anonymous":false,"id":356,"name":"SubscriptionCreated","nameLocation":"994:19:4","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1029:5:4","nodeType":"VariableDeclaration","scope":356,"src":"1014:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":351,"name":"uint64","nodeType":"ElementaryTypeName","src":"1014:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1044:5:4","nodeType":"VariableDeclaration","scope":356,"src":"1036:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":353,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1013:37:4"},"src":"988:63:4"},{"anonymous":false,"id":364,"name":"SubscriptionFunded","nameLocation":"1060:18:4","nodeType":"EventDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1094:5:4","nodeType":"VariableDeclaration","scope":364,"src":"1079:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":357,"name":"uint64","nodeType":"ElementaryTypeName","src":"1079:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":360,"indexed":false,"mutability":"mutable","name":"oldBalance","nameLocation":"1109:10:4","nodeType":"VariableDeclaration","scope":364,"src":"1101:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":362,"indexed":false,"mutability":"mutable","name":"newBalance","nameLocation":"1129:10:4","nodeType":"VariableDeclaration","scope":364,"src":"1121:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1121:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1078:62:4"},"src":"1054:87:4"},{"anonymous":false,"id":372,"name":"SubscriptionCanceled","nameLocation":"1150:20:4","nodeType":"EventDefinition","parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1186:5:4","nodeType":"VariableDeclaration","scope":372,"src":"1171:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":365,"name":"uint64","nodeType":"ElementaryTypeName","src":"1171:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":368,"indexed":false,"mutability":"mutable","name":"to","nameLocation":"1201:2:4","nodeType":"VariableDeclaration","scope":372,"src":"1193:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":370,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1213:6:4","nodeType":"VariableDeclaration","scope":372,"src":"1205:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1205:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1170:50:4"},"src":"1144:77:4"},{"anonymous":false,"id":378,"name":"ConsumerAdded","nameLocation":"1230:13:4","nodeType":"EventDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1259:5:4","nodeType":"VariableDeclaration","scope":378,"src":"1244:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":373,"name":"uint64","nodeType":"ElementaryTypeName","src":"1244:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":376,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1274:8:4","nodeType":"VariableDeclaration","scope":378,"src":"1266:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"1266:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:40:4"},"src":"1224:60:4"},{"anonymous":false,"id":384,"name":"ConsumerRemoved","nameLocation":"1293:15:4","nodeType":"EventDefinition","parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"indexed":true,"mutability":"mutable","name":"subId","nameLocation":"1324:5:4","nodeType":"VariableDeclaration","scope":384,"src":"1309:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":379,"name":"uint64","nodeType":"ElementaryTypeName","src":"1309:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":382,"indexed":false,"mutability":"mutable","name":"consumer","nameLocation":"1339:8:4","nodeType":"VariableDeclaration","scope":384,"src":"1331:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":381,"name":"address","nodeType":"ElementaryTypeName","src":"1331:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1308:40:4"},"src":"1287:62:4"},{"constant":false,"id":386,"mutability":"mutable","name":"s_currentSubId","nameLocation":"1360:14:4","nodeType":"VariableDeclaration","scope":1157,"src":"1353:21:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":385,"name":"uint64","nodeType":"ElementaryTypeName","src":"1353:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"s_nextRequestId","nameLocation":"1386:15:4","nodeType":"VariableDeclaration","scope":1157,"src":"1378:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":387,"name":"uint256","nodeType":"ElementaryTypeName","src":"1378:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"s_nextPreSeed","nameLocation":"1417:13:4","nodeType":"VariableDeclaration","scope":1157,"src":"1409:27:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":390,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1433:3:4","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Subscription","id":397,"members":[{"constant":false,"id":394,"mutability":"mutable","name":"owner","nameLocation":"1474:5:4","nodeType":"VariableDeclaration","scope":397,"src":"1466:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"1466:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"balance","nameLocation":"1492:7:4","nodeType":"VariableDeclaration","scope":397,"src":"1485:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":395,"name":"uint96","nodeType":"ElementaryTypeName","src":"1485:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"name":"Subscription","nameLocation":"1447:12:4","nodeType":"StructDefinition","scope":1157,"src":"1440:64:4","visibility":"public"},{"constant":false,"id":402,"mutability":"mutable","name":"s_subscriptions","nameLocation":"1539:15:4","nodeType":"VariableDeclaration","scope":1157,"src":"1507:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"typeName":{"id":401,"keyType":{"id":398,"name":"uint64","nodeType":"ElementaryTypeName","src":"1515:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1507:31:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)"},"valueType":{"id":400,"nodeType":"UserDefinedTypeName","pathNode":{"id":399,"name":"Subscription","nodeType":"IdentifierPath","referencedDeclaration":397,"src":"1525:12:4"},"referencedDeclaration":397,"src":"1525:12:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription"}}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"s_consumers","nameLocation":"1618:11:4","nodeType":"VariableDeclaration","scope":1157,"src":"1589:40:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"typeName":{"id":406,"keyType":{"id":403,"name":"uint64","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Mapping","src":"1589:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[])"},"valueType":{"baseType":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"1607:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":405,"nodeType":"ArrayTypeName","src":"1607:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"visibility":"internal"},{"canonicalName":"VRFCoordinatorV2Mock.Request","id":414,"members":[{"constant":false,"id":409,"mutability":"mutable","name":"subId","nameLocation":"1690:5:4","nodeType":"VariableDeclaration","scope":414,"src":"1683:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":408,"name":"uint64","nodeType":"ElementaryTypeName","src":"1683:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1708:16:4","nodeType":"VariableDeclaration","scope":414,"src":"1701:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":410,"name":"uint32","nodeType":"ElementaryTypeName","src":"1701:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"numWords","nameLocation":"1737:8:4","nodeType":"VariableDeclaration","scope":414,"src":"1730:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":412,"name":"uint32","nodeType":"ElementaryTypeName","src":"1730:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"Request","nameLocation":"1669:7:4","nodeType":"StructDefinition","scope":1157,"src":"1662:88:4","visibility":"public"},{"constant":false,"id":419,"mutability":"mutable","name":"s_requests","nameLocation":"1781:10:4","nodeType":"VariableDeclaration","scope":1157,"src":"1753:38:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"typeName":{"id":418,"keyType":{"id":415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1753:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)"},"valueType":{"id":417,"nodeType":"UserDefinedTypeName","pathNode":{"id":416,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":414,"src":"1772:7:4"},"referencedDeclaration":414,"src":"1772:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}}},"visibility":"internal"},{"body":{"id":434,"nodeType":"Block","src":"1877:66:4","statements":[{"expression":{"id":428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":426,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"1883:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":427,"name":"_baseFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"1894:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1883:19:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":429,"nodeType":"ExpressionStatement","src":"1883:19:4"},{"expression":{"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":430,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"1908:14:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":431,"name":"_gasPriceLink","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"1925:13:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"1908:30:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":433,"nodeType":"ExpressionStatement","src":"1908:30:4"}]},"id":435,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":421,"mutability":"mutable","name":"_baseFee","nameLocation":"1845:8:4","nodeType":"VariableDeclaration","scope":435,"src":"1838:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":420,"name":"uint96","nodeType":"ElementaryTypeName","src":"1838:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":423,"mutability":"mutable","name":"_gasPriceLink","nameLocation":"1862:13:4","nodeType":"VariableDeclaration","scope":435,"src":"1855:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":422,"name":"uint96","nodeType":"ElementaryTypeName","src":"1855:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"1837:39:4"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"1877:0:4"},"scope":1157,"src":"1826:117:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":477,"nodeType":"Block","src":"2033:204:4","statements":[{"assignments":[448],"declarations":[{"constant":false,"id":448,"mutability":"mutable","name":"consumers","nameLocation":"2056:9:4","nodeType":"VariableDeclaration","scope":477,"src":"2039:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"2039:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":447,"nodeType":"ArrayTypeName","src":"2039:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":452,"initialValue":{"baseExpression":{"id":449,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"2068:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":451,"indexExpression":{"id":450,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2080:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2068:19:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2039:48:4"},{"body":{"id":473,"nodeType":"Block","src":"2140:75:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":464,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2152:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":466,"indexExpression":{"id":465,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2162:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2152:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":467,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":439,"src":"2168:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2152:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":472,"nodeType":"IfStatement","src":"2148:61:4","trueBody":{"id":471,"nodeType":"Block","src":"2179:30:4","statements":[{"expression":{"hexValue":"74727565","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2196:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":443,"id":470,"nodeType":"Return","src":"2189:11:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":457,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2113:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":458,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"2117:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2117:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2113:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":474,"initializationExpression":{"assignments":[454],"declarations":[{"constant":false,"id":454,"mutability":"mutable","name":"i","nameLocation":"2106:1:4","nodeType":"VariableDeclaration","scope":474,"src":"2098:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"2098:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":456,"initialValue":{"hexValue":"30","id":455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2110:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2098:13:4"},"loopExpression":{"expression":{"id":462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2135:3:4","subExpression":{"id":461,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"2135:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":463,"nodeType":"ExpressionStatement","src":"2135:3:4"},"nodeType":"ForStatement","src":"2093:122:4"},{"expression":{"hexValue":"66616c7365","id":475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2227:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":443,"id":476,"nodeType":"Return","src":"2220:12:4"}]},"functionSelector":"ed5eb06d","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"consumerIsAdded","nameLocation":"1956:15:4","nodeType":"FunctionDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"_subId","nameLocation":"1979:6:4","nodeType":"VariableDeclaration","scope":478,"src":"1972:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":436,"name":"uint64","nodeType":"ElementaryTypeName","src":"1972:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"_consumer","nameLocation":"1995:9:4","nodeType":"VariableDeclaration","scope":478,"src":"1987:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1971:34:4"},"returnParameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":478,"src":"2027:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":441,"name":"bool","nodeType":"ElementaryTypeName","src":"2027:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2026:6:4"},"scope":1157,"src":"1947:290:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":495,"nodeType":"Block","src":"2302:97:4","statements":[{"condition":{"id":488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2312:35:4","subExpression":{"arguments":[{"id":485,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2329:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":486,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":482,"src":"2337:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":484,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"2313:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":493,"nodeType":"IfStatement","src":"2308:80:4","trueBody":{"id":492,"nodeType":"Block","src":"2349:39:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"InvalidConsumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"2364:15:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2364:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"RevertStatement","src":"2357:24:4"}]}},{"id":494,"nodeType":"PlaceholderStatement","src":"2393:1:4"}]},"id":496,"name":"onlyValidConsumer","nameLocation":"2250:17:4","nodeType":"ModifierDefinition","parameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"_subId","nameLocation":"2275:6:4","nodeType":"VariableDeclaration","scope":496,"src":"2268:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":479,"name":"uint64","nodeType":"ElementaryTypeName","src":"2268:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":482,"mutability":"mutable","name":"_consumer","nameLocation":"2291:9:4","nodeType":"VariableDeclaration","scope":496,"src":"2283:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"2283:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2267:34:4"},"src":"2241:158:4","virtual":false,"visibility":"internal"},{"body":{"id":514,"nodeType":"Block","src":"3029:82:4","statements":[{"expression":{"arguments":[{"id":505,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":499,"src":"3066:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":506,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"3078:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3103:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3089:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":507,"name":"uint256","nodeType":"ElementaryTypeName","src":"3093:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":508,"nodeType":"ArrayTypeName","src":"3093:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3089:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":504,"name":"fulfillRandomWordsWithOverride","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3035:30:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256[] memory)"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3035:71:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"3035:71:4"}]},"documentation":{"id":497,"nodeType":"StructuredDocumentation","src":"2403:547:4","text":" @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\n @notice consumer.\n @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\n @dev not account for all edge cases handled in the real VRF coordinator. When making requests\n @dev against the real coordinator a small amount of additional LINK is required.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to"},"functionSelector":"808974ff","id":515,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2962:18:4","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":499,"mutability":"mutable","name":"_requestId","nameLocation":"2989:10:4","nodeType":"VariableDeclaration","scope":515,"src":"2981:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"2981:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":501,"mutability":"mutable","name":"_consumer","nameLocation":"3009:9:4","nodeType":"VariableDeclaration","scope":515,"src":"3001:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"3001:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2980:39:4"},"returnParameters":{"id":503,"nodeType":"ParameterList","parameters":[],"src":"3029:0:4"},"scope":1157,"src":"2953:158:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":677,"nodeType":"Block","src":"3518:1015:4","statements":[{"assignments":[527],"declarations":[{"constant":false,"id":527,"mutability":"mutable","name":"startGas","nameLocation":"3532:8:4","nodeType":"VariableDeclaration","scope":677,"src":"3524:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":526,"name":"uint256","nodeType":"ElementaryTypeName","src":"3524:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":530,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":528,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"3543:7:4","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3543:9:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3524:28:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":531,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3562:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":533,"indexExpression":{"id":532,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3573:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3562:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":409,"src":"3562:28:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3562:33:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":542,"nodeType":"IfStatement","src":"3558:83:4","trueBody":{"id":541,"nodeType":"Block","src":"3597:44:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f6e6578697374656e742072657175657374","id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3612:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""},"value":"nonexistent request"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","typeString":"literal_string \"nonexistent request\""}],"id":537,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3605:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3605:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":540,"nodeType":"ExpressionStatement","src":"3605:29:4"}]}},{"assignments":[545],"declarations":[{"constant":false,"id":545,"mutability":"mutable","name":"req","nameLocation":"3661:3:4","nodeType":"VariableDeclaration","scope":677,"src":"3646:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"},"typeName":{"id":544,"nodeType":"UserDefinedTypeName","pathNode":{"id":543,"name":"Request","nodeType":"IdentifierPath","referencedDeclaration":414,"src":"3646:7:4"},"referencedDeclaration":414,"src":"3646:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage_ptr","typeString":"struct VRFCoordinatorV2Mock.Request"}},"visibility":"internal"}],"id":549,"initialValue":{"baseExpression":{"id":546,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"3667:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":548,"indexExpression":{"id":547,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3678:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3667:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3646:43:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":550,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3700:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3700:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3717:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3700:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":592,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3907:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3907:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":594,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3924:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":413,"src":"3924:12:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3907:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":601,"nodeType":"IfStatement","src":"3903:77:4","trueBody":{"id":600,"nodeType":"Block","src":"3938:42:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":597,"name":"InvalidRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":322,"src":"3953:18:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3953:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":599,"nodeType":"RevertStatement","src":"3946:27:4"}]}},"id":602,"nodeType":"IfStatement","src":"3696:284:4","trueBody":{"id":591,"nodeType":"Block","src":"3720:177:4","statements":[{"expression":{"id":561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":554,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3728:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":558,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3751:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":413,"src":"3751:12:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3737:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":555,"name":"uint256","nodeType":"ElementaryTypeName","src":"3741:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":556,"nodeType":"ArrayTypeName","src":"3741:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3737:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"src":"3728:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":562,"nodeType":"ExpressionStatement","src":"3728:36:4"},{"body":{"id":589,"nodeType":"Block","src":"3815:76:4","statements":[{"expression":{"id":587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":574,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"3825:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":576,"indexExpression":{"id":575,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3832:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3825:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":582,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3866:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":583,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3878:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":580,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3855:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":581,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3855:10:4","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3855:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":579,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3845:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3845:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3837:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":577,"name":"uint256","nodeType":"ElementaryTypeName","src":"3837:7:4","typeDescriptions":{}}},"id":586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3837:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3825:57:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ExpressionStatement","src":"3825:57:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":567,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3792:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":568,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"3796:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"numWords","nodeType":"MemberAccess","referencedDeclaration":413,"src":"3796:12:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"3792:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":590,"initializationExpression":{"assignments":[564],"declarations":[{"constant":false,"id":564,"mutability":"mutable","name":"i","nameLocation":"3785:1:4","nodeType":"VariableDeclaration","scope":590,"src":"3777:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"3777:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":566,"initialValue":{"hexValue":"30","id":565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3789:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3777:13:4"},"loopExpression":{"expression":{"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3810:3:4","subExpression":{"id":571,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"3810:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":573,"nodeType":"ExpressionStatement","src":"3810:3:4"},"nodeType":"ForStatement","src":"3772:119:4"}]}},{"assignments":[605],"declarations":[{"constant":false,"id":605,"mutability":"mutable","name":"v","nameLocation":"4004:1:4","nodeType":"VariableDeclaration","scope":677,"src":"3986:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"},"typeName":{"id":604,"nodeType":"UserDefinedTypeName","pathNode":{"id":603,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"3986:17:4"},"referencedDeclaration":57,"src":"3986:17:4","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"visibility":"internal"}],"id":606,"nodeType":"VariableDeclarationStatement","src":"3986:19:4"},{"assignments":[608],"declarations":[{"constant":false,"id":608,"mutability":"mutable","name":"callReq","nameLocation":"4024:7:4","nodeType":"VariableDeclaration","scope":677,"src":"4011:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":607,"name":"bytes","nodeType":"ElementaryTypeName","src":"4011:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":617,"initialValue":{"arguments":[{"expression":{"expression":{"id":611,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4057:1:4","typeDescriptions":{"typeIdentifier":"t_contract$_VRFConsumerBaseV2_$57","typeString":"contract VRFConsumerBaseV2"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"rawFulfillRandomWords","nodeType":"MemberAccess","referencedDeclaration":56,"src":"4057:23:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory) external"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"4057:32:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":614,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4091:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":615,"name":"_words","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4103:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"expression":{"id":609,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4034:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"4034:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4034:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"4011:99:4"},{"assignments":[619,null],"declarations":[{"constant":false,"id":619,"mutability":"mutable","name":"success","nameLocation":"4122:7:4","nodeType":"VariableDeclaration","scope":677,"src":"4117:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":618,"name":"bool","nodeType":"ElementaryTypeName","src":"4117:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":627,"initialValue":{"arguments":[{"id":625,"name":"callReq","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"4177:7:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":620,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"4135:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"4135:14:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["gas"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":622,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4155:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"callbackGasLimit","nodeType":"MemberAccess","referencedDeclaration":411,"src":"4155:20:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"src":"4135:41:4","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4135:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4116:69:4"},{"assignments":[629],"declarations":[{"constant":false,"id":629,"mutability":"mutable","name":"payment","nameLocation":"4199:7:4","nodeType":"VariableDeclaration","scope":677,"src":"4192:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":628,"name":"uint96","nodeType":"ElementaryTypeName","src":"4192:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":643,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":632,"name":"BASE_FEE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":303,"src":"4216:8:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":633,"name":"startGas","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"4229:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":634,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"4240:7:4","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4240:9:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4229:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":637,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4228:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":638,"name":"GAS_PRICE_LINK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":305,"src":"4253:14:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4228:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4227:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4216:52:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4209:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":630,"name":"uint96","nodeType":"ElementaryTypeName","src":"4209:6:4","typeDescriptions":{}}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4209:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4192:77:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":644,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4279:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":647,"indexExpression":{"expression":{"id":645,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4295:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":646,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":409,"src":"4295:9:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4279:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":648,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4279:34:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":649,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4316:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4279:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":655,"nodeType":"IfStatement","src":"4275:93:4","trueBody":{"id":654,"nodeType":"Block","src":"4325:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":651,"name":"InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":312,"src":"4340:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4340:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":653,"nodeType":"RevertStatement","src":"4333:28:4"}]}},{"expression":{"id":662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":656,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4373:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":659,"indexExpression":{"expression":{"id":657,"name":"req","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":545,"src":"4389:3:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"id":658,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"subId","nodeType":"MemberAccess","referencedDeclaration":409,"src":"4389:9:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4373:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":660,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4373:34:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":661,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4411:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4373:45:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":663,"nodeType":"ExpressionStatement","src":"4373:45:4"},{"expression":{"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4424:31:4","subExpression":{"components":[{"baseExpression":{"id":664,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"4432:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":666,"indexExpression":{"id":665,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4443:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4432:22:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}}],"id":667,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"4431:24:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":669,"nodeType":"ExpressionStatement","src":"4424:31:4"},{"eventCall":{"arguments":[{"id":671,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4487:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":672,"name":"_requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"4499:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":673,"name":"payment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":629,"src":"4511:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"id":674,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"4520:7:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":670,"name":"RandomWordsFulfilled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":350,"src":"4466:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint96_$_t_bool_$returns$__$","typeString":"function (uint256,uint256,uint96,bool)"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4466:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":676,"nodeType":"EmitStatement","src":"4461:67:4"}]},"documentation":{"id":516,"nodeType":"StructuredDocumentation","src":"3115:273:4","text":" @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\n @param _requestId the request to fulfill\n @param _consumer the VRF randomness consumer to send the result to\n @param _words user-provided random words"},"functionSelector":"08e3898e","id":678,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWordsWithOverride","nameLocation":"3400:30:4","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":518,"mutability":"mutable","name":"_requestId","nameLocation":"3444:10:4","nodeType":"VariableDeclaration","scope":678,"src":"3436:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":520,"mutability":"mutable","name":"_consumer","nameLocation":"3468:9:4","nodeType":"VariableDeclaration","scope":678,"src":"3460:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":523,"mutability":"mutable","name":"_words","nameLocation":"3500:6:4","nodeType":"VariableDeclaration","scope":678,"src":"3483:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":521,"name":"uint256","nodeType":"ElementaryTypeName","src":"3483:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":522,"nodeType":"ArrayTypeName","src":"3483:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"3430:80:4"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"3518:0:4"},"scope":1157,"src":"3391:1142:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":722,"nodeType":"Block","src":"4799:278:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":686,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4809:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":688,"indexExpression":{"id":687,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4825:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4809:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":689,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":394,"src":"4809:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4850:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":691,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4842:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":690,"name":"address","nodeType":"ElementaryTypeName","src":"4842:7:4","typeDescriptions":{}}},"id":693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4842:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4809:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":699,"nodeType":"IfStatement","src":"4805:92:4","trueBody":{"id":698,"nodeType":"Block","src":"4854:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":695,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"4869:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4869:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"RevertStatement","src":"4862:28:4"}]}},{"assignments":[701],"declarations":[{"constant":false,"id":701,"mutability":"mutable","name":"oldBalance","nameLocation":"4909:10:4","nodeType":"VariableDeclaration","scope":722,"src":"4902:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":700,"name":"uint96","nodeType":"ElementaryTypeName","src":"4902:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"id":706,"initialValue":{"expression":{"baseExpression":{"id":702,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4922:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":704,"indexExpression":{"id":703,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4938:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4922:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":705,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4922:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"VariableDeclarationStatement","src":"4902:51:4"},{"expression":{"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":707,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"4959:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":709,"indexExpression":{"id":708,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"4975:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4959:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":710,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"4959:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":711,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"4994:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"4959:42:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"id":713,"nodeType":"ExpressionStatement","src":"4959:42:4"},{"eventCall":{"arguments":[{"id":715,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"5031:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":716,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5039:10:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"commonType":{"typeIdentifier":"t_uint96","typeString":"uint96"},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":717,"name":"oldBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":701,"src":"5051:10:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":718,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"5064:7:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"5051:20:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint96","typeString":"uint96"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":714,"name":"SubscriptionFunded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"5012:18:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint64,uint256,uint256)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5012:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":721,"nodeType":"EmitStatement","src":"5007:65:4"}]},"documentation":{"id":679,"nodeType":"StructuredDocumentation","src":"4537:195:4","text":" @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\n @param _subId the subscription to fund\n @param _amount the amount to fund"},"functionSelector":"afc69b53","id":723,"implemented":true,"kind":"function","modifiers":[],"name":"fundSubscription","nameLocation":"4744:16:4","nodeType":"FunctionDefinition","parameters":{"id":684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":681,"mutability":"mutable","name":"_subId","nameLocation":"4768:6:4","nodeType":"VariableDeclaration","scope":723,"src":"4761:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":680,"name":"uint64","nodeType":"ElementaryTypeName","src":"4761:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":683,"mutability":"mutable","name":"_amount","nameLocation":"4783:7:4","nodeType":"VariableDeclaration","scope":723,"src":"4776:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":682,"name":"uint96","nodeType":"ElementaryTypeName","src":"4776:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"4760:31:4"},"returnParameters":{"id":685,"nodeType":"ParameterList","parameters":[],"src":"4799:0:4"},"scope":1157,"src":"4735:342:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[227],"body":{"id":792,"nodeType":"Block","src":"5321:516:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":744,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5331:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":746,"indexExpression":{"id":745,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5347:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5331:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":394,"src":"5331:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5372:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5364:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5364:7:4","typeDescriptions":{}}},"id":751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5364:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5331:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":757,"nodeType":"IfStatement","src":"5327:92:4","trueBody":{"id":756,"nodeType":"Block","src":"5376:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":753,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"5391:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5391:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":755,"nodeType":"RevertStatement","src":"5384:28:4"}]}},{"assignments":[759],"declarations":[{"constant":false,"id":759,"mutability":"mutable","name":"requestId","nameLocation":"5433:9:4","nodeType":"VariableDeclaration","scope":792,"src":"5425:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"5425:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":762,"initialValue":{"id":761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5445:17:4","subExpression":{"id":760,"name":"s_nextRequestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"5445:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5425:37:4"},{"assignments":[764],"declarations":[{"constant":false,"id":764,"mutability":"mutable","name":"preSeed","nameLocation":"5476:7:4","nodeType":"VariableDeclaration","scope":792,"src":"5468:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5468:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":767,"initialValue":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5486:15:4","subExpression":{"id":765,"name":"s_nextPreSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5486:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5468:33:4"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":768,"name":"s_requests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":419,"src":"5508:10:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Request_$414_storage_$","typeString":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request storage ref)"}},"id":770,"indexExpression":{"id":769,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5519:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5508:21:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":772,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5548:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":773,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"5574:17:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":774,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"5603:9:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"id":771,"name":"Request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":414,"src":"5532:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Request_$414_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Request storage pointer)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["subId","callbackGasLimit","numWords"],"nodeType":"FunctionCall","src":"5532:82:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Request memory"}},"src":"5508:106:4","typeDescriptions":{"typeIdentifier":"t_struct$_Request_$414_storage","typeString":"struct VRFCoordinatorV2Mock.Request storage ref"}},"id":777,"nodeType":"ExpressionStatement","src":"5508:106:4"},{"eventCall":{"arguments":[{"id":779,"name":"_keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"5654:8:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":780,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5670:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":781,"name":"preSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":764,"src":"5687:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":782,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5702:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":783,"name":"_minimumRequestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":729,"src":"5716:28:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":784,"name":"_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":731,"src":"5752:17:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":785,"name":"_numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"5777:9:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"expression":{"id":786,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5794:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5794:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":778,"name":"RandomWordsRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"5626:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$_t_address_$returns$__$","typeString":"function (bytes32,uint256,uint256,uint64,uint16,uint32,uint32,address)"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5626:184:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"EmitStatement","src":"5621:189:4"},{"expression":{"id":790,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5823:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":743,"id":791,"nodeType":"Return","src":"5816:16:4"}]},"functionSelector":"5d3b1d30","id":793,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":737,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"5283:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":738,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5291:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5291:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":740,"kind":"modifierInvocation","modifierName":{"id":736,"name":"onlyValidConsumer","nodeType":"IdentifierPath","referencedDeclaration":496,"src":"5265:17:4"},"nodeType":"ModifierInvocation","src":"5265:37:4"}],"name":"requestRandomWords","nameLocation":"5090:18:4","nodeType":"FunctionDefinition","overrides":{"id":735,"nodeType":"OverrideSpecifier","overrides":[],"src":"5256:8:4"},"parameters":{"id":734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"_keyHash","nameLocation":"5122:8:4","nodeType":"VariableDeclaration","scope":793,"src":"5114:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":724,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5114:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":727,"mutability":"mutable","name":"_subId","nameLocation":"5143:6:4","nodeType":"VariableDeclaration","scope":793,"src":"5136:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":726,"name":"uint64","nodeType":"ElementaryTypeName","src":"5136:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":729,"mutability":"mutable","name":"_minimumRequestConfirmations","nameLocation":"5162:28:4","nodeType":"VariableDeclaration","scope":793,"src":"5155:35:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":728,"name":"uint16","nodeType":"ElementaryTypeName","src":"5155:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":731,"mutability":"mutable","name":"_callbackGasLimit","nameLocation":"5203:17:4","nodeType":"VariableDeclaration","scope":793,"src":"5196:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":730,"name":"uint32","nodeType":"ElementaryTypeName","src":"5196:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":733,"mutability":"mutable","name":"_numWords","nameLocation":"5233:9:4","nodeType":"VariableDeclaration","scope":793,"src":"5226:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":732,"name":"uint32","nodeType":"ElementaryTypeName","src":"5226:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"5108:138:4"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":793,"src":"5312:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":741,"name":"uint256","nodeType":"ElementaryTypeName","src":"5312:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5311:9:4"},"scope":1157,"src":"5081:756:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[233],"body":{"id":820,"nodeType":"Block","src":"5913:197:4","statements":[{"expression":{"id":800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5919:16:4","subExpression":{"id":799,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5919:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":801,"nodeType":"ExpressionStatement","src":"5919:16:4"},{"expression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":802,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5941:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":804,"indexExpression":{"id":803,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5957:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5941:31:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":806,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5996:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5996:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":805,"name":"Subscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5975:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Subscription_$397_storage_ptr_$","typeString":"type(struct VRFCoordinatorV2Mock.Subscription storage pointer)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["owner","balance"],"nodeType":"FunctionCall","src":"5975:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_memory_ptr","typeString":"struct VRFCoordinatorV2Mock.Subscription memory"}},"src":"5941:79:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":811,"nodeType":"ExpressionStatement","src":"5941:79:4"},{"eventCall":{"arguments":[{"id":813,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6051:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"expression":{"id":814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6067:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6067:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":812,"name":"SubscriptionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6031:19:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6031:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":817,"nodeType":"EmitStatement","src":"6026:52:4"},{"expression":{"id":818,"name":"s_currentSubId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6091:14:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":798,"id":819,"nodeType":"Return","src":"6084:21:4"}]},"functionSelector":"a21a23e4","id":821,"implemented":true,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"5850:18:4","nodeType":"FunctionDefinition","overrides":{"id":795,"nodeType":"OverrideSpecifier","overrides":[],"src":"5880:8:4"},"parameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"5868:2:4"},"returnParameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"_subId","nameLocation":"5905:6:4","nodeType":"VariableDeclaration","scope":821,"src":"5898:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":796,"name":"uint64","nodeType":"ElementaryTypeName","src":"5898:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"5897:15:4"},"scope":1157,"src":"5841:269:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[248],"body":{"id":864,"nodeType":"Block","src":"6310:203:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":836,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6320:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":838,"indexExpression":{"id":837,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6336:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6320:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":839,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":394,"src":"6320:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6361:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6353:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":840,"name":"address","nodeType":"ElementaryTypeName","src":"6353:7:4","typeDescriptions":{}}},"id":843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6353:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6320:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":849,"nodeType":"IfStatement","src":"6316:92:4","trueBody":{"id":848,"nodeType":"Block","src":"6365:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":845,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6380:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6380:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":847,"nodeType":"RevertStatement","src":"6373:28:4"}]}},{"expression":{"components":[{"expression":{"baseExpression":{"id":850,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6421:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":852,"indexExpression":{"id":851,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6437:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6421:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"6421:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},{"hexValue":"30","id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6454:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"baseExpression":{"id":855,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6457:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":857,"indexExpression":{"id":856,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6473:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6457:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":858,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":394,"src":"6457:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":859,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"6488:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":861,"indexExpression":{"id":860,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"6500:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6488:19:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}}],"id":862,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6420:88:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint96_$_t_rational_0_by_1_$_t_address_$_t_array$_t_address_$dyn_storage_$","typeString":"tuple(uint96,int_const 0,address,address[] storage ref)"}},"functionReturnParameters":835,"id":863,"nodeType":"Return","src":"6413:95:4"}]},"functionSelector":"a47c7696","id":865,"implemented":true,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"6123:15:4","nodeType":"FunctionDefinition","overrides":{"id":825,"nodeType":"OverrideSpecifier","overrides":[],"src":"6180:8:4"},"parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"_subId","nameLocation":"6146:6:4","nodeType":"VariableDeclaration","scope":865,"src":"6139:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":822,"name":"uint64","nodeType":"ElementaryTypeName","src":"6139:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6138:15:4"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":827,"mutability":"mutable","name":"balance","nameLocation":"6216:7:4","nodeType":"VariableDeclaration","scope":865,"src":"6209:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":826,"name":"uint96","nodeType":"ElementaryTypeName","src":"6209:6:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"reqCount","nameLocation":"6238:8:4","nodeType":"VariableDeclaration","scope":865,"src":"6231:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":828,"name":"uint64","nodeType":"ElementaryTypeName","src":"6231:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"owner","nameLocation":"6262:5:4","nodeType":"VariableDeclaration","scope":865,"src":"6254:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"6254:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"consumers","nameLocation":"6292:9:4","nodeType":"VariableDeclaration","scope":865,"src":"6275:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":833,"nodeType":"ArrayTypeName","src":"6275:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"6201:106:4"},"scope":1157,"src":"6114:399:4","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[286],"body":{"id":891,"nodeType":"Block","src":"6612:120:4","statements":[{"eventCall":{"arguments":[{"id":877,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6644:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":878,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"6652:3:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"baseExpression":{"id":879,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6657:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":881,"indexExpression":{"id":880,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6673:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6657:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":882,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","referencedDeclaration":396,"src":"6657:31:4","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint96","typeString":"uint96"}],"id":876,"name":"SubscriptionCanceled","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"6623:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint64,address,uint256)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:66:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":884,"nodeType":"EmitStatement","src":"6618:71:4"},{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"6695:32:4","subExpression":{"components":[{"baseExpression":{"id":885,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6703:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":887,"indexExpression":{"id":886,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6719:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6703:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}}],"id":888,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"6702:25:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":890,"nodeType":"ExpressionStatement","src":"6695:32:4"}]},"functionSelector":"d7ae1d30","id":892,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":873,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":867,"src":"6604:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":874,"kind":"modifierInvocation","modifierName":{"id":872,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":926,"src":"6591:12:4"},"nodeType":"ModifierInvocation","src":"6591:20:4"}],"name":"cancelSubscription","nameLocation":"6526:18:4","nodeType":"FunctionDefinition","overrides":{"id":871,"nodeType":"OverrideSpecifier","overrides":[],"src":"6582:8:4"},"parameters":{"id":870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":867,"mutability":"mutable","name":"_subId","nameLocation":"6552:6:4","nodeType":"VariableDeclaration","scope":892,"src":"6545:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":866,"name":"uint64","nodeType":"ElementaryTypeName","src":"6545:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":869,"mutability":"mutable","name":"_to","nameLocation":"6568:3:4","nodeType":"VariableDeclaration","scope":892,"src":"6560:11:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":868,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6544:28:4"},"returnParameters":{"id":875,"nodeType":"ParameterList","parameters":[],"src":"6612:0:4"},"scope":1157,"src":"6517:215:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":925,"nodeType":"Block","src":"6773:209:4","statements":[{"assignments":[897],"declarations":[{"constant":false,"id":897,"mutability":"mutable","name":"owner","nameLocation":"6787:5:4","nodeType":"VariableDeclaration","scope":925,"src":"6779:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"6779:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":902,"initialValue":{"expression":{"baseExpression":{"id":898,"name":"s_subscriptions","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6795:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_struct$_Subscription_$397_storage_$","typeString":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription storage ref)"}},"id":900,"indexExpression":{"id":899,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"6811:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6795:23:4","typeDescriptions":{"typeIdentifier":"t_struct$_Subscription_$397_storage","typeString":"struct VRFCoordinatorV2Mock.Subscription storage ref"}},"id":901,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":394,"src":"6795:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6779:45:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6834:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6851:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6843:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":904,"name":"address","nodeType":"ElementaryTypeName","src":"6843:7:4","typeDescriptions":{}}},"id":907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6843:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6834:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":913,"nodeType":"IfStatement","src":"6830:68:4","trueBody":{"id":912,"nodeType":"Block","src":"6855:43:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":909,"name":"InvalidSubscription","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":310,"src":"6870:19:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6870:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":911,"nodeType":"RevertStatement","src":"6863:28:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6907:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6907:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6921:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6907:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":923,"nodeType":"IfStatement","src":"6903:68:4","trueBody":{"id":922,"nodeType":"Block","src":"6928:43:4","statements":[{"errorCall":{"arguments":[{"id":919,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"6958:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"MustBeSubOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"6943:14:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6943:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":921,"nodeType":"RevertStatement","src":"6936:28:4"}]}},{"id":924,"nodeType":"PlaceholderStatement","src":"6976:1:4"}]},"id":926,"name":"onlySubOwner","nameLocation":"6745:12:4","nodeType":"ModifierDefinition","parameters":{"id":895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":894,"mutability":"mutable","name":"_subId","nameLocation":"6765:6:4","nodeType":"VariableDeclaration","scope":926,"src":"6758:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":893,"name":"uint64","nodeType":"ElementaryTypeName","src":"6758:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6757:15:4"},"src":"6736:246:4","virtual":false,"visibility":"internal"},{"baseFunctions":[211],"body":{"id":946,"nodeType":"Block","src":"7122:48:4","statements":[{"expression":{"components":[{"hexValue":"33","id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7136:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},{"hexValue":"32303030303030","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7139:7:4","typeDescriptions":{"typeIdentifier":"t_rational_2000000_by_1","typeString":"int_const 2000000"},"value":"2000000"},{"arguments":[{"hexValue":"30","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7162:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7148:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":939,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7152:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":940,"nodeType":"ArrayTypeName","src":"7152:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7148:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"id":944,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7135:30:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_3_by_1_$_t_rational_2000000_by_1_$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"tuple(int_const 3,int_const 2000000,bytes32[] memory)"}},"functionReturnParameters":936,"id":945,"nodeType":"Return","src":"7128:37:4"}]},"functionSelector":"00012291","id":947,"implemented":true,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"6995:16:4","nodeType":"FunctionDefinition","overrides":{"id":928,"nodeType":"OverrideSpecifier","overrides":[],"src":"7040:8:4"},"parameters":{"id":927,"nodeType":"ParameterList","parameters":[],"src":"7011:2:4"},"returnParameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"7069:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":929,"name":"uint16","nodeType":"ElementaryTypeName","src":"7069:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"7083:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":931,"name":"uint32","nodeType":"ElementaryTypeName","src":"7083:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":947,"src":"7097:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":933,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7097:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":934,"nodeType":"ArrayTypeName","src":"7097:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7061:58:4"},"scope":1157,"src":"6986:184:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[270],"body":{"id":988,"nodeType":"Block","src":"7268:251:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":958,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"7278:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":960,"indexExpression":{"id":959,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7290:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7278:19:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7278:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":962,"name":"MAX_CONSUMERS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7308:13:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"7278:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":968,"nodeType":"IfStatement","src":"7274:89:4","trueBody":{"id":967,"nodeType":"Block","src":"7323:40:4","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":964,"name":"TooManyConsumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7338:16:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7338:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"RevertStatement","src":"7331:25:4"}]}},{"condition":{"arguments":[{"id":970,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7389:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":971,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7397:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":969,"name":"consumerIsAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":478,"src":"7373:15:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint64_$_t_address_$returns$_t_bool_$","typeString":"function (uint64,address) view returns (bool)"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7373:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":975,"nodeType":"IfStatement","src":"7369:61:4","trueBody":{"id":974,"nodeType":"Block","src":"7409:21:4","statements":[{"functionReturnParameters":957,"id":973,"nodeType":"Return","src":"7417:7:4"}]}},{"expression":{"arguments":[{"id":980,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7461:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":976,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"7436:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":978,"indexExpression":{"id":977,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7448:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7436:19:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"7436:24:4","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7436:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"ExpressionStatement","src":"7436:35:4"},{"eventCall":{"arguments":[{"id":984,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7496:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":985,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"7504:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":983,"name":"ConsumerAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":378,"src":"7482:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7482:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":987,"nodeType":"EmitStatement","src":"7477:37:4"}]},"functionSelector":"7341c10c","id":989,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":955,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":949,"src":"7260:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":956,"kind":"modifierInvocation","modifierName":{"id":954,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":926,"src":"7247:12:4"},"nodeType":"ModifierInvocation","src":"7247:20:4"}],"name":"addConsumer","nameLocation":"7183:11:4","nodeType":"FunctionDefinition","overrides":{"id":953,"nodeType":"OverrideSpecifier","overrides":[],"src":"7238:8:4"},"parameters":{"id":952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"_subId","nameLocation":"7202:6:4","nodeType":"VariableDeclaration","scope":989,"src":"7195:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":948,"name":"uint64","nodeType":"ElementaryTypeName","src":"7195:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"_consumer","nameLocation":"7218:9:4","nodeType":"VariableDeclaration","scope":989,"src":"7210:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":950,"name":"address","nodeType":"ElementaryTypeName","src":"7210:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7194:34:4"},"returnParameters":{"id":957,"nodeType":"ParameterList","parameters":[],"src":"7268:0:4"},"scope":1157,"src":"7174:345:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[278],"body":{"id":1059,"nodeType":"Block","src":"7675:337:4","statements":[{"assignments":[1008],"declarations":[{"constant":false,"id":1008,"mutability":"mutable","name":"consumers","nameLocation":"7699:9:4","nodeType":"VariableDeclaration","scope":1059,"src":"7681:27:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"7681:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1007,"nodeType":"ArrayTypeName","src":"7681:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":1012,"initialValue":{"baseExpression":{"id":1009,"name":"s_consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"7711:11:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint64_$_t_array$_t_address_$dyn_storage_$","typeString":"mapping(uint64 => address[] storage ref)"}},"id":1011,"indexExpression":{"id":1010,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7723:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7711:19:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7681:49:4"},{"body":{"id":1052,"nodeType":"Block","src":"7783:179:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1024,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7795:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1026,"indexExpression":{"id":1025,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7805:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7795:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1027,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7811:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7795:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1051,"nodeType":"IfStatement","src":"7791:165:4","trueBody":{"id":1050,"nodeType":"Block","src":"7822:134:4","statements":[{"assignments":[1030],"declarations":[{"constant":false,"id":1030,"mutability":"mutable","name":"last","nameLocation":"7840:4:4","nodeType":"VariableDeclaration","scope":1050,"src":"7832:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"7832:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1037,"initialValue":{"baseExpression":{"id":1031,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7847:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1036,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1032,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7857:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7857:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7876:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7857:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7847:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7832:46:4"},{"expression":{"id":1042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1038,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7888:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1040,"indexExpression":{"id":1039,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7898:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7888:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1041,"name":"last","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1030,"src":"7903:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7888:19:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1043,"nodeType":"ExpressionStatement","src":"7888:19:4"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1044,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7917:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"7917:13:4","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7917:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"7917:15:4"},{"id":1049,"nodeType":"Break","src":"7942:5:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1017,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7756:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1018,"name":"consumers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"7760:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[] storage pointer"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7760:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7756:20:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1053,"initializationExpression":{"assignments":[1014],"declarations":[{"constant":false,"id":1014,"mutability":"mutable","name":"i","nameLocation":"7749:1:4","nodeType":"VariableDeclaration","scope":1053,"src":"7741:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1013,"name":"uint256","nodeType":"ElementaryTypeName","src":"7741:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1016,"initialValue":{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7753:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7741:13:4"},"loopExpression":{"expression":{"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7778:3:4","subExpression":{"id":1021,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"7778:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1023,"nodeType":"ExpressionStatement","src":"7778:3:4"},"nodeType":"ForStatement","src":"7736:226:4"},{"eventCall":{"arguments":[{"id":1055,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7989:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1056,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7997:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1054,"name":"ConsumerRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"7973:15:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$_t_address_$returns$__$","typeString":"function (uint64,address)"}},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7973:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1058,"nodeType":"EmitStatement","src":"7968:39:4"}]},"functionSelector":"9f87fad7","id":1060,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":997,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7624:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"id":998,"kind":"modifierInvocation","modifierName":{"id":996,"name":"onlySubOwner","nodeType":"IdentifierPath","referencedDeclaration":926,"src":"7611:12:4"},"nodeType":"ModifierInvocation","src":"7611:20:4"},{"arguments":[{"id":1000,"name":"_subId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"7654:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":1001,"name":"_consumer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"7662:9:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1002,"kind":"modifierInvocation","modifierName":{"id":999,"name":"onlyValidConsumer","nodeType":"IdentifierPath","referencedDeclaration":496,"src":"7636:17:4"},"nodeType":"ModifierInvocation","src":"7636:36:4"}],"name":"removeConsumer","nameLocation":"7532:14:4","nodeType":"FunctionDefinition","overrides":{"id":995,"nodeType":"OverrideSpecifier","overrides":[],"src":"7598:8:4"},"parameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":991,"mutability":"mutable","name":"_subId","nameLocation":"7554:6:4","nodeType":"VariableDeclaration","scope":1060,"src":"7547:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":990,"name":"uint64","nodeType":"ElementaryTypeName","src":"7547:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"_consumer","nameLocation":"7570:9:4","nodeType":"VariableDeclaration","scope":1060,"src":"7562:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"7562:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7546:34:4"},"returnParameters":{"id":1003,"nodeType":"ParameterList","parameters":[],"src":"7675:0:4"},"scope":1157,"src":"7523:489:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1077,"nodeType":"Block","src":"8220:46:4","statements":[{"expression":{"components":[{"hexValue":"34","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8234:1:4","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},{"hexValue":"325f3530305f303030","id":1072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8237:9:4","typeDescriptions":{"typeIdentifier":"t_rational_2500000_by_1","typeString":"int_const 2500000"},"value":"2_500_000"},{"hexValue":"325f373030","id":1073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8248:5:4","typeDescriptions":{"typeIdentifier":"t_rational_2700_by_1","typeString":"int_const 2700"},"value":"2_700"},{"hexValue":"3333323835","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8255:5:4","typeDescriptions":{"typeIdentifier":"t_rational_33285_by_1","typeString":"int_const 33285"},"value":"33285"}],"id":1075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8233:28:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_4_by_1_$_t_rational_2500000_by_1_$_t_rational_2700_by_1_$_t_rational_33285_by_1_$","typeString":"tuple(int_const 4,int_const 2500000,int_const 2700,int_const 33285)"}},"functionReturnParameters":1070,"id":1076,"nodeType":"Return","src":"8226:35:4"}]},"functionSelector":"c3f909d4","id":1078,"implemented":true,"kind":"function","modifiers":[],"name":"getConfig","nameLocation":"8025:9:4","nodeType":"FunctionDefinition","parameters":{"id":1061,"nodeType":"ParameterList","parameters":[],"src":"8034:2:4"},"returnParameters":{"id":1070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"8086:27:4","nodeType":"VariableDeclaration","scope":1078,"src":"8079:34:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1062,"name":"uint16","nodeType":"ElementaryTypeName","src":"8079:6:4","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"maxGasLimit","nameLocation":"8128:11:4","nodeType":"VariableDeclaration","scope":1078,"src":"8121:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1064,"name":"uint32","nodeType":"ElementaryTypeName","src":"8121:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"stalenessSeconds","nameLocation":"8154:16:4","nodeType":"VariableDeclaration","scope":1078,"src":"8147:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1066,"name":"uint32","nodeType":"ElementaryTypeName","src":"8147:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"gasAfterPaymentCalculation","nameLocation":"8185:26:4","nodeType":"VariableDeclaration","scope":1078,"src":"8178:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1068,"name":"uint32","nodeType":"ElementaryTypeName","src":"8178:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"8071:146:4"},"scope":1157,"src":"8016:250:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1110,"nodeType":"Block","src":"8670:190:4","statements":[{"expression":{"components":[{"hexValue":"313030303030","id":1099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8691:6:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8717:6:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8743:6:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:6:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"313030303030","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8795:6:4","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},{"hexValue":"30","id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8821:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8830:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8839:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8848:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":1108,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8683:172:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_100000_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 100000,int_const 0,int_const 0,int_const 0,int_const 0)"}},"functionReturnParameters":1098,"id":1109,"nodeType":"Return","src":"8676:179:4"}]},"functionSelector":"5fbbc0d2","id":1111,"implemented":true,"kind":"function","modifiers":[],"name":"getFeeConfig","nameLocation":"8279:12:4","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"8291:2:4"},"returnParameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1081,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier1","nameLocation":"8343:30:4","nodeType":"VariableDeclaration","scope":1111,"src":"8336:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1080,"name":"uint32","nodeType":"ElementaryTypeName","src":"8336:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier2","nameLocation":"8388:30:4","nodeType":"VariableDeclaration","scope":1111,"src":"8381:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1082,"name":"uint32","nodeType":"ElementaryTypeName","src":"8381:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier3","nameLocation":"8433:30:4","nodeType":"VariableDeclaration","scope":1111,"src":"8426:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1084,"name":"uint32","nodeType":"ElementaryTypeName","src":"8426:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier4","nameLocation":"8478:30:4","nodeType":"VariableDeclaration","scope":1111,"src":"8471:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1086,"name":"uint32","nodeType":"ElementaryTypeName","src":"8471:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1089,"mutability":"mutable","name":"fulfillmentFlatFeeLinkPPMTier5","nameLocation":"8523:30:4","nodeType":"VariableDeclaration","scope":1111,"src":"8516:37:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1088,"name":"uint32","nodeType":"ElementaryTypeName","src":"8516:6:4","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"reqsForTier2","nameLocation":"8568:12:4","nodeType":"VariableDeclaration","scope":1111,"src":"8561:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1090,"name":"uint24","nodeType":"ElementaryTypeName","src":"8561:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"reqsForTier3","nameLocation":"8595:12:4","nodeType":"VariableDeclaration","scope":1111,"src":"8588:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1092,"name":"uint24","nodeType":"ElementaryTypeName","src":"8588:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"reqsForTier4","nameLocation":"8622:12:4","nodeType":"VariableDeclaration","scope":1111,"src":"8615:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1094,"name":"uint24","nodeType":"ElementaryTypeName","src":"8615:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"reqsForTier5","nameLocation":"8649:12:4","nodeType":"VariableDeclaration","scope":1111,"src":"8642:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1096,"name":"uint24","nodeType":"ElementaryTypeName","src":"8642:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"8328:339:4"},"scope":1157,"src":"8270:590:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1118,"nodeType":"Block","src":"8932:49:4","statements":[{"expression":{"hexValue":"34303030303030303030303030303030","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8945:16:4","typeDescriptions":{"typeIdentifier":"t_rational_4000000000000000_by_1","typeString":"int_const 4000000000000000"},"value":"4000000000000000"},"functionReturnParameters":1115,"id":1117,"nodeType":"Return","src":"8938:23:4"}]},"functionSelector":"356dac71","id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"getFallbackWeiPerUnitLink","nameLocation":"8873:25:4","nodeType":"FunctionDefinition","parameters":{"id":1112,"nodeType":"ParameterList","parameters":[],"src":"8898:2:4"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1119,"src":"8924:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1113,"name":"int256","nodeType":"ElementaryTypeName","src":"8924:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8923:8:4"},"scope":1157,"src":"8864:117:4","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[256],"body":{"id":1131,"nodeType":"Block","src":"9084:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9097:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1127,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9090:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9090:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1130,"nodeType":"ExpressionStatement","src":"9090:25:4"}]},"functionSelector":"04c357cb","id":1132,"implemented":true,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"8994:32:4","nodeType":"FunctionDefinition","overrides":{"id":1125,"nodeType":"OverrideSpecifier","overrides":[],"src":"9075:8:4"},"parameters":{"id":1124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"_subId","nameLocation":"9034:6:4","nodeType":"VariableDeclaration","scope":1132,"src":"9027:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1120,"name":"uint64","nodeType":"ElementaryTypeName","src":"9027:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"_newOwner","nameLocation":"9050:9:4","nodeType":"VariableDeclaration","scope":1132,"src":"9042:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1122,"name":"address","nodeType":"ElementaryTypeName","src":"9042:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9026:34:4"},"returnParameters":{"id":1126,"nodeType":"ParameterList","parameters":[],"src":"9084:0:4"},"scope":1157,"src":"8985:135:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[262],"body":{"id":1142,"nodeType":"Block","src":"9203:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9216:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1138,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9209:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9209:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"9209:25:4"}]},"functionSelector":"82359740","id":1143,"implemented":true,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"9133:31:4","nodeType":"FunctionDefinition","overrides":{"id":1136,"nodeType":"OverrideSpecifier","overrides":[],"src":"9194:8:4"},"parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1134,"mutability":"mutable","name":"_subId","nameLocation":"9172:6:4","nodeType":"VariableDeclaration","scope":1143,"src":"9165:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1133,"name":"uint64","nodeType":"ElementaryTypeName","src":"9165:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9164:15:4"},"returnParameters":{"id":1137,"nodeType":"ParameterList","parameters":[],"src":"9203:0:4"},"scope":1157,"src":"9124:115:4","stateMutability":"pure","virtual":false,"visibility":"external"},{"baseFunctions":[293],"body":{"id":1155,"nodeType":"Block","src":"9323:36:4","statements":[{"expression":{"arguments":[{"hexValue":"6e6f7420696d706c656d656e746564","id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9336:17:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""},"value":"not implemented"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","typeString":"literal_string \"not implemented\""}],"id":1151,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9329:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1153,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9329:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1154,"nodeType":"ExpressionStatement","src":"9329:25:4"}]},"functionSelector":"e82ad7d4","id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"9252:20:4","nodeType":"FunctionDefinition","overrides":{"id":1147,"nodeType":"OverrideSpecifier","overrides":[],"src":"9299:8:4"},"parameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"subId","nameLocation":"9280:5:4","nodeType":"VariableDeclaration","scope":1156,"src":"9273:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":1144,"name":"uint64","nodeType":"ElementaryTypeName","src":"9273:6:4","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"9272:14:4"},"returnParameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"9317:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1148,"name":"bool","nodeType":"ElementaryTypeName","src":"9317:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9316:6:4"},"scope":1157,"src":"9243:116:4","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":1158,"src":"254:9107:4","usedErrors":[310,312,316,318,320,322]}],"src":"92:9270:4"},"id":4},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[2894],"Ownable":[1270]},"id":1271,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1160,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1271,"sourceUnit":2895,"src":"127:30:5","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1162,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"683:7:5"},"id":1163,"nodeType":"InheritanceSpecifier","src":"683:7:5"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"159:494:5","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":1270,"linearizedBaseContracts":[1270,2894],"name":"Ownable","nameLocation":"672:7:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1165,"mutability":"mutable","name":"_owner","nameLocation":"713:6:5","nodeType":"VariableDeclaration","scope":1270,"src":"697:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1164,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":1171,"name":"OwnershipTransferred","nameLocation":"732:20:5","nodeType":"EventDefinition","parameters":{"id":1170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1167,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:5","nodeType":"VariableDeclaration","scope":1171,"src":"753:29:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1166,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1169,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:5","nodeType":"VariableDeclaration","scope":1171,"src":"784:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1168,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:5"},"src":"726:84:5"},{"body":{"id":1180,"nodeType":"Block","src":"926:49:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"955:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1175,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"936:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"936:32:5"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"816:91:5","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":1181,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[],"src":"923:2:5"},"returnParameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"926:0:5"},"scope":1270,"src":"912:63:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1188,"nodeType":"Block","src":"1084:41:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1184,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"1094:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1186,"nodeType":"ExpressionStatement","src":"1094:13:5"},{"id":1187,"nodeType":"PlaceholderStatement","src":"1117:1:5"}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"981:77:5","text":" @dev Throws if called by any account other than the owner."},"id":1189,"name":"onlyOwner","nameLocation":"1072:9:5","nodeType":"ModifierDefinition","parameters":{"id":1183,"nodeType":"ParameterList","parameters":[],"src":"1081:2:5"},"src":"1063:62:5","virtual":false,"visibility":"internal"},{"body":{"id":1197,"nodeType":"Block","src":"1256:30:5","statements":[{"expression":{"id":1195,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"1273:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1194,"id":1196,"nodeType":"Return","src":"1266:13:5"}]},"documentation":{"id":1190,"nodeType":"StructuredDocumentation","src":"1131:65:5","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":1198,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:5","nodeType":"FunctionDefinition","parameters":{"id":1191,"nodeType":"ParameterList","parameters":[],"src":"1215:2:5"},"returnParameters":{"id":1194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1198,"src":"1247:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1192,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:5"},"scope":1270,"src":"1201:85:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1211,"nodeType":"Block","src":"1404:85:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1203,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1198,"src":"1422:5:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1205,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"1433:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":1208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":1202,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"ExpressionStatement","src":"1414:68:5"}]},"documentation":{"id":1199,"nodeType":"StructuredDocumentation","src":"1292:62:5","text":" @dev Throws if the sender is not the owner."},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:5","nodeType":"FunctionDefinition","parameters":{"id":1200,"nodeType":"ParameterList","parameters":[],"src":"1379:2:5"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[],"src":"1404:0:5"},"scope":1270,"src":"1359:130:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1225,"nodeType":"Block","src":"1878:47:5","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1219,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:5","typeDescriptions":{}}},"id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1907:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1218,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"1888:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1888:30:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1224,"nodeType":"ExpressionStatement","src":"1888:30:5"}]},"documentation":{"id":1213,"nodeType":"StructuredDocumentation","src":"1495:324:5","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":1226,"implemented":true,"kind":"function","modifiers":[{"id":1216,"kind":"modifierInvocation","modifierName":{"id":1215,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1189,"src":"1868:9:5"},"nodeType":"ModifierInvocation","src":"1868:9:5"}],"name":"renounceOwnership","nameLocation":"1833:17:5","nodeType":"FunctionDefinition","parameters":{"id":1214,"nodeType":"ParameterList","parameters":[],"src":"1850:2:5"},"returnParameters":{"id":1217,"nodeType":"ParameterList","parameters":[],"src":"1878:0:5"},"scope":1270,"src":"1824:101:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1248,"nodeType":"Block","src":"2144:128:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1235,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2162:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1236,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:5","typeDescriptions":{}}},"id":1239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2174:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":1241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":1234,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2154:73:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1243,"nodeType":"ExpressionStatement","src":"2154:73:5"},{"expression":{"arguments":[{"id":1245,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1229,"src":"2256:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1244,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2237:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2237:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1247,"nodeType":"ExpressionStatement","src":"2237:28:5"}]},"documentation":{"id":1227,"nodeType":"StructuredDocumentation","src":"1931:138:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":1249,"implemented":true,"kind":"function","modifiers":[{"id":1232,"kind":"modifierInvocation","modifierName":{"id":1231,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1189,"src":"2134:9:5"},"nodeType":"ModifierInvocation","src":"2134:9:5"}],"name":"transferOwnership","nameLocation":"2083:17:5","nodeType":"FunctionDefinition","parameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:5","nodeType":"VariableDeclaration","scope":1249,"src":"2101:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1228,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:5"},"returnParameters":{"id":1233,"nodeType":"ParameterList","parameters":[],"src":"2144:0:5"},"scope":1270,"src":"2074:198:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1268,"nodeType":"Block","src":"2489:124:5","statements":[{"assignments":[1256],"declarations":[{"constant":false,"id":1256,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:5","nodeType":"VariableDeclaration","scope":1268,"src":"2499:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1255,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1258,"initialValue":{"id":1257,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2518:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:5"},{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1259,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1165,"src":"2534:6:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1260,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2543:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1262,"nodeType":"ExpressionStatement","src":"2534:17:5"},{"eventCall":{"arguments":[{"id":1264,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"2587:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1265,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1252,"src":"2597:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1263,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"2566:20:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2566:40:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1267,"nodeType":"EmitStatement","src":"2561:45:5"}]},"documentation":{"id":1250,"nodeType":"StructuredDocumentation","src":"2278:143:5","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":1269,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:5","nodeType":"FunctionDefinition","parameters":{"id":1253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1252,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:5","nodeType":"VariableDeclaration","scope":1269,"src":"2454:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:5"},"returnParameters":{"id":1254,"nodeType":"ParameterList","parameters":[],"src":"2489:0:5"},"scope":1270,"src":"2426:187:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1271,"src":"654:1961:5","usedErrors":[]}],"src":"102:2514:5"},"id":5},"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[3159]},"id":1274,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1272,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":1273,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1274,"sourceUnit":3160,"src":"116:44:6","symbolAliases":[],"unitAlias":""}],"src":"91:70:6"},"id":6},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[3159],"IERC4906":[1295],"IERC721":[2341]},"id":1296,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1275,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:7"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":1276,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1296,"sourceUnit":1274,"src":"132:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":1277,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1296,"sourceUnit":1299,"src":"156:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1279,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"248:7:7"},"id":1280,"nodeType":"InheritanceSpecifier","src":"248:7:7"},{"baseName":{"id":1281,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2341,"src":"257:7:7"},"id":1282,"nodeType":"InheritanceSpecifier","src":"257:7:7"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1278,"nodeType":"StructuredDocumentation","src":"181:45:7","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":1295,"linearizedBaseContracts":[1295,2341,3159],"name":"IERC4906","nameLocation":"236:8:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1283,"nodeType":"StructuredDocumentation","src":"271:201:7","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"id":1287,"name":"MetadataUpdate","nameLocation":"483:14:7","nodeType":"EventDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1285,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"506:8:7","nodeType":"VariableDeclaration","scope":1287,"src":"498:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1284,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:7"},"src":"477:39:7"},{"anonymous":false,"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"522:212:7","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"id":1294,"name":"BatchMetadataUpdate","nameLocation":"745:19:7","nodeType":"EventDefinition","parameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"773:12:7","nodeType":"VariableDeclaration","scope":1294,"src":"765:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1292,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"795:10:7","nodeType":"VariableDeclaration","scope":1294,"src":"787:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1291,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:7"},"src":"739:68:7"}],"scope":1296,"src":"226:583:7","usedErrors":[]}],"src":"107:703:7"},"id":7},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[3159],"IERC721":[2341]},"id":1299,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1297,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":1298,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1299,"sourceUnit":2342,"src":"116:37:8","symbolAliases":[],"unitAlias":""}],"src":"91:63:8"},"id":8},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[2872],"Context":[2894],"ERC165":[3147],"ERC721":[2225],"IERC165":[3159],"IERC721":[2341],"IERC721Metadata":[2542],"IERC721Receiver":[2359],"Math":[4025],"SignedMath":[4130],"Strings":[3123]},"id":2226,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1300,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":2342,"src":"132:23:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":1302,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":2360,"src":"156:31:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1303,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":2543,"src":"188:42:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1304,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":2873,"src":"231:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1305,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":2895,"src":"265:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1306,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":3124,"src":"299:33:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1307,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2226,"sourceUnit":3148,"src":"333:46:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1309,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2894,"src":"647:7:9"},"id":1310,"nodeType":"InheritanceSpecifier","src":"647:7:9"},{"baseName":{"id":1311,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3147,"src":"656:6:9"},"id":1312,"nodeType":"InheritanceSpecifier","src":"656:6:9"},{"baseName":{"id":1313,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2341,"src":"664:7:9"},"id":1314,"nodeType":"InheritanceSpecifier","src":"664:7:9"},{"baseName":{"id":1315,"name":"IERC721Metadata","nodeType":"IdentifierPath","referencedDeclaration":2542,"src":"673:15:9"},"id":1316,"nodeType":"InheritanceSpecifier","src":"673:15:9"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"381:246:9","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2225,"linearizedBaseContracts":[2225,2542,2341,3147,3159,2894],"name":"ERC721","nameLocation":"637:6:9","nodeType":"ContractDefinition","nodes":[{"id":1319,"libraryName":{"id":1317,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2872,"src":"701:7:9"},"nodeType":"UsingForDirective","src":"695:26:9","typeName":{"id":1318,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":1322,"libraryName":{"id":1320,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":3123,"src":"732:7:9"},"nodeType":"UsingForDirective","src":"726:26:9","typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1324,"mutability":"mutable","name":"_name","nameLocation":"791:5:9","nodeType":"VariableDeclaration","scope":2225,"src":"776:20:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1323,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1326,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:9","nodeType":"VariableDeclaration","scope":2225,"src":"823:22:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1325,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1330,"mutability":"mutable","name":"_owners","nameLocation":"934:7:9","nodeType":"VariableDeclaration","scope":2225,"src":"898:43:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1329,"keyType":{"id":1327,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1334,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:9","nodeType":"VariableDeclaration","scope":2225,"src":"992:45:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1333,"keyType":{"id":1331,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":1332,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1338,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:9","nodeType":"VariableDeclaration","scope":2225,"src":"1093:51:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1337,"keyType":{"id":1335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":1336,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1344,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:9","nodeType":"VariableDeclaration","scope":2225,"src":"1199:71:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1343,"keyType":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueType":{"id":1342,"keyType":{"id":1340,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1341,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1360,"nodeType":"Block","src":"1446:57:9","statements":[{"expression":{"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1352,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1456:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1353,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"1464:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1355,"nodeType":"ExpressionStatement","src":"1456:13:9"},{"expression":{"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1356,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"1479:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1357,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"1489:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1359,"nodeType":"ExpressionStatement","src":"1479:17:9"}]},"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"1277:108:9","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1361,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"name_","nameLocation":"1416:5:9","nodeType":"VariableDeclaration","scope":1361,"src":"1402:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1346,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:9","nodeType":"VariableDeclaration","scope":1361,"src":"1423:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1348,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:9"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[],"src":"1446:0:9"},"scope":2225,"src":"1390:113:9","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3146,3158],"body":{"id":1391,"nodeType":"Block","src":"1678:192:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1707:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1374,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"1727:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2341_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2341_$","typeString":"type(contract IERC721)"}],"id":1373,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1722:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2341","typeString":"type(contract IERC721)"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1378,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1763:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1380,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2542,"src":"1783:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2542_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2542_$","typeString":"type(contract IERC721Metadata)"}],"id":1379,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:9","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1778:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2542","typeString":"type(contract IERC721Metadata)"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1387,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"1851:11:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1385,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2225_$","typeString":"type(contract super ERC721)"}},"id":1386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3146,"src":"1827:23:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1827:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1371,"id":1390,"nodeType":"Return","src":"1688:175:9"}]},"documentation":{"id":1362,"nodeType":"StructuredDocumentation","src":"1509:56:9","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:9","nodeType":"FunctionDefinition","overrides":{"id":1368,"nodeType":"OverrideSpecifier","overrides":[{"id":1366,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":3147,"src":"1646:6:9"},{"id":1367,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"1654:7:9"}],"src":"1637:25:9"},"parameters":{"id":1365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1364,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:9","nodeType":"VariableDeclaration","scope":1392,"src":"1597:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1363,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:9"},"returnParameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1392,"src":"1672:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1369,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:9"},"scope":2225,"src":"1570:300:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2266],"body":{"id":1415,"nodeType":"Block","src":"2010:123:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1402,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"2028:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1404,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1403,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:9","typeDescriptions":{}}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2037:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":1401,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2020:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"2020:73:9"},{"expression":{"baseExpression":{"id":1411,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"2110:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1413,"indexExpression":{"id":1412,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"2120:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1400,"id":1414,"nodeType":"Return","src":"2103:23:9"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"1876:48:9","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1416,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:9","nodeType":"FunctionDefinition","overrides":{"id":1397,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:9"},"parameters":{"id":1396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"owner","nameLocation":"1956:5:9","nodeType":"VariableDeclaration","scope":1416,"src":"1948:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:9"},"returnParameters":{"id":1400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1399,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"2001:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:9"},"scope":2225,"src":"1929:204:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2274],"body":{"id":1443,"nodeType":"Block","src":"2271:138:9","statements":[{"assignments":[1426],"declarations":[{"constant":false,"id":1426,"mutability":"mutable","name":"owner","nameLocation":"2289:5:9","nodeType":"VariableDeclaration","scope":1443,"src":"2281:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1425,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1430,"initialValue":{"arguments":[{"id":1428,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1419,"src":"2306:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1427,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"2297:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2297:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1432,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2332:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1433,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:9","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2341:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":1438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":1431,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2324:56:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1440,"nodeType":"ExpressionStatement","src":"2324:56:9"},{"expression":{"id":1441,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1426,"src":"2397:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1424,"id":1442,"nodeType":"Return","src":"2390:12:9"}]},"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"2139:46:9","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:9","nodeType":"FunctionDefinition","overrides":{"id":1421,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:9"},"parameters":{"id":1420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1419,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:9","nodeType":"VariableDeclaration","scope":1444,"src":"2207:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1418,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:9"},"returnParameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"2262:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1422,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:9"},"scope":2225,"src":"2190:219:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2527],"body":{"id":1453,"nodeType":"Block","src":"2540:29:9","statements":[{"expression":{"id":1451,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2557:5:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1450,"id":1452,"nodeType":"Return","src":"2550:12:9"}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"2415:51:9","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1454,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:9","nodeType":"FunctionDefinition","overrides":{"id":1447,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:9"},"parameters":{"id":1446,"nodeType":"ParameterList","parameters":[],"src":"2484:2:9"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1454,"src":"2525:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1448,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:9"},"scope":2225,"src":"2471:98:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2533],"body":{"id":1463,"nodeType":"Block","src":"2704:31:9","statements":[{"expression":{"id":1461,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1326,"src":"2721:7:9","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1460,"id":1462,"nodeType":"Return","src":"2714:14:9"}]},"documentation":{"id":1455,"nodeType":"StructuredDocumentation","src":"2575:53:9","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1464,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:9","nodeType":"FunctionDefinition","overrides":{"id":1457,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:9"},"parameters":{"id":1456,"nodeType":"ParameterList","parameters":[],"src":"2648:2:9"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1464,"src":"2689:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1458,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:9"},"scope":2225,"src":"2633:102:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2541],"body":{"id":1502,"nodeType":"Block","src":"2889:188:9","statements":[{"expression":{"arguments":[{"id":1474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"2914:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1473,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2899:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2899:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1476,"nodeType":"ExpressionStatement","src":"2899:23:9"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:9","nodeType":"VariableDeclaration","scope":1502,"src":"2933:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1477,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1479,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"2957:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2957:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:9"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1484,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"2990:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1483,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:9","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1482,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:9","typeDescriptions":{}}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2984:14:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2984:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:9","trueExpression":{"arguments":[{"arguments":[{"id":1493,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3036:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"3045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2953,"src":"3045:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3045:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1491,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:9","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:9","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3019:45:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1489,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:9","typeDescriptions":{}}},"id":1498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3012:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1472,"id":1501,"nodeType":"Return","src":"2977:93:9"}]},"documentation":{"id":1465,"nodeType":"StructuredDocumentation","src":"2741:55:9","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1503,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:9","nodeType":"FunctionDefinition","overrides":{"id":1469,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:9"},"parameters":{"id":1468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1467,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:9","nodeType":"VariableDeclaration","scope":1503,"src":"2819:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1466,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:9"},"returnParameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1471,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1503,"src":"2874:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1470,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:9"},"scope":2225,"src":"2801:276:9","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1511,"nodeType":"Block","src":"3385:26:9","statements":[{"expression":{"hexValue":"","id":1509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1508,"id":1510,"nodeType":"Return","src":"3395:9:9"}]},"documentation":{"id":1504,"nodeType":"StructuredDocumentation","src":"3083:231:9","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1512,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:9","nodeType":"FunctionDefinition","parameters":{"id":1505,"nodeType":"ParameterList","parameters":[],"src":"3336:2:9"},"returnParameters":{"id":1508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1512,"src":"3370:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1506,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:9"},"scope":2225,"src":"3319:92:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2314],"body":{"id":1554,"nodeType":"Block","src":"3538:336:9","statements":[{"assignments":[1522],"declarations":[{"constant":false,"id":1522,"mutability":"mutable","name":"owner","nameLocation":"3556:5:9","nodeType":"VariableDeclaration","scope":1554,"src":"3548:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1521,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1527,"initialValue":{"arguments":[{"id":1525,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"3579:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1523,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"3564:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"3564:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3564:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1529,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3605:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1530,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3611:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":1532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":1528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3597:57:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1534,"nodeType":"ExpressionStatement","src":"3597:57:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1536,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3686:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3686:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1538,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3702:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1541,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3728:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1542,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"3735:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3735:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1540,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"3711:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3711:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":1546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":1535,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3665:170:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"3665:170:9"},{"expression":{"arguments":[{"id":1550,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1515,"src":"3855:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1551,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1517,"src":"3859:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1549,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"3846:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3846:21:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1553,"nodeType":"ExpressionStatement","src":"3846:21:9"}]},"documentation":{"id":1513,"nodeType":"StructuredDocumentation","src":"3417:46:9","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1555,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:9","nodeType":"FunctionDefinition","overrides":{"id":1519,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:9"},"parameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"to","nameLocation":"3493:2:9","nodeType":"VariableDeclaration","scope":1555,"src":"3485:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:9","nodeType":"VariableDeclaration","scope":1555,"src":"3497:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:9"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[],"src":"3538:0:9"},"scope":2225,"src":"3468:406:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2330],"body":{"id":1572,"nodeType":"Block","src":"4020:82:9","statements":[{"expression":{"arguments":[{"id":1565,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"4045:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1564,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"4030:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4030:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1567,"nodeType":"ExpressionStatement","src":"4030:23:9"},{"expression":{"baseExpression":{"id":1568,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"4071:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1570,"indexExpression":{"id":1569,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"4087:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1563,"id":1571,"nodeType":"Return","src":"4064:31:9"}]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"3880:50:9","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1573,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:9","nodeType":"FunctionDefinition","overrides":{"id":1560,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:9"},"parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:9","nodeType":"VariableDeclaration","scope":1573,"src":"3956:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:9"},"returnParameters":{"id":1563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1562,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1573,"src":"4011:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1561,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:9"},"scope":2225,"src":"3935:167:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2322],"body":{"id":1589,"nodeType":"Block","src":"4253:69:9","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1583,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4282:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4282:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1585,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1576,"src":"4296:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1586,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1578,"src":"4306:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1582,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2107,"src":"4263:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4263:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1588,"nodeType":"ExpressionStatement","src":"4263:52:9"}]},"documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"4108:56:9","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1590,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:9","nodeType":"FunctionDefinition","overrides":{"id":1580,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:9"},"parameters":{"id":1579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1576,"mutability":"mutable","name":"operator","nameLocation":"4204:8:9","nodeType":"VariableDeclaration","scope":1590,"src":"4196:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"approved","nameLocation":"4219:8:9","nodeType":"VariableDeclaration","scope":1590,"src":"4214:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1577,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:9"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[],"src":"4253:0:9"},"scope":2225,"src":"4169:153:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2340],"body":{"id":1607,"nodeType":"Block","src":"4491:59:9","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1601,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"4508:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1603,"indexExpression":{"id":1602,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1593,"src":"4527:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1605,"indexExpression":{"id":1604,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1595,"src":"4534:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1600,"id":1606,"nodeType":"Return","src":"4501:42:9"}]},"documentation":{"id":1591,"nodeType":"StructuredDocumentation","src":"4328:55:9","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:9","nodeType":"FunctionDefinition","overrides":{"id":1597,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:9"},"parameters":{"id":1596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1593,"mutability":"mutable","name":"owner","nameLocation":"4422:5:9","nodeType":"VariableDeclaration","scope":1608,"src":"4414:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1592,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1595,"mutability":"mutable","name":"operator","nameLocation":"4437:8:9","nodeType":"VariableDeclaration","scope":1608,"src":"4429:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:9"},"returnParameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1608,"src":"4485:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1598,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:9"},"scope":2225,"src":"4388:162:9","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2306],"body":{"id":1634,"nodeType":"Block","src":"4701:207:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1621,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"4790:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4790:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1623,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"4804:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1620,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"4771:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4771:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1627,"nodeType":"ExpressionStatement","src":"4763:99:9"},{"expression":{"arguments":[{"id":1629,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"4883:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1630,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1613,"src":"4889:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1631,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1615,"src":"4893:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1628,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"4873:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4873:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1633,"nodeType":"ExpressionStatement","src":"4873:28:9"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"4556:51:9","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1635,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:9","nodeType":"FunctionDefinition","overrides":{"id":1617,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:9"},"parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"from","nameLocation":"4642:4:9","nodeType":"VariableDeclaration","scope":1635,"src":"4634:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1610,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1613,"mutability":"mutable","name":"to","nameLocation":"4656:2:9","nodeType":"VariableDeclaration","scope":1635,"src":"4648:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1612,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1615,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:9","nodeType":"VariableDeclaration","scope":1635,"src":"4660:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:9"},"returnParameters":{"id":1618,"nodeType":"ParameterList","parameters":[],"src":"4701:0:9"},"scope":2225,"src":"4612:296:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2296],"body":{"id":1653,"nodeType":"Block","src":"5067:56:9","statements":[{"expression":{"arguments":[{"id":1647,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1638,"src":"5094:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1648,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5100:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1649,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5104:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1646,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1654,1684],"referencedDeclaration":1684,"src":"5077:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5077:39:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"5077:39:9"}]},"documentation":{"id":1636,"nodeType":"StructuredDocumentation","src":"4914:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1654,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:9","nodeType":"FunctionDefinition","overrides":{"id":1644,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:9"},"parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"from","nameLocation":"5008:4:9","nodeType":"VariableDeclaration","scope":1654,"src":"5000:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1640,"mutability":"mutable","name":"to","nameLocation":"5022:2:9","nodeType":"VariableDeclaration","scope":1654,"src":"5014:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:9","nodeType":"VariableDeclaration","scope":1654,"src":"5026:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:9"},"returnParameters":{"id":1645,"nodeType":"ParameterList","parameters":[],"src":"5067:0:9"},"scope":2225,"src":"4974:149:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2286],"body":{"id":1683,"nodeType":"Block","src":"5301:164:9","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1669,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5338:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5352:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1668,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"5319:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5319:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":1667,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5311:99:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"5311:99:9"},{"expression":{"arguments":[{"id":1677,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"5434:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1678,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1659,"src":"5440:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"5444:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1680,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1663,"src":"5453:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1676,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"5420:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5420:38:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1682,"nodeType":"ExpressionStatement","src":"5420:38:9"}]},"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"5129:55:9","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1684,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:9","nodeType":"FunctionDefinition","overrides":{"id":1665,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:9"},"parameters":{"id":1664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"from","nameLocation":"5223:4:9","nodeType":"VariableDeclaration","scope":1684,"src":"5215:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1656,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1659,"mutability":"mutable","name":"to","nameLocation":"5237:2:9","nodeType":"VariableDeclaration","scope":1684,"src":"5229:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1658,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1661,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:9","nodeType":"VariableDeclaration","scope":1684,"src":"5241:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1660,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1663,"mutability":"mutable","name":"data","nameLocation":"5271:4:9","nodeType":"VariableDeclaration","scope":1684,"src":"5258:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1662,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:9"},"returnParameters":{"id":1666,"nodeType":"ParameterList","parameters":[],"src":"5301:0:9"},"scope":2225,"src":"5189:276:9","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1712,"nodeType":"Block","src":"6428:165:9","statements":[{"expression":{"arguments":[{"id":1697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6448:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6454:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1699,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6458:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1696,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"6438:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6438:28:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"ExpressionStatement","src":"6438:28:9"},{"expression":{"arguments":[{"arguments":[{"id":1704,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1687,"src":"6507:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1705,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1689,"src":"6513:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1706,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1691,"src":"6517:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1707,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1693,"src":"6526:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1703,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"6484:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6484:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6476:110:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1711,"nodeType":"ExpressionStatement","src":"6476:110:9"}]},"documentation":{"id":1685,"nodeType":"StructuredDocumentation","src":"5471:850:9","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1713,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:9","nodeType":"FunctionDefinition","parameters":{"id":1694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"from","nameLocation":"6357:4:9","nodeType":"VariableDeclaration","scope":1713,"src":"6349:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1686,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1689,"mutability":"mutable","name":"to","nameLocation":"6371:2:9","nodeType":"VariableDeclaration","scope":1713,"src":"6363:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1688,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1691,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:9","nodeType":"VariableDeclaration","scope":1713,"src":"6375:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1690,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1693,"mutability":"mutable","name":"data","nameLocation":"6405:4:9","nodeType":"VariableDeclaration","scope":1713,"src":"6392:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1692,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:9"},"returnParameters":{"id":1695,"nodeType":"ParameterList","parameters":[],"src":"6428:0:9"},"scope":2225,"src":"6326:267:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1725,"nodeType":"Block","src":"6777:40:9","statements":[{"expression":{"baseExpression":{"id":1721,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"6794:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1723,"indexExpression":{"id":1722,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1716,"src":"6802:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1720,"id":1724,"nodeType":"Return","src":"6787:23:9"}]},"documentation":{"id":1714,"nodeType":"StructuredDocumentation","src":"6599:98:9","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":1726,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:9","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:9","nodeType":"VariableDeclaration","scope":1726,"src":"6720:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1715,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:9"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1726,"src":"6768:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:9"},"scope":2225,"src":"6702:115:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1743,"nodeType":"Block","src":"7191:55:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1735,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1729,"src":"7217:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1734,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"7208:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7208:17:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:9","typeDescriptions":{}}},"id":1740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1733,"id":1742,"nodeType":"Return","src":"7201:38:9"}]},"documentation":{"id":1727,"nodeType":"StructuredDocumentation","src":"6823:292:9","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:9","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:9","nodeType":"VariableDeclaration","scope":1744,"src":"7137:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1728,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:9"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"7185:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1731,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:9"},"scope":2225,"src":"7120:126:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1777,"nodeType":"Block","src":"7503:162:9","statements":[{"assignments":[1755],"declarations":[{"constant":false,"id":1755,"mutability":"mutable","name":"owner","nameLocation":"7521:5:9","nodeType":"VariableDeclaration","scope":1777,"src":"7513:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1760,"initialValue":{"arguments":[{"id":1758,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1756,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"7529:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"7529:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7529:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:9"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7570:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1762,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7581:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1765,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1755,"src":"7607:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1766,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7614:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1764,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"7590:16:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7590:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1770,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"7638:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"7626:11:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7626:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1772,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1747,"src":"7650:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1775,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1753,"id":1776,"nodeType":"Return","src":"7562:96:9"}]},"documentation":{"id":1745,"nodeType":"StructuredDocumentation","src":"7252:147:9","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":1778,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:9","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"spender","nameLocation":"7440:7:9","nodeType":"VariableDeclaration","scope":1778,"src":"7432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1749,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:9","nodeType":"VariableDeclaration","scope":1778,"src":"7449:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:9"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1778,"src":"7497:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:9"},"scope":2225,"src":"7404:261:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"8060:43:9","statements":[{"expression":{"arguments":[{"id":1787,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1781,"src":"8080:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1788,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1783,"src":"8084:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1786,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1793,1822],"referencedDeclaration":1822,"src":"8070:9:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8070:26:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1791,"nodeType":"ExpressionStatement","src":"8070:26:9"}]},"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"7671:319:9","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:9","nodeType":"FunctionDefinition","parameters":{"id":1784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1781,"mutability":"mutable","name":"to","nameLocation":"8022:2:9","nodeType":"VariableDeclaration","scope":1793,"src":"8014:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1780,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1783,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:9","nodeType":"VariableDeclaration","scope":1793,"src":"8026:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1782,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:9"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[],"src":"8060:0:9"},"scope":2225,"src":"7995:108:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1821,"nodeType":"Block","src":"8408:195:9","statements":[{"expression":{"arguments":[{"id":1804,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8424:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1805,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8428:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1803,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"8418:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8418:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1807,"nodeType":"ExpressionStatement","src":"8418:18:9"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":1812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1810,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:9","typeDescriptions":{}}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8490:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1814,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8502:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1815,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"8506:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1816,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"8515:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1809,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2183,"src":"8467:22:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8467:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":1808,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8446:150:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1820,"nodeType":"ExpressionStatement","src":"8446:150:9"}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"8109:210:9","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1822,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:9","nodeType":"FunctionDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"to","nameLocation":"8351:2:9","nodeType":"VariableDeclaration","scope":1822,"src":"8343:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:9","nodeType":"VariableDeclaration","scope":1822,"src":"8355:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"data","nameLocation":"8385:4:9","nodeType":"VariableDeclaration","scope":1822,"src":"8372:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1799,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:9"},"returnParameters":{"id":1802,"nodeType":"ParameterList","parameters":[],"src":"8408:0:9"},"scope":2225,"src":"8324:279:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1898,"nodeType":"Block","src":"8986:859:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1831,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9004:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:9","typeDescriptions":{}}},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9010:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":1830,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8996:61:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"ExpressionStatement","src":"8996:61:9"},{"expression":{"arguments":[{"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:9","subExpression":{"arguments":[{"id":1842,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9084:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1841,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9076:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9076:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1840,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1847,"nodeType":"ExpressionStatement","src":"9067:58:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1849,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:9","typeDescriptions":{}}},"id":1852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9157:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1853,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9169:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9173:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1848,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"9136:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9136:48:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1857,"nodeType":"ExpressionStatement","src":"9136:48:9"},{"expression":{"arguments":[{"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:9","subExpression":{"arguments":[{"id":1860,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9288:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1859,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"9280:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9280:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":1858,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9271:58:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1865,"nodeType":"ExpressionStatement","src":"9271:58:9"},{"id":1872,"nodeType":"UncheckedBlock","src":"9340:360:9","statements":[{"expression":{"id":1870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1866,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"9671:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1868,"indexExpression":{"id":1867,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9681:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1871,"nodeType":"ExpressionStatement","src":"9671:18:9"}]},{"expression":{"id":1877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1873,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"9710:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1875,"indexExpression":{"id":1874,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1876,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9729:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1878,"nodeType":"ExpressionStatement","src":"9710:21:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1880,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:9","typeDescriptions":{}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9756:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1884,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9768:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9772:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1879,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"9747:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9747:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1887,"nodeType":"EmitStatement","src":"9742:38:9"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1889,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:9","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9811:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1893,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1825,"src":"9823:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1827,"src":"9827:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1888,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"9791:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9791:47:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1897,"nodeType":"ExpressionStatement","src":"9791:47:9"}]},"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"8609:311:9","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1899,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:9","nodeType":"FunctionDefinition","parameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"to","nameLocation":"8948:2:9","nodeType":"VariableDeclaration","scope":1899,"src":"8940:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1827,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:9","nodeType":"VariableDeclaration","scope":1899,"src":"8952:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1826,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:9"},"returnParameters":{"id":1829,"nodeType":"ParameterList","parameters":[],"src":"8986:0:9"},"scope":2225,"src":"8925:920:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1965,"nodeType":"Block","src":"10220:713:9","statements":[{"assignments":[1906],"declarations":[{"constant":false,"id":1906,"mutability":"mutable","name":"owner","nameLocation":"10238:5:9","nodeType":"VariableDeclaration","scope":1965,"src":"10230:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1905,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1911,"initialValue":{"arguments":[{"id":1909,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10261:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1907,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"10246:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"10246:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10246:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:9"},{"expression":{"arguments":[{"id":1913,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10301:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:9","typeDescriptions":{}}},"id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10308:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1918,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10320:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1912,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"10280:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10280:51:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1921,"nodeType":"ExpressionStatement","src":"10280:51:9"},{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1922,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10433:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1925,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10456:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1923,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"10441:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"10441:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10441:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1928,"nodeType":"ExpressionStatement","src":"10433:31:9"},{"expression":{"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:9","subExpression":{"baseExpression":{"id":1929,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"10509:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1931,"indexExpression":{"id":1930,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10525:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"10502:31:9"},{"id":1940,"nodeType":"UncheckedBlock","src":"10544:237:9","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1934,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"10749:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1936,"indexExpression":{"id":1935,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10759:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"nodeType":"ExpressionStatement","src":"10749:21:9"}]},{"expression":{"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:9","subExpression":{"baseExpression":{"id":1941,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"10797:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1943,"indexExpression":{"id":1942,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10805:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"ExpressionStatement","src":"10790:23:9"},{"eventCall":{"arguments":[{"id":1947,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10838:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1949,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:9","typeDescriptions":{}}},"id":1951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10845:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1952,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10857:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1946,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10829:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10829:36:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1954,"nodeType":"EmitStatement","src":"10824:41:9"},{"expression":{"arguments":[{"id":1956,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1906,"src":"10896:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1957,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:9","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10903:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1961,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1902,"src":"10915:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1955,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"10876:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10876:50:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1964,"nodeType":"ExpressionStatement","src":"10876:50:9"}]},"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"9851:315:9","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1966,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:9","nodeType":"FunctionDefinition","parameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:9","nodeType":"VariableDeclaration","scope":1966,"src":"10186:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:9"},"returnParameters":{"id":1904,"nodeType":"ParameterList","parameters":[],"src":"10220:0:9"},"scope":2225,"src":"10171:762:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2050,"nodeType":"Block","src":"11336:1124:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1979,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"11369:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1977,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"11354:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"11354:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11354:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1981,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"11381:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":1976,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1985,"nodeType":"ExpressionStatement","src":"11346:81:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1987,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"11445:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1988,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:9","typeDescriptions":{}}},"id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11451:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":1993,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":1986,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11437:65:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"11437:65:9"},{"expression":{"arguments":[{"id":1997,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"11534:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1998,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"11540:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1999,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"11544:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":1996,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"11513:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11513:42:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2002,"nodeType":"ExpressionStatement","src":"11513:42:9"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2006,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"11670:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2004,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"11655:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"11655:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2008,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"11682:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":2003,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11647:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2012,"nodeType":"ExpressionStatement","src":"11647:81:9"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:9","subExpression":{"baseExpression":{"id":2013,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"11797:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2015,"indexExpression":{"id":2014,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"11813:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2017,"nodeType":"ExpressionStatement","src":"11790:31:9"},{"id":2030,"nodeType":"UncheckedBlock","src":"11832:496:9","statements":[{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2018,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"12265:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2020,"indexExpression":{"id":2019,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"12275:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"12265:20:9"},{"expression":{"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2024,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"12299:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2026,"indexExpression":{"id":2025,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"12309:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2029,"nodeType":"ExpressionStatement","src":"12299:18:9"}]},{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2031,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1330,"src":"12337:7:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2033,"indexExpression":{"id":2032,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12345:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2034,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"12356:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2036,"nodeType":"ExpressionStatement","src":"12337:21:9"},{"eventCall":{"arguments":[{"id":2038,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"12383:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2039,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"12389:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2040,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12393:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2037,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"12374:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12374:27:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2042,"nodeType":"EmitStatement","src":"12369:32:9"},{"expression":{"arguments":[{"id":2044,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1969,"src":"12432:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2045,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1971,"src":"12438:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2046,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"12442:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":2043,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2209,"src":"12412:19:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12412:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"12412:41:9"}]},"documentation":{"id":1967,"nodeType":"StructuredDocumentation","src":"10939:313:9","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2051,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:9","nodeType":"FunctionDefinition","parameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1969,"mutability":"mutable","name":"from","nameLocation":"11284:4:9","nodeType":"VariableDeclaration","scope":2051,"src":"11276:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1968,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1971,"mutability":"mutable","name":"to","nameLocation":"11298:2:9","nodeType":"VariableDeclaration","scope":2051,"src":"11290:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1970,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1973,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:9","nodeType":"VariableDeclaration","scope":2051,"src":"11302:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:9"},"returnParameters":{"id":1975,"nodeType":"ParameterList","parameters":[],"src":"11336:0:9"},"scope":2225,"src":"11257:1203:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2074,"nodeType":"Block","src":"12636:107:9","statements":[{"expression":{"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2059,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"12646:15:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2061,"indexExpression":{"id":2060,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"12662:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2062,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"12673:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2064,"nodeType":"ExpressionStatement","src":"12646:29:9"},{"eventCall":{"arguments":[{"arguments":[{"id":2068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"12714:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2066,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"12699:6:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$2225_$","typeString":"type(contract ERC721)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":1444,"src":"12699:14:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12699:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2070,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"12724:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2071,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2056,"src":"12728:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2065,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"12690:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12690:46:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2073,"nodeType":"EmitStatement","src":"12685:51:9"}]},"documentation":{"id":2052,"nodeType":"StructuredDocumentation","src":"12466:101:9","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":2075,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:9","nodeType":"FunctionDefinition","parameters":{"id":2057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2054,"mutability":"mutable","name":"to","nameLocation":"12598:2:9","nodeType":"VariableDeclaration","scope":2075,"src":"12590:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2056,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:9","nodeType":"VariableDeclaration","scope":2075,"src":"12602:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2055,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:9"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"12636:0:9"},"scope":2225,"src":"12572:171:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2106,"nodeType":"Block","src":"12972:184:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2086,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"12990:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2087,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"12999:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":2085,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12982:55:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"12982:55:9"},{"expression":{"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2092,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"13047:18:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2095,"indexExpression":{"id":2093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"13066:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2096,"indexExpression":{"id":2094,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"13073:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2097,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13085:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2099,"nodeType":"ExpressionStatement","src":"13047:46:9"},{"eventCall":{"arguments":[{"id":2101,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2078,"src":"13123:5:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2102,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"13130:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2103,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2082,"src":"13140:8:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2100,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2258,"src":"13108:14:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13108:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"EmitStatement","src":"13103:46:9"}]},"documentation":{"id":2076,"nodeType":"StructuredDocumentation","src":"12749:125:9","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":2107,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:9","nodeType":"FunctionDefinition","parameters":{"id":2083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"owner","nameLocation":"12915:5:9","nodeType":"VariableDeclaration","scope":2107,"src":"12907:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2080,"mutability":"mutable","name":"operator","nameLocation":"12930:8:9","nodeType":"VariableDeclaration","scope":2107,"src":"12922:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2079,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2082,"mutability":"mutable","name":"approved","nameLocation":"12945:8:9","nodeType":"VariableDeclaration","scope":2107,"src":"12940:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2081,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:9"},"returnParameters":{"id":2084,"nodeType":"ParameterList","parameters":[],"src":"12972:0:9"},"scope":2225,"src":"12879:277:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2120,"nodeType":"Block","src":"13303:70:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":2115,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"13329:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2114,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"13321:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":2113,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13313:53:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2119,"nodeType":"ExpressionStatement","src":"13313:53:9"}]},"documentation":{"id":2108,"nodeType":"StructuredDocumentation","src":"13162:73:9","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":2121,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:9","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2110,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:9","nodeType":"VariableDeclaration","scope":2121,"src":"13264:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2109,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:9"},"returnParameters":{"id":2112,"nodeType":"ParameterList","parameters":[],"src":"13303:0:9"},"scope":2225,"src":"13240:133:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2182,"nodeType":"Block","src":"14080:676:9","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2135,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"14094:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":2560,"src":"14094:13:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14094:15:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2180,"nodeType":"Block","src":"14714:36:9","statements":[{"expression":{"hexValue":"74727565","id":2178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2134,"id":2179,"nodeType":"Return","src":"14728:11:9"}]},"id":2181,"nodeType":"IfStatement","src":"14090:660:9","trueBody":{"id":2177,"nodeType":"Block","src":"14111:597:9","statements":[{"clauses":[{"block":{"id":2157,"nodeType":"Block","src":"14225:91:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2151,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2149,"src":"14250:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":2152,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"14260:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2359_$","typeString":"type(contract IERC721Receiver)"}},"id":2153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"14260:32:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"14260:41:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2134,"id":2156,"nodeType":"Return","src":"14243:58:9"}]},"errorName":"","id":2158,"nodeType":"TryCatchClause","parameters":{"id":2150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2149,"mutability":"mutable","name":"retval","nameLocation":"14217:6:9","nodeType":"VariableDeclaration","scope":2158,"src":"14210:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2148,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:9"},"src":"14201:115:9"},{"block":{"id":2174,"nodeType":"Block","src":"14345:353:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2162,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2160,"src":"14367:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"14367:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2172,"nodeType":"Block","src":"14494:190:9","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:9","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:9","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:9"},"nodeType":"YulFunctionCall","src":"14613:15:9"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:9"},"nodeType":"YulFunctionCall","src":"14630:13:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:9"},"nodeType":"YulFunctionCall","src":"14606:38:9"},"nodeType":"YulExpressionStatement","src":"14606:38:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2160,"isOffset":false,"isSlot":false,"src":"14621:6:9","valueSize":1},{"declaration":2160,"isOffset":false,"isSlot":false,"src":"14636:6:9","valueSize":1}],"id":2171,"nodeType":"InlineAssembly","src":"14571:95:9"}]},"id":2173,"nodeType":"IfStatement","src":"14363:321:9","trueBody":{"id":2170,"nodeType":"Block","src":"14387:101:9","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":2166,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14409:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"ExpressionStatement","src":"14409:60:9"}]}}]},"errorName":"","id":2175,"nodeType":"TryCatchClause","parameters":{"id":2161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2160,"mutability":"mutable","name":"reason","nameLocation":"14337:6:9","nodeType":"VariableDeclaration","scope":2175,"src":"14324:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2159,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:9"},"src":"14317:381:9"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2142,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"14166:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14166:12:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2144,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2124,"src":"14180:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2145,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"14186:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2146,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"14195:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2139,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"14145:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2138,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"14129:15:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2359_$","typeString":"type(contract IERC721Receiver)"}},"id":2140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:19:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2359","typeString":"contract IERC721Receiver"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2358,"src":"14129:36:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14129:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2176,"nodeType":"TryStatement","src":"14125:573:9"}]}}]},"documentation":{"id":2122,"nodeType":"StructuredDocumentation","src":"13379:541:9","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":2183,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:9","nodeType":"FunctionDefinition","parameters":{"id":2131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2124,"mutability":"mutable","name":"from","nameLocation":"13974:4:9","nodeType":"VariableDeclaration","scope":2183,"src":"13966:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2123,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2126,"mutability":"mutable","name":"to","nameLocation":"13996:2:9","nodeType":"VariableDeclaration","scope":2183,"src":"13988:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:9","nodeType":"VariableDeclaration","scope":2183,"src":"14008:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2130,"mutability":"mutable","name":"data","nameLocation":"14046:4:9","nodeType":"VariableDeclaration","scope":2183,"src":"14033:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2129,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:9"},"returnParameters":{"id":2134,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2133,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2183,"src":"14074:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2132,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:9"},"scope":2225,"src":"13925:831:9","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2195,"nodeType":"Block","src":"15586:2:9","statements":[]},"documentation":{"id":2184,"nodeType":"StructuredDocumentation","src":"14762:705:9","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2196,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:9","nodeType":"FunctionDefinition","parameters":{"id":2193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2186,"mutability":"mutable","name":"from","nameLocation":"15510:4:9","nodeType":"VariableDeclaration","scope":2196,"src":"15502:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2185,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2188,"mutability":"mutable","name":"to","nameLocation":"15524:2:9","nodeType":"VariableDeclaration","scope":2196,"src":"15516:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2187,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2190,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:9","nodeType":"VariableDeclaration","scope":2196,"src":"15528:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2189,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2192,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:9","nodeType":"VariableDeclaration","scope":2196,"src":"15550:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2191,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:9"},"returnParameters":{"id":2194,"nodeType":"ParameterList","parameters":[],"src":"15586:0:9"},"scope":2225,"src":"15472:116:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"16407:2:9","statements":[]},"documentation":{"id":2197,"nodeType":"StructuredDocumentation","src":"15594:695:9","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:9","nodeType":"FunctionDefinition","parameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2199,"mutability":"mutable","name":"from","nameLocation":"16331:4:9","nodeType":"VariableDeclaration","scope":2209,"src":"16323:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2198,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2201,"mutability":"mutable","name":"to","nameLocation":"16345:2:9","nodeType":"VariableDeclaration","scope":2209,"src":"16337:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2203,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:9","nodeType":"VariableDeclaration","scope":2209,"src":"16349:20:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2202,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2205,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:9","nodeType":"VariableDeclaration","scope":2209,"src":"16371:17:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2204,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:9"},"returnParameters":{"id":2207,"nodeType":"ParameterList","parameters":[],"src":"16407:0:9"},"scope":2225,"src":"16294:115:9","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2223,"nodeType":"Block","src":"16958:45:9","statements":[{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2217,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"16968:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2219,"indexExpression":{"id":2218,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2212,"src":"16978:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2220,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2214,"src":"16990:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"16968:28:9"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"16415:409:9","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":2224,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:9","nodeType":"FunctionDefinition","parameters":{"id":2215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"account","nameLocation":"16924:7:9","nodeType":"VariableDeclaration","scope":2224,"src":"16916:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2214,"mutability":"mutable","name":"amount","nameLocation":"16941:6:9","nodeType":"VariableDeclaration","scope":2224,"src":"16933:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2213,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:9"},"returnParameters":{"id":2216,"nodeType":"ParameterList","parameters":[],"src":"16958:0:9"},"scope":2225,"src":"16882:121:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2226,"src":"628:16377:9","usedErrors":[]}],"src":"107:16899:9"},"id":9},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3159],"IERC721":[2341]},"id":2342,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2227,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:10"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2228,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2342,"sourceUnit":3160,"src":"133:47:10","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2230,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"271:7:10"},"id":2231,"nodeType":"InheritanceSpecifier","src":"271:7:10"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2229,"nodeType":"StructuredDocumentation","src":"182:67:10","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":2341,"linearizedBaseContracts":[2341,3159],"name":"IERC721","nameLocation":"260:7:10","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"285:88:10","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":2240,"name":"Transfer","nameLocation":"384:8:10","nodeType":"EventDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:10","nodeType":"VariableDeclaration","scope":2240,"src":"393:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2233,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2236,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:10","nodeType":"VariableDeclaration","scope":2240,"src":"415:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2235,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2238,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:10","nodeType":"VariableDeclaration","scope":2240,"src":"435:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:10"},"src":"378:82:10"},{"anonymous":false,"documentation":{"id":2241,"nodeType":"StructuredDocumentation","src":"466:94:10","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":2249,"name":"Approval","nameLocation":"571:8:10","nodeType":"EventDefinition","parameters":{"id":2248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2243,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:10","nodeType":"VariableDeclaration","scope":2249,"src":"580:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2242,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2245,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:10","nodeType":"VariableDeclaration","scope":2249,"src":"603:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2244,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2247,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:10","nodeType":"VariableDeclaration","scope":2249,"src":"629:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2246,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:10"},"src":"565:89:10"},{"anonymous":false,"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"660:117:10","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":2258,"name":"ApprovalForAll","nameLocation":"788:14:10","nodeType":"EventDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:10","nodeType":"VariableDeclaration","scope":2258,"src":"803:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:10","nodeType":"VariableDeclaration","scope":2258,"src":"826:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2253,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2256,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:10","nodeType":"VariableDeclaration","scope":2258,"src":"852:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2255,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:10"},"src":"782:85:10"},{"documentation":{"id":2259,"nodeType":"StructuredDocumentation","src":"873:76:10","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2266,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:10","nodeType":"FunctionDefinition","parameters":{"id":2262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2261,"mutability":"mutable","name":"owner","nameLocation":"981:5:10","nodeType":"VariableDeclaration","scope":2266,"src":"973:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2260,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:10"},"returnParameters":{"id":2265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2264,"mutability":"mutable","name":"balance","nameLocation":"1019:7:10","nodeType":"VariableDeclaration","scope":2266,"src":"1011:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:10"},"scope":2341,"src":"954:74:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2267,"nodeType":"StructuredDocumentation","src":"1034:131:10","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2274,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:10","nodeType":"FunctionDefinition","parameters":{"id":2270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2269,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:10","nodeType":"VariableDeclaration","scope":2274,"src":"1187:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:10"},"returnParameters":{"id":2273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2272,"mutability":"mutable","name":"owner","nameLocation":"1235:5:10","nodeType":"VariableDeclaration","scope":2274,"src":"1227:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:10"},"scope":2341,"src":"1170:72:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2275,"nodeType":"StructuredDocumentation","src":"1248:556:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2286,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:10","nodeType":"FunctionDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2277,"mutability":"mutable","name":"from","nameLocation":"1843:4:10","nodeType":"VariableDeclaration","scope":2286,"src":"1835:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2276,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2279,"mutability":"mutable","name":"to","nameLocation":"1857:2:10","nodeType":"VariableDeclaration","scope":2286,"src":"1849:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2278,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2281,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:10","nodeType":"VariableDeclaration","scope":2286,"src":"1861:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"data","nameLocation":"1893:4:10","nodeType":"VariableDeclaration","scope":2286,"src":"1878:19:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2282,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:10"},"returnParameters":{"id":2285,"nodeType":"ParameterList","parameters":[],"src":"1907:0:10"},"scope":2341,"src":"1809:99:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2287,"nodeType":"StructuredDocumentation","src":"1914:687:10","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2296,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:10","nodeType":"FunctionDefinition","parameters":{"id":2294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2289,"mutability":"mutable","name":"from","nameLocation":"2640:4:10","nodeType":"VariableDeclaration","scope":2296,"src":"2632:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2288,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2291,"mutability":"mutable","name":"to","nameLocation":"2654:2:10","nodeType":"VariableDeclaration","scope":2296,"src":"2646:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2290,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2293,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:10","nodeType":"VariableDeclaration","scope":2296,"src":"2658:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2292,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:10"},"returnParameters":{"id":2295,"nodeType":"ParameterList","parameters":[],"src":"2683:0:10"},"scope":2341,"src":"2606:78:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2297,"nodeType":"StructuredDocumentation","src":"2690:732:10","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2306,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:10","nodeType":"FunctionDefinition","parameters":{"id":2304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2299,"mutability":"mutable","name":"from","nameLocation":"3457:4:10","nodeType":"VariableDeclaration","scope":2306,"src":"3449:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"to","nameLocation":"3471:2:10","nodeType":"VariableDeclaration","scope":2306,"src":"3463:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2303,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:10","nodeType":"VariableDeclaration","scope":2306,"src":"3475:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2302,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:10"},"returnParameters":{"id":2305,"nodeType":"ParameterList","parameters":[],"src":"3500:0:10"},"scope":2341,"src":"3427:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2307,"nodeType":"StructuredDocumentation","src":"3507:452:10","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2314,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:10","nodeType":"FunctionDefinition","parameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"to","nameLocation":"3989:2:10","nodeType":"VariableDeclaration","scope":2314,"src":"3981:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2311,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:10","nodeType":"VariableDeclaration","scope":2314,"src":"3993:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:10"},"returnParameters":{"id":2313,"nodeType":"ParameterList","parameters":[],"src":"4018:0:10"},"scope":2341,"src":"3964:55:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2315,"nodeType":"StructuredDocumentation","src":"4025:309:10","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2322,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:10","nodeType":"FunctionDefinition","parameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2317,"mutability":"mutable","name":"operator","nameLocation":"4374:8:10","nodeType":"VariableDeclaration","scope":2322,"src":"4366:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"approved","nameLocation":"4389:8:10","nodeType":"VariableDeclaration","scope":2322,"src":"4384:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2318,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:10"},"returnParameters":{"id":2321,"nodeType":"ParameterList","parameters":[],"src":"4407:0:10"},"scope":2341,"src":"4339:69:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2323,"nodeType":"StructuredDocumentation","src":"4414:139:10","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2330,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:10","nodeType":"FunctionDefinition","parameters":{"id":2326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2325,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:10","nodeType":"VariableDeclaration","scope":2330,"src":"4579:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2324,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:10"},"returnParameters":{"id":2329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2328,"mutability":"mutable","name":"operator","nameLocation":"4627:8:10","nodeType":"VariableDeclaration","scope":2330,"src":"4619:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2327,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:10"},"scope":2341,"src":"4558:79:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2331,"nodeType":"StructuredDocumentation","src":"4643:138:10","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2340,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:10","nodeType":"FunctionDefinition","parameters":{"id":2336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2333,"mutability":"mutable","name":"owner","nameLocation":"4820:5:10","nodeType":"VariableDeclaration","scope":2340,"src":"4812:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2332,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2335,"mutability":"mutable","name":"operator","nameLocation":"4835:8:10","nodeType":"VariableDeclaration","scope":2340,"src":"4827:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2334,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:10"},"returnParameters":{"id":2339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2338,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2340,"src":"4868:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2337,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:10"},"scope":2341,"src":"4786:88:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2342,"src":"250:4626:10","usedErrors":[]}],"src":"108:4769:10"},"id":10},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2359]},"id":2360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2343,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2344,"nodeType":"StructuredDocumentation","src":"141:152:11","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":2359,"linearizedBaseContracts":[2359],"name":"IERC721Receiver","nameLocation":"304:15:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2345,"nodeType":"StructuredDocumentation","src":"326:493:11","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:11","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2347,"mutability":"mutable","name":"operator","nameLocation":"867:8:11","nodeType":"VariableDeclaration","scope":2358,"src":"859:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2346,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"from","nameLocation":"893:4:11","nodeType":"VariableDeclaration","scope":2358,"src":"885:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2351,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:11","nodeType":"VariableDeclaration","scope":2358,"src":"907:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2350,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2353,"mutability":"mutable","name":"data","nameLocation":"947:4:11","nodeType":"VariableDeclaration","scope":2358,"src":"932:19:11","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2352,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:11"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"976:6:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2355,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:11"},"scope":2359,"src":"824:160:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2360,"src":"294:692:11","usedErrors":[]}],"src":"116:871:11"},"id":11},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[2872],"Context":[2894],"ERC165":[3147],"ERC721":[2225],"ERC721URIStorage":[2515],"IERC165":[3159],"IERC4906":[1295],"IERC721":[2341],"IERC721Metadata":[2542],"IERC721Receiver":[2359],"Math":[4025],"SignedMath":[4130],"Strings":[3123]},"id":2516,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2361,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":2362,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2516,"sourceUnit":2226,"src":"153:23:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":2363,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2516,"sourceUnit":1296,"src":"177:42:12","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2365,"name":"IERC4906","nodeType":"IdentifierPath","referencedDeclaration":1295,"src":"329:8:12"},"id":2366,"nodeType":"InheritanceSpecifier","src":"329:8:12"},{"baseName":{"id":2367,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"339:6:12"},"id":2368,"nodeType":"InheritanceSpecifier","src":"339:6:12"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2364,"nodeType":"StructuredDocumentation","src":"221:69:12","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":false,"id":2515,"linearizedBaseContracts":[2515,2225,2542,1295,2341,3147,3159,2894],"name":"ERC721URIStorage","nameLocation":"309:16:12","nodeType":"ContractDefinition","nodes":[{"id":2371,"libraryName":{"id":2369,"name":"Strings","nodeType":"IdentifierPath","referencedDeclaration":3123,"src":"358:7:12"},"nodeType":"UsingForDirective","src":"352:26:12","typeName":{"id":2370,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2375,"mutability":"mutable","name":"_tokenURIs","nameLocation":"458:10:12","nodeType":"VariableDeclaration","scope":2515,"src":"423:45:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":2374,"keyType":{"id":2372,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueType":{"id":2373,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[1392,3158],"body":{"id":2398,"nodeType":"Block","src":"643:97:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"660:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:12","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":2387,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:12","typeDescriptions":{}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"675:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2394,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2378,"src":"721:11:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2392,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2515_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1392,"src":"697:23:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"697:36:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2385,"id":2397,"nodeType":"Return","src":"653:80:12"}]},"documentation":{"id":2376,"nodeType":"StructuredDocumentation","src":"475:55:12","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"544:17:12","nodeType":"FunctionDefinition","overrides":{"id":2382,"nodeType":"OverrideSpecifier","overrides":[{"id":2380,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"611:6:12"},{"id":2381,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"619:7:12"}],"src":"602:25:12"},"parameters":{"id":2379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2378,"mutability":"mutable","name":"interfaceId","nameLocation":"569:11:12","nodeType":"VariableDeclaration","scope":2399,"src":"562:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2377,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:12"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"637:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2383,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:12"},"scope":2515,"src":"535:205:12","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1503],"body":{"id":2457,"nodeType":"Block","src":"894:520:12","statements":[{"expression":{"arguments":[{"id":2409,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"919:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2408,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"904:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2411,"nodeType":"ExpressionStatement","src":"904:23:12"},{"assignments":[2413],"declarations":[{"constant":false,"id":2413,"mutability":"mutable","name":"_tokenURI","nameLocation":"952:9:12","nodeType":"VariableDeclaration","scope":2457,"src":"938:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2412,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2417,"initialValue":{"baseExpression":{"id":2414,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"964:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2416,"indexExpression":{"id":2415,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"975:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:12"},{"assignments":[2419],"declarations":[{"constant":false,"id":2419,"mutability":"mutable","name":"base","nameLocation":"1007:4:12","nodeType":"VariableDeclaration","scope":2457,"src":"993:18:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2418,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2422,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2420,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"1014:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1014:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2425,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1103:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2423,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:12","typeDescriptions":{}}},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1097:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1097:18:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2433,"nodeType":"IfStatement","src":"1093:70:12","trueBody":{"id":2432,"nodeType":"Block","src":"1122:41:12","statements":[{"expression":{"id":2430,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1143:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2407,"id":2431,"nodeType":"Return","src":"1136:16:12"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2436,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1271:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2435,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2434,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:12","typeDescriptions":{}}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1265:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1265:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2451,"nodeType":"IfStatement","src":"1261:106:12","trueBody":{"id":2450,"nodeType":"Block","src":"1294:73:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2445,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"1339:4:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2446,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2413,"src":"1345:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2443,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1322:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2441,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:12","typeDescriptions":{}}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1315:41:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2407,"id":2449,"nodeType":"Return","src":"1308:48:12"}]}},{"expression":{"arguments":[{"id":2454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"1399:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2452,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2515_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":1503,"src":"1384:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":2455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1384:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2407,"id":2456,"nodeType":"Return","src":"1377:30:12"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"746:55:12","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":2458,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"815:8:12","nodeType":"FunctionDefinition","overrides":{"id":2404,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:12"},"parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"tokenId","nameLocation":"832:7:12","nodeType":"VariableDeclaration","scope":2458,"src":"824:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2401,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:12"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2458,"src":"879:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2405,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:12"},"scope":2515,"src":"806:608:12","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2483,"nodeType":"Block","src":"1680:172:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2468,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1706:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2467,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1698:7:12","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":2469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1698:16:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":2466,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1690:75:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2472,"nodeType":"ExpressionStatement","src":"1690:75:12"},{"expression":{"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2473,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"1775:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2475,"indexExpression":{"id":2474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1786:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2476,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1797:9:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2478,"nodeType":"ExpressionStatement","src":"1775:31:12"},{"eventCall":{"arguments":[{"id":2480,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"1837:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2479,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1287,"src":"1822:14:12","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1822:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2482,"nodeType":"EmitStatement","src":"1817:28:12"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"1420:174:12","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":2484,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1608:12:12","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"tokenId","nameLocation":"1629:7:12","nodeType":"VariableDeclaration","scope":2484,"src":"1621:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"_tokenURI","nameLocation":"1652:9:12","nodeType":"VariableDeclaration","scope":2484,"src":"1638:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:12"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"1680:0:12"},"scope":2515,"src":"1599:253:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1966],"body":{"id":2513,"nodeType":"Block","src":"2128:142:12","statements":[{"expression":{"arguments":[{"id":2494,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2150:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2491,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$2515_$","typeString":"type(contract super ERC721URIStorage)"}},"id":2493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":1966,"src":"2138:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":2495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2138:20:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2496,"nodeType":"ExpressionStatement","src":"2138:20:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":2499,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2179:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2501,"indexExpression":{"id":2500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2190:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":2498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2497,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:12","typeDescriptions":{}}},"id":2502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2173:33:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2512,"nodeType":"IfStatement","src":"2169:95:12","trueBody":{"id":2511,"nodeType":"Block","src":"2213:51:12","statements":[{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:12","subExpression":{"baseExpression":{"id":2506,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"2234:10:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":2508,"indexExpression":{"id":2507,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2487,"src":"2245:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:12","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2510,"nodeType":"ExpressionStatement","src":"2227:26:12"}]}}]},"documentation":{"id":2485,"nodeType":"StructuredDocumentation","src":"1858:207:12","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":2514,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2079:5:12","nodeType":"FunctionDefinition","overrides":{"id":2489,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:12"},"parameters":{"id":2488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2487,"mutability":"mutable","name":"tokenId","nameLocation":"2093:7:12","nodeType":"VariableDeclaration","scope":2514,"src":"2085:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2486,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:12"},"returnParameters":{"id":2490,"nodeType":"ParameterList","parameters":[],"src":"2128:0:12"},"scope":2515,"src":"2070:200:12","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2516,"src":"291:1981:12","usedErrors":[]}],"src":"128:2145:12"},"id":12},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[3159],"IERC721":[2341],"IERC721Metadata":[2542]},"id":2543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2517,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2518,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2543,"sourceUnit":2342,"src":"137:24:13","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2520,"name":"IERC721","nodeType":"IdentifierPath","referencedDeclaration":2341,"src":"326:7:13"},"id":2521,"nodeType":"InheritanceSpecifier","src":"326:7:13"}],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"163:133:13","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2542,"linearizedBaseContracts":[2542,2341,3159],"name":"IERC721Metadata","nameLocation":"307:15:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2522,"nodeType":"StructuredDocumentation","src":"340:58:13","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2527,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:13","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[],"src":"416:2:13"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2527,"src":"442:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2524,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:13"},"scope":2542,"src":"403:54:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"463:60:13","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2533,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:13","nodeType":"FunctionDefinition","parameters":{"id":2529,"nodeType":"ParameterList","parameters":[],"src":"543:2:13"},"returnParameters":{"id":2532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2533,"src":"569:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2530,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:13"},"scope":2542,"src":"528:56:13","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2534,"nodeType":"StructuredDocumentation","src":"590:90:13","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2541,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:13","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:13","nodeType":"VariableDeclaration","scope":2541,"src":"703:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2535,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:13"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"743:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2538,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:13"},"scope":2542,"src":"685:73:13","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2543,"src":"297:463:13","usedErrors":[]}],"src":"112:649:13"},"id":13},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2872]},"id":2873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2544,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2545,"nodeType":"StructuredDocumentation","src":"126:67:14","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2872,"linearizedBaseContracts":[2872],"name":"Address","nameLocation":"202:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2559,"nodeType":"Block","src":"1478:254:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2553,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2548,"src":"1702:7:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1702:12:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1702:19:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2552,"id":2558,"nodeType":"Return","src":"1695:30:14"}]},"documentation":{"id":2546,"nodeType":"StructuredDocumentation","src":"216:1191:14","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":2560,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:14","nodeType":"FunctionDefinition","parameters":{"id":2549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2548,"mutability":"mutable","name":"account","nameLocation":"1440:7:14","nodeType":"VariableDeclaration","scope":2560,"src":"1432:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:14"},"returnParameters":{"id":2552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2560,"src":"1472:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2550,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:14"},"scope":2872,"src":"1412:320:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2593,"nodeType":"Block","src":"2718:241:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2571,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2872","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2872","typeString":"library Address"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:14","typeDescriptions":{}}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2736:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2736:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2574,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2761:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":2576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":2568,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2578,"nodeType":"ExpressionStatement","src":"2728:73:14"},{"assignments":[2580,null],"declarations":[{"constant":false,"id":2580,"mutability":"mutable","name":"success","nameLocation":"2818:7:14","nodeType":"VariableDeclaration","scope":2593,"src":"2813:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2579,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":2587,"initialValue":{"arguments":[{"hexValue":"","id":2585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":2581,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2831:9:14","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2831:14:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2583,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2565,"src":"2853:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2831:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:14"},{"expression":{"arguments":[{"id":2589,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2580,"src":"2882:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":2590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":2588,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2874:78:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2592,"nodeType":"ExpressionStatement","src":"2874:78:14"}]},"documentation":{"id":2561,"nodeType":"StructuredDocumentation","src":"1738:904:14","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":2594,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:14","nodeType":"FunctionDefinition","parameters":{"id":2566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2563,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:14","nodeType":"VariableDeclaration","scope":2594,"src":"2666:25:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2562,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:14","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":2565,"mutability":"mutable","name":"amount","nameLocation":"2701:6:14","nodeType":"VariableDeclaration","scope":2594,"src":"2693:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2564,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:14"},"returnParameters":{"id":2567,"nodeType":"ParameterList","parameters":[],"src":"2718:0:14"},"scope":2872,"src":"2647:312:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2611,"nodeType":"Block","src":"3790:96:14","statements":[{"expression":{"arguments":[{"id":2605,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2597,"src":"3829:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2606,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2599,"src":"3837:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":2608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":2604,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2652,2696],"referencedDeclaration":2696,"src":"3807:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3807:72:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2603,"id":2610,"nodeType":"Return","src":"3800:79:14"}]},"documentation":{"id":2595,"nodeType":"StructuredDocumentation","src":"2965:731:14","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":2612,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:14","nodeType":"FunctionDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"target","nameLocation":"3731:6:14","nodeType":"VariableDeclaration","scope":2612,"src":"3723:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2599,"mutability":"mutable","name":"data","nameLocation":"3752:4:14","nodeType":"VariableDeclaration","scope":2612,"src":"3739:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2598,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:14"},"returnParameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2612,"src":"3776:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2601,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:14"},"scope":2872,"src":"3701:185:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2631,"nodeType":"Block","src":"4255:76:14","statements":[{"expression":{"arguments":[{"id":2625,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2615,"src":"4294:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2626,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2617,"src":"4302:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":2627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":2628,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"4311:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2624,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2652,2696],"referencedDeclaration":2696,"src":"4272:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4272:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2623,"id":2630,"nodeType":"Return","src":"4265:59:14"}]},"documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"3892:211:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2632,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:14","nodeType":"FunctionDefinition","parameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2615,"mutability":"mutable","name":"target","nameLocation":"4147:6:14","nodeType":"VariableDeclaration","scope":2632,"src":"4139:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2614,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"data","nameLocation":"4176:4:14","nodeType":"VariableDeclaration","scope":2632,"src":"4163:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2616,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:14","nodeType":"VariableDeclaration","scope":2632,"src":"4190:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2618,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:14"},"returnParameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2632,"src":"4241:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:14"},"scope":2872,"src":"4108:223:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2651,"nodeType":"Block","src":"4806:111:14","statements":[{"expression":{"arguments":[{"id":2645,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2635,"src":"4845:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2646,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2637,"src":"4853:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2639,"src":"4859:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":2644,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[2652,2696],"referencedDeclaration":2696,"src":"4823:21:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":2649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4823:87:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2643,"id":2650,"nodeType":"Return","src":"4816:94:14"}]},"documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"4337:351:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":2652,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:14","nodeType":"FunctionDefinition","parameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2635,"mutability":"mutable","name":"target","nameLocation":"4732:6:14","nodeType":"VariableDeclaration","scope":2652,"src":"4724:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2634,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2637,"mutability":"mutable","name":"data","nameLocation":"4753:4:14","nodeType":"VariableDeclaration","scope":2652,"src":"4740:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2636,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2639,"mutability":"mutable","name":"value","nameLocation":"4767:5:14","nodeType":"VariableDeclaration","scope":2652,"src":"4759:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2638,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:14"},"returnParameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2652,"src":"4792:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2641,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:14"},"scope":2872,"src":"4693:224:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2695,"nodeType":"Block","src":"5344:267:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2669,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:14","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2872","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2872","typeString":"library Address"}],"id":2668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:14","typeDescriptions":{}}},"id":2670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5362:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5362:21:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5387:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":2666,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5354:81:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2676,"nodeType":"ExpressionStatement","src":"5354:81:14"},{"assignments":[2678,2680],"declarations":[{"constant":false,"id":2678,"mutability":"mutable","name":"success","nameLocation":"5451:7:14","nodeType":"VariableDeclaration","scope":2695,"src":"5446:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2680,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:14","nodeType":"VariableDeclaration","scope":2695,"src":"5460:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2679,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2687,"initialValue":{"arguments":[{"id":2685,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2657,"src":"5513:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2681,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"5487:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5487:11:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":2683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2659,"src":"5506:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:14","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5487:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:14"},{"expression":{"arguments":[{"id":2689,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2655,"src":"5562:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"5570:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2691,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"5579:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2692,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"5591:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2688,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"5535:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5535:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2665,"id":2694,"nodeType":"Return","src":"5528:76:14"}]},"documentation":{"id":2653,"nodeType":"StructuredDocumentation","src":"4923:237:14","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:14","nodeType":"FunctionDefinition","parameters":{"id":2662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"target","nameLocation":"5213:6:14","nodeType":"VariableDeclaration","scope":2696,"src":"5205:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2654,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2657,"mutability":"mutable","name":"data","nameLocation":"5242:4:14","nodeType":"VariableDeclaration","scope":2696,"src":"5229:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2656,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2659,"mutability":"mutable","name":"value","nameLocation":"5264:5:14","nodeType":"VariableDeclaration","scope":2696,"src":"5256:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2661,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:14","nodeType":"VariableDeclaration","scope":2696,"src":"5279:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2660,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:14"},"returnParameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"5330:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2663,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:14"},"scope":2872,"src":"5165:446:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2712,"nodeType":"Block","src":"5888:97:14","statements":[{"expression":{"arguments":[{"id":2707,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2699,"src":"5924:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2708,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2701,"src":"5932:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":2709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":2706,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[2713,2742],"referencedDeclaration":2742,"src":"5905:18:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":2710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:73:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2705,"id":2711,"nodeType":"Return","src":"5898:80:14"}]},"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"5617:166:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2713,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:14","nodeType":"FunctionDefinition","parameters":{"id":2702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"target","nameLocation":"5824:6:14","nodeType":"VariableDeclaration","scope":2713,"src":"5816:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2701,"mutability":"mutable","name":"data","nameLocation":"5845:4:14","nodeType":"VariableDeclaration","scope":2713,"src":"5832:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2700,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:14"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2713,"src":"5874:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2703,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:14"},"scope":2872,"src":"5788:197:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2741,"nodeType":"Block","src":"6327:168:14","statements":[{"assignments":[2726,2728],"declarations":[{"constant":false,"id":2726,"mutability":"mutable","name":"success","nameLocation":"6343:7:14","nodeType":"VariableDeclaration","scope":2741,"src":"6338:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2725,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2728,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:14","nodeType":"VariableDeclaration","scope":2741,"src":"6352:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2727,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2733,"initialValue":{"arguments":[{"id":2731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2718,"src":"6397:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6379:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:14","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6379:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:14"},{"expression":{"arguments":[{"id":2735,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"6446:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2726,"src":"6454:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2737,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"6463:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2738,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2720,"src":"6475:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2734,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"6419:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6419:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2724,"id":2740,"nodeType":"Return","src":"6412:76:14"}]},"documentation":{"id":2714,"nodeType":"StructuredDocumentation","src":"5991:173:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2742,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:14","nodeType":"FunctionDefinition","parameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2716,"mutability":"mutable","name":"target","nameLocation":"6214:6:14","nodeType":"VariableDeclaration","scope":2742,"src":"6206:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2715,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2718,"mutability":"mutable","name":"data","nameLocation":"6243:4:14","nodeType":"VariableDeclaration","scope":2742,"src":"6230:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2717,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2720,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:14","nodeType":"VariableDeclaration","scope":2742,"src":"6257:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2719,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:14"},"returnParameters":{"id":2724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2742,"src":"6313:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2722,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:14"},"scope":2872,"src":"6169:326:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2758,"nodeType":"Block","src":"6771:101:14","statements":[{"expression":{"arguments":[{"id":2753,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2745,"src":"6809:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2754,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"6817:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2752,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2759,2788],"referencedDeclaration":2788,"src":"6788:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6788:77:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2751,"id":2757,"nodeType":"Return","src":"6781:84:14"}]},"documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"6501:168:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2759,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:14","nodeType":"FunctionDefinition","parameters":{"id":2748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2745,"mutability":"mutable","name":"target","nameLocation":"6712:6:14","nodeType":"VariableDeclaration","scope":2759,"src":"6704:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2747,"mutability":"mutable","name":"data","nameLocation":"6733:4:14","nodeType":"VariableDeclaration","scope":2759,"src":"6720:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2746,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:14"},"returnParameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2759,"src":"6757:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2749,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:14"},"scope":2872,"src":"6674:198:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2787,"nodeType":"Block","src":"7213:170:14","statements":[{"assignments":[2772,2774],"declarations":[{"constant":false,"id":2772,"mutability":"mutable","name":"success","nameLocation":"7229:7:14","nodeType":"VariableDeclaration","scope":2787,"src":"7224:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2771,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2774,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:14","nodeType":"VariableDeclaration","scope":2787,"src":"7238:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2773,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2779,"initialValue":{"arguments":[{"id":2777,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"7285:4:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2775,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"7265:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:14","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7265:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:14"},{"expression":{"arguments":[{"id":2781,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"7334:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2782,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2772,"src":"7342:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2783,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2774,"src":"7351:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2784,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"7363:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2780,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2827,"src":"7307:26:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7307:69:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2770,"id":2786,"nodeType":"Return","src":"7300:76:14"}]},"documentation":{"id":2760,"nodeType":"StructuredDocumentation","src":"6878:175:14","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2788,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:14","nodeType":"FunctionDefinition","parameters":{"id":2767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2762,"mutability":"mutable","name":"target","nameLocation":"7105:6:14","nodeType":"VariableDeclaration","scope":2788,"src":"7097:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2761,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"data","nameLocation":"7134:4:14","nodeType":"VariableDeclaration","scope":2788,"src":"7121:17:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2763,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2766,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:14","nodeType":"VariableDeclaration","scope":2788,"src":"7148:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2765,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:14"},"returnParameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2788,"src":"7199:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2768,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:14"},"scope":2872,"src":"7058:325:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2826,"nodeType":"Block","src":"7865:434:14","statements":[{"condition":{"id":2802,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"7879:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2824,"nodeType":"Block","src":"8235:58:14","statements":[{"expression":{"arguments":[{"id":2820,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"8257:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2821,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"8269:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2819,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"8249:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8249:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2823,"nodeType":"ExpressionStatement","src":"8249:33:14"}]},"id":2825,"nodeType":"IfStatement","src":"7875:418:14","trueBody":{"id":2818,"nodeType":"Block","src":"7888:341:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2803,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"7906:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7906:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2815,"nodeType":"IfStatement","src":"7902:286:14","trueBody":{"id":2814,"nodeType":"Block","src":"7930:258:14","statements":[{"expression":{"arguments":[{"arguments":[{"id":2809,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2791,"src":"8132:6:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2808,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2560,"src":"8121:10:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:18:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":2807,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8113:60:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2813,"nodeType":"ExpressionStatement","src":"8113:60:14"}]}},{"expression":{"id":2816,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"8208:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2801,"id":2817,"nodeType":"Return","src":"8201:17:14"}]}}]},"documentation":{"id":2789,"nodeType":"StructuredDocumentation","src":"7389:277:14","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":2827,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:14","nodeType":"FunctionDefinition","parameters":{"id":2798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"target","nameLocation":"7724:6:14","nodeType":"VariableDeclaration","scope":2827,"src":"7716:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2790,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"success","nameLocation":"7745:7:14","nodeType":"VariableDeclaration","scope":2827,"src":"7740:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2792,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:14","nodeType":"VariableDeclaration","scope":2827,"src":"7762:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2797,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:14","nodeType":"VariableDeclaration","scope":2827,"src":"7795:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2796,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:14"},"returnParameters":{"id":2801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2800,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2827,"src":"7851:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2799,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:14"},"scope":2872,"src":"7671:628:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2850,"nodeType":"Block","src":"8680:135:14","statements":[{"condition":{"id":2839,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2830,"src":"8694:7:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2848,"nodeType":"Block","src":"8751:58:14","statements":[{"expression":{"arguments":[{"id":2844,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8773:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2845,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2834,"src":"8785:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2843,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2871,"src":"8765:7:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":2846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8765:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2847,"nodeType":"ExpressionStatement","src":"8765:33:14"}]},"id":2849,"nodeType":"IfStatement","src":"8690:119:14","trueBody":{"id":2842,"nodeType":"Block","src":"8703:42:14","statements":[{"expression":{"id":2840,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2832,"src":"8724:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2838,"id":2841,"nodeType":"Return","src":"8717:17:14"}]}}]},"documentation":{"id":2828,"nodeType":"StructuredDocumentation","src":"8305:210:14","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":2851,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:14","nodeType":"FunctionDefinition","parameters":{"id":2835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2830,"mutability":"mutable","name":"success","nameLocation":"8560:7:14","nodeType":"VariableDeclaration","scope":2851,"src":"8555:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2829,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2832,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:14","nodeType":"VariableDeclaration","scope":2851,"src":"8577:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2831,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2834,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:14","nodeType":"VariableDeclaration","scope":2851,"src":"8610:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2833,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:14"},"returnParameters":{"id":2838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2837,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2851,"src":"8666:12:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2836,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:14"},"scope":2872,"src":"8520:295:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"8904:457:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2858,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"8980:10:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8980:17:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2868,"nodeType":"Block","src":"9310:45:14","statements":[{"expression":{"arguments":[{"id":2865,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2855,"src":"9331:12:14","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2864,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:14","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9324:20:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2867,"nodeType":"ExpressionStatement","src":"9324:20:14"}]},"id":2869,"nodeType":"IfStatement","src":"8976:379:14","trueBody":{"id":2863,"nodeType":"Block","src":"9003:301:14","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:14","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:14","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:14"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:14"},"nodeType":"YulFunctionCall","src":"9202:17:14"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:14","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:14","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:14"},"nodeType":"YulFunctionCall","src":"9243:19:14"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:14"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:14"},"nodeType":"YulFunctionCall","src":"9236:44:14"},"nodeType":"YulExpressionStatement","src":"9236:44:14"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2853,"isOffset":false,"isSlot":false,"src":"9208:10:14","valueSize":1},{"declaration":2853,"isOffset":false,"isSlot":false,"src":"9251:10:14","valueSize":1}],"id":2862,"nodeType":"InlineAssembly","src":"9152:142:14"}]}}]},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:14","nodeType":"FunctionDefinition","parameters":{"id":2856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2853,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:14","nodeType":"VariableDeclaration","scope":2871,"src":"8838:23:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2852,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2855,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:14","nodeType":"VariableDeclaration","scope":2871,"src":"8863:26:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2854,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:14"},"returnParameters":{"id":2857,"nodeType":"ParameterList","parameters":[],"src":"8904:0:14"},"scope":2872,"src":"8821:540:14","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2873,"src":"194:9169:14","usedErrors":[]}],"src":"101:9263:14"},"id":14},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2894]},"id":2895,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2874,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:15"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":2875,"nodeType":"StructuredDocumentation","src":"111:496:15","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2894,"linearizedBaseContracts":[2894],"name":"Context","nameLocation":"626:7:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":2883,"nodeType":"Block","src":"702:34:15","statements":[{"expression":{"expression":{"id":2880,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2879,"id":2882,"nodeType":"Return","src":"712:17:15"}]},"id":2884,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:15","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[],"src":"659:2:15"},"returnParameters":{"id":2879,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2878,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2884,"src":"693:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2877,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:15"},"scope":2894,"src":"640:96:15","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2892,"nodeType":"Block","src":"809:32:15","statements":[{"expression":{"expression":{"id":2889,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2888,"id":2891,"nodeType":"Return","src":"819:15:15"}]},"id":2893,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:15","nodeType":"FunctionDefinition","parameters":{"id":2885,"nodeType":"ParameterList","parameters":[],"src":"759:2:15"},"returnParameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2893,"src":"793:14:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:15"},"scope":2894,"src":"742:99:15","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2895,"src":"608:235:15","usedErrors":[]}],"src":"86:758:15"},"id":15},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4025],"SignedMath":[4130],"Strings":[3123]},"id":3124,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2896,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2897,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":4026,"src":"126:25:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2898,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3124,"sourceUnit":4131,"src":"152:31:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2899,"nodeType":"StructuredDocumentation","src":"185:34:16","text":" @dev String operations."},"fullyImplemented":true,"id":3123,"linearizedBaseContracts":[3123],"name":"Strings","nameLocation":"228:7:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2902,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:16","nodeType":"VariableDeclaration","scope":3123,"src":"242:54:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2900,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2905,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:16","nodeType":"VariableDeclaration","scope":3123,"src":"302:43:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2903,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:16","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":2952,"nodeType":"Block","src":"518:625:16","statements":[{"id":2951,"nodeType":"UncheckedBlock","src":"528:609:16","statements":[{"assignments":[2914],"declarations":[{"constant":false,"id":2914,"mutability":"mutable","name":"length","nameLocation":"560:6:16","nodeType":"VariableDeclaration","scope":2951,"src":"552:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2913,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"580:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2915,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"569:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4025_$","typeString":"type(library Math)"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":3862,"src":"569:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"569:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:16"},{"assignments":[2923],"declarations":[{"constant":false,"id":2923,"mutability":"mutable","name":"buffer","nameLocation":"618:6:16","nodeType":"VariableDeclaration","scope":2951,"src":"604:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2922,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2928,"initialValue":{"arguments":[{"id":2926,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2914,"src":"638:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2924,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"627:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:16"},{"assignments":[2930],"declarations":[{"constant":false,"id":2930,"mutability":"mutable","name":"ptr","nameLocation":"667:3:16","nodeType":"VariableDeclaration","scope":2951,"src":"659:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2931,"nodeType":"VariableDeclarationStatement","src":"659:11:16"},{"AST":{"nodeType":"YulBlock","src":"740:67:16","statements":[{"nodeType":"YulAssignment","src":"758:35:16","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:16","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:16"},"nodeType":"YulFunctionCall","src":"777:15:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:16"},"nodeType":"YulFunctionCall","src":"765:28:16"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:16"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2923,"isOffset":false,"isSlot":false,"src":"769:6:16","valueSize":1},{"declaration":2914,"isOffset":false,"isSlot":false,"src":"785:6:16","valueSize":1},{"declaration":2930,"isOffset":false,"isSlot":false,"src":"758:3:16","valueSize":1}],"id":2932,"nodeType":"InlineAssembly","src":"731:76:16"},{"body":{"id":2947,"nodeType":"Block","src":"833:267:16","statements":[{"expression":{"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:16","subExpression":{"id":2934,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"851:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2936,"nodeType":"ExpressionStatement","src":"851:5:16"},{"AST":{"nodeType":"YulBlock","src":"934:84:16","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:16"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:16"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:16","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:16"},"nodeType":"YulFunctionCall","src":"974:14:16"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:16"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:16"},"nodeType":"YulFunctionCall","src":"969:30:16"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:16"},"nodeType":"YulFunctionCall","src":"956:44:16"},"nodeType":"YulExpressionStatement","src":"956:44:16"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2902,"isOffset":false,"isSlot":false,"src":"990:8:16","valueSize":1},{"declaration":2930,"isOffset":false,"isSlot":false,"src":"964:3:16","valueSize":1},{"declaration":2908,"isOffset":false,"isSlot":false,"src":"978:5:16","valueSize":1}],"id":2937,"nodeType":"InlineAssembly","src":"925:93:16"},{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2938,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"1035:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:16","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2941,"nodeType":"ExpressionStatement","src":"1035:11:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2942,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2908,"src":"1068:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2946,"nodeType":"IfStatement","src":"1064:21:16","trueBody":{"id":2945,"nodeType":"Break","src":"1080:5:16"}}]},"condition":{"hexValue":"74727565","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2948,"nodeType":"WhileStatement","src":"820:280:16"},{"expression":{"id":2949,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"1120:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2912,"id":2950,"nodeType":"Return","src":"1113:13:16"}]}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"352:90:16","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2953,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:16","nodeType":"FunctionDefinition","parameters":{"id":2909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2908,"mutability":"mutable","name":"value","nameLocation":"473:5:16","nodeType":"VariableDeclaration","scope":2953,"src":"465:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2907,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:16"},"returnParameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2953,"src":"503:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2910,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:16"},"scope":3123,"src":"447:696:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2980,"nodeType":"Block","src":"1313:103:16","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1354:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:16","trueExpression":{"hexValue":"2d","id":2968,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"1400:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2972,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4130,"src":"1385:10:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$4130_$","typeString":"type(library SignedMath)"}},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":4129,"src":"1385:14:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1385:21:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2971,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[2953,2981],"referencedDeclaration":2953,"src":"1376:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1376:31:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2963,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:16","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1337:71:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2961,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:16","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1330:79:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2960,"id":2979,"nodeType":"Return","src":"1323:86:16"}]},"documentation":{"id":2954,"nodeType":"StructuredDocumentation","src":"1149:89:16","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2981,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:16","nodeType":"FunctionDefinition","parameters":{"id":2957,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2956,"mutability":"mutable","name":"value","nameLocation":"1268:5:16","nodeType":"VariableDeclaration","scope":2981,"src":"1261:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2955,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:16"},"returnParameters":{"id":2960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2959,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2981,"src":"1298:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2958,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:16"},"scope":3123,"src":"1243:173:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3000,"nodeType":"Block","src":"1595:100:16","statements":[{"id":2999,"nodeType":"UncheckedBlock","src":"1605:84:16","statements":[{"expression":{"arguments":[{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"1648:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"1667:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2991,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4025,"src":"1655:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4025_$","typeString":"type(library Math)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":3985,"src":"1655:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1655:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2989,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3001,3077,3097],"referencedDeclaration":3077,"src":"1636:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1636:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2988,"id":2998,"nodeType":"Return","src":"1629:49:16"}]}]},"documentation":{"id":2982,"nodeType":"StructuredDocumentation","src":"1422:94:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":3001,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:16","nodeType":"FunctionDefinition","parameters":{"id":2985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2984,"mutability":"mutable","name":"value","nameLocation":"1550:5:16","nodeType":"VariableDeclaration","scope":3001,"src":"1542:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2983,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:16"},"returnParameters":{"id":2988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2987,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3001,"src":"1580:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2986,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:16"},"scope":3123,"src":"1521:174:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"1908:347:16","statements":[{"assignments":[3012],"declarations":[{"constant":false,"id":3012,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:16","nodeType":"VariableDeclaration","scope":3076,"src":"1918:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3011,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3021,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3016,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"1954:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":3018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3013,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:16"},{"expression":{"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3022,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"1975:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3024,"indexExpression":{"hexValue":"30","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3027,"nodeType":"ExpressionStatement","src":"1975:15:16"},{"expression":{"id":3032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3028,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2000:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3030,"indexExpression":{"hexValue":"31","id":3029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":3031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3033,"nodeType":"ExpressionStatement","src":"2000:15:16"},{"body":{"id":3062,"nodeType":"Block","src":"2070:83:16","statements":[{"expression":{"id":3056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3048,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2084:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3050,"indexExpression":{"id":3049,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"2091:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3051,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2902,"src":"2096:8:16","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":3055,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2105:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":3053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:16","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:16","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3057,"nodeType":"ExpressionStatement","src":"2084:33:16"},{"expression":{"id":3060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2131:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:16","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3061,"nodeType":"ExpressionStatement","src":"2131:11:16"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3042,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"2058:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":3043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3063,"initializationExpression":{"assignments":[3035],"declarations":[{"constant":false,"id":3035,"mutability":"mutable","name":"i","nameLocation":"2038:1:16","nodeType":"VariableDeclaration","scope":3063,"src":"2030:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3041,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:16","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3037,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3006,"src":"2046:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3039,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:16"},"loopExpression":{"expression":{"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:16","subExpression":{"id":3045,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3035,"src":"2067:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3047,"nodeType":"ExpressionStatement","src":"2065:3:16"},"nodeType":"ForStatement","src":"2025:128:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3004,"src":"2170:5:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":3064,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2162:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3070,"nodeType":"ExpressionStatement","src":"2162:55:16"},{"expression":{"arguments":[{"id":3073,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"2241:6:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3071,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:16","typeDescriptions":{}}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3010,"id":3075,"nodeType":"Return","src":"2227:21:16"}]},"documentation":{"id":3002,"nodeType":"StructuredDocumentation","src":"1701:112:16","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:16","nodeType":"FunctionDefinition","parameters":{"id":3007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3004,"mutability":"mutable","name":"value","nameLocation":"1847:5:16","nodeType":"VariableDeclaration","scope":3077,"src":"1839:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3003,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3006,"mutability":"mutable","name":"length","nameLocation":"1862:6:16","nodeType":"VariableDeclaration","scope":3077,"src":"1854:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3005,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:16"},"returnParameters":{"id":3010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"1893:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3008,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:16"},"scope":3123,"src":"1818:437:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3096,"nodeType":"Block","src":"2480:76:16","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":3090,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"2525:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3088,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:16","typeDescriptions":{}}},"id":3091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2517:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:16","typeDescriptions":{}}},"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2509:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3093,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"2533:15:16","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3085,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[3001,3077,3097],"referencedDeclaration":3077,"src":"2497:11:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2497:52:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3084,"id":3095,"nodeType":"Return","src":"2490:59:16"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"2261:141:16","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:16","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"addr","nameLocation":"2436:4:16","nodeType":"VariableDeclaration","scope":3097,"src":"2428:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3079,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:16"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3097,"src":"2465:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3082,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:16"},"scope":3123,"src":"2407:149:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3121,"nodeType":"Block","src":"2711:66:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3110,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3100,"src":"2744:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3108,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:16","typeDescriptions":{}}},"id":3111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2738:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3107,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2728:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":3116,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3102,"src":"2767:1:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3114,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:16","typeDescriptions":{}}},"id":3117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2761:8:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3113,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2751:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3106,"id":3120,"nodeType":"Return","src":"2721:49:16"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"2562:66:16","text":" @dev Returns true if the two strings are equal."},"id":3122,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:16","nodeType":"FunctionDefinition","parameters":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"a","nameLocation":"2662:1:16","nodeType":"VariableDeclaration","scope":3122,"src":"2648:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3099,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"b","nameLocation":"2679:1:16","nodeType":"VariableDeclaration","scope":3122,"src":"2665:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3101,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:16"},"returnParameters":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3122,"src":"2705:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3104,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:16"},"scope":3123,"src":"2633:144:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3124,"src":"220:2559:16","usedErrors":[]}],"src":"101:2679:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3147],"IERC165":[3159]},"id":3148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3125,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3126,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3148,"sourceUnit":3160,"src":"124:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3128,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":3159,"src":"754:7:17"},"id":3129,"nodeType":"InheritanceSpecifier","src":"754:7:17"}],"contractDependencies":[],"contractKind":"contract","documentation":{"id":3127,"nodeType":"StructuredDocumentation","src":"149:576:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":3147,"linearizedBaseContracts":[3147,3159],"name":"ERC165","nameLocation":"744:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3158],"body":{"id":3145,"nodeType":"Block","src":"920:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3138,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3132,"src":"937:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3140,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3159_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3159_$","typeString":"type(contract IERC165)"}],"id":3139,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3159","typeString":"type(contract IERC165)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3137,"id":3144,"nodeType":"Return","src":"930:47:17"}]},"documentation":{"id":3130,"nodeType":"StructuredDocumentation","src":"768:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":3146,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:17","nodeType":"FunctionDefinition","overrides":{"id":3134,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:17"},"parameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:17","nodeType":"VariableDeclaration","scope":3146,"src":"856:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3131,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:17"},"returnParameters":{"id":3137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3146,"src":"914:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3135,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:17"},"scope":3147,"src":"829:155:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3148,"src":"726:260:17","usedErrors":[]}],"src":"99:888:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3159]},"id":3160,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3149,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"125:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3159,"linearizedBaseContracts":[3159],"name":"IERC165","nameLocation":"415:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3151,"nodeType":"StructuredDocumentation","src":"429:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3158,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:18","nodeType":"FunctionDefinition","parameters":{"id":3154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3153,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:18","nodeType":"VariableDeclaration","scope":3158,"src":"801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3152,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:18"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3156,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3158,"src":"844:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3155,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:18"},"scope":3159,"src":"774:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3160,"src":"405:447:18","usedErrors":[]}],"src":"100:753:18"},"id":18},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4025]},"id":4026,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3161,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":3162,"nodeType":"StructuredDocumentation","src":"128:73:19","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4025,"linearizedBaseContracts":[4025],"name":"Math","nameLocation":"210:4:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3166,"members":[{"id":3163,"name":"Down","nameLocation":"245:4:19","nodeType":"EnumValue","src":"245:4:19"},{"id":3164,"name":"Up","nameLocation":"287:2:19","nodeType":"EnumValue","src":"287:2:19"},{"id":3165,"name":"Zero","nameLocation":"318:4:19","nodeType":"EnumValue","src":"318:4:19"}],"name":"Rounding","nameLocation":"226:8:19","nodeType":"EnumDefinition","src":"221:122:19"},{"body":{"id":3183,"nodeType":"Block","src":"480:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"497:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"501:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3180,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"509:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:19","trueExpression":{"id":3179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"505:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3175,"id":3182,"nodeType":"Return","src":"490:20:19"}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"349:59:19","text":" @dev Returns the largest of two numbers."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:19","nodeType":"FunctionDefinition","parameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"a","nameLocation":"434:1:19","nodeType":"VariableDeclaration","scope":3184,"src":"426:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3168,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"b","nameLocation":"445:1:19","nodeType":"VariableDeclaration","scope":3184,"src":"437:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3170,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:19"},"returnParameters":{"id":3175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3174,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3184,"src":"471:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3173,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:19"},"scope":4025,"src":"413:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3201,"nodeType":"Block","src":"655:37:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"672:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3195,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"676:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":3198,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"684:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:19","trueExpression":{"id":3197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3187,"src":"680:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3193,"id":3200,"nodeType":"Return","src":"665:20:19"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"523:60:19","text":" @dev Returns the smallest of two numbers."},"id":3202,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:19","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"a","nameLocation":"609:1:19","nodeType":"VariableDeclaration","scope":3202,"src":"601:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3186,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"b","nameLocation":"620:1:19","nodeType":"VariableDeclaration","scope":3202,"src":"612:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:19"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3202,"src":"646:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3191,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:19"},"scope":4025,"src":"588:104:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3224,"nodeType":"Block","src":"876:82:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"931:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3213,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"935:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3216,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"941:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3217,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"945:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3219,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3211,"id":3223,"nodeType":"Return","src":"923:28:19"}]},"documentation":{"id":3203,"nodeType":"StructuredDocumentation","src":"698:102:19","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3225,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:19","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3205,"mutability":"mutable","name":"a","nameLocation":"830:1:19","nodeType":"VariableDeclaration","scope":3225,"src":"822:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3204,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3207,"mutability":"mutable","name":"b","nameLocation":"841:1:19","nodeType":"VariableDeclaration","scope":3225,"src":"833:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:19"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3225,"src":"867:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3209,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:19"},"scope":4025,"src":"805:153:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3249,"nodeType":"Block","src":"1228:123:19","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3235,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"1316:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3239,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"1330:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3243,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3230,"src":"1339:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:19","trueExpression":{"hexValue":"30","id":3238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3234,"id":3248,"nodeType":"Return","src":"1309:35:19"}]},"documentation":{"id":3226,"nodeType":"StructuredDocumentation","src":"964:188:19","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":3250,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:19","nodeType":"FunctionDefinition","parameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3228,"mutability":"mutable","name":"a","nameLocation":"1182:1:19","nodeType":"VariableDeclaration","scope":3250,"src":"1174:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3230,"mutability":"mutable","name":"b","nameLocation":"1193:1:19","nodeType":"VariableDeclaration","scope":3250,"src":"1185:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3229,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:19"},"returnParameters":{"id":3234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3250,"src":"1219:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3232,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:19"},"scope":4025,"src":"1157:194:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"1765:4115:19","statements":[{"id":3371,"nodeType":"UncheckedBlock","src":"1775:4099:19","statements":[{"assignments":[3263],"declarations":[{"constant":false,"id":3263,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:19","nodeType":"VariableDeclaration","scope":3371,"src":"2096:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3262,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3264,"nodeType":"VariableDeclarationStatement","src":"2096:13:19"},{"assignments":[3266],"declarations":[{"constant":false,"id":3266,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:19","nodeType":"VariableDeclaration","scope":3371,"src":"2168:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3265,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3267,"nodeType":"VariableDeclarationStatement","src":"2168:13:19"},{"AST":{"nodeType":"YulBlock","src":"2248:157:19","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:19"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:19","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:19"},"nodeType":"YulFunctionCall","src":"2289:6:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:19"},"nodeType":"YulFunctionCall","src":"2276:20:19"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:19","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:19"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:19"},"nodeType":"YulFunctionCall","src":"2322:9:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:19"}]},{"nodeType":"YulAssignment","src":"2348:43:19","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:19"},"nodeType":"YulFunctionCall","src":"2361:14:19"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:19"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:19"},"nodeType":"YulFunctionCall","src":"2377:13:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:19"},"nodeType":"YulFunctionCall","src":"2357:34:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3263,"isOffset":false,"isSlot":false,"src":"2313:5:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"2369:5:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"2384:5:19","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"2348:5:19","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":false,"src":"2283:1:19","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":false,"src":"2326:1:19","valueSize":1},{"declaration":3255,"isOffset":false,"isSlot":false,"src":"2286:1:19","valueSize":1},{"declaration":3255,"isOffset":false,"isSlot":false,"src":"2329:1:19","valueSize":1}],"id":3268,"nodeType":"InlineAssembly","src":"2239:166:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3269,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2486:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3277,"nodeType":"IfStatement","src":"2482:368:19","trueBody":{"id":3276,"nodeType":"Block","src":"2498:352:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3272,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"2816:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3273,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2824:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3261,"id":3275,"nodeType":"Return","src":"2809:26:19"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3279,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"2960:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3280,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"2974:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":3282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":3278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2952:53:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3284,"nodeType":"ExpressionStatement","src":"2952:53:19"},{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:19","nodeType":"VariableDeclaration","scope":3371,"src":"3261:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3287,"nodeType":"VariableDeclarationStatement","src":"3261:17:19"},{"AST":{"nodeType":"YulBlock","src":"3301:291:19","statements":[{"nodeType":"YulAssignment","src":"3370:38:19","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:19"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:19"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:19"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:19"},"nodeType":"YulFunctionCall","src":"3383:25:19"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:19"}]},{"nodeType":"YulAssignment","src":"3490:41:19","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:19"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:19"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:19"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:19"},"nodeType":"YulFunctionCall","src":"3510:20:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:19"},"nodeType":"YulFunctionCall","src":"3499:32:19"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:19"}]},{"nodeType":"YulAssignment","src":"3548:30:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:19"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:19"},"nodeType":"YulFunctionCall","src":"3557:21:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3257,"isOffset":false,"isSlot":false,"src":"3396:11:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3524:5:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3548:5:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"3561:5:19","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"3490:5:19","valueSize":1},{"declaration":3266,"isOffset":false,"isSlot":false,"src":"3503:5:19","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"3370:9:19","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"3513:9:19","valueSize":1},{"declaration":3286,"isOffset":false,"isSlot":false,"src":"3568:9:19","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":false,"src":"3390:1:19","valueSize":1},{"declaration":3255,"isOffset":false,"isSlot":false,"src":"3393:1:19","valueSize":1}],"id":3288,"nodeType":"InlineAssembly","src":"3292:300:19"},{"assignments":[3290],"declarations":[{"constant":false,"id":3290,"mutability":"mutable","name":"twos","nameLocation":"3907:4:19","nodeType":"VariableDeclaration","scope":3371,"src":"3899:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3289,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3298,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3291,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"3914:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:19","subExpression":{"id":3292,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"3930:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:19"},{"AST":{"nodeType":"YulBlock","src":"3969:362:19","statements":[{"nodeType":"YulAssignment","src":"4034:37:19","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:19"},"nodeType":"YulFunctionCall","src":"4049:22:19"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:19"}]},{"nodeType":"YulAssignment","src":"4138:25:19","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:19"},"nodeType":"YulFunctionCall","src":"4147:16:19"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:19"}]},{"nodeType":"YulAssignment","src":"4278:39:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:19","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:19"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:19"},"nodeType":"YulFunctionCall","src":"4294:12:19"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:19"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:19"},"nodeType":"YulFunctionCall","src":"4290:23:19"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:19","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:19"},"nodeType":"YulFunctionCall","src":"4286:31:19"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:19"}]}]},"evmVersion":"london","externalReferences":[{"declaration":3257,"isOffset":false,"isSlot":false,"src":"4034:11:19","valueSize":1},{"declaration":3257,"isOffset":false,"isSlot":false,"src":"4053:11:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4138:5:19","valueSize":1},{"declaration":3263,"isOffset":false,"isSlot":false,"src":"4151:5:19","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4066:4:19","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4158:4:19","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4278:4:19","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4301:4:19","valueSize":1},{"declaration":3290,"isOffset":false,"isSlot":false,"src":"4308:4:19","valueSize":1}],"id":3299,"nodeType":"InlineAssembly","src":"3960:371:19"},{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3300,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"4397:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3301,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3266,"src":"4406:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3302,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3290,"src":"4414:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ExpressionStatement","src":"4397:21:19"},{"assignments":[3307],"declarations":[{"constant":false,"id":3307,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:19","nodeType":"VariableDeclaration","scope":3371,"src":"4736:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3306,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3314,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3309,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"4759:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3311,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:19"},{"expression":{"id":3321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3315,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"4992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3317,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5007:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3318,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5021:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3322,"nodeType":"ExpressionStatement","src":"4992:36:19"},{"expression":{"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3323,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5061:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3325,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5076:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3326,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5090:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3330,"nodeType":"ExpressionStatement","src":"5061:36:19"},{"expression":{"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3331,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5131:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5146:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3334,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5160:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3338,"nodeType":"ExpressionStatement","src":"5131:36:19"},{"expression":{"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3339,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5201:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3341,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5216:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3342,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5230:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3346,"nodeType":"ExpressionStatement","src":"5201:36:19"},{"expression":{"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3347,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5286:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3350,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5300:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3354,"nodeType":"ExpressionStatement","src":"5271:36:19"},{"expression":{"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3355,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5342:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3257,"src":"5357:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3358,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5371:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3362,"nodeType":"ExpressionStatement","src":"5342:36:19"},{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3363,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5812:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3364,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3263,"src":"5821:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3365,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3307,"src":"5829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3368,"nodeType":"ExpressionStatement","src":"5812:24:19"},{"expression":{"id":3369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3260,"src":"5857:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3261,"id":3370,"nodeType":"Return","src":"5850:13:19"}]}]},"documentation":{"id":3251,"nodeType":"StructuredDocumentation","src":"1357:305:19","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:19","nodeType":"FunctionDefinition","parameters":{"id":3258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"x","nameLocation":"1691:1:19","nodeType":"VariableDeclaration","scope":3373,"src":"1683:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"y","nameLocation":"1702:1:19","nodeType":"VariableDeclaration","scope":3373,"src":"1694:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3257,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:19","nodeType":"VariableDeclaration","scope":3373,"src":"1705:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:19"},"returnParameters":{"id":3261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3260,"mutability":"mutable","name":"result","nameLocation":"1757:6:19","nodeType":"VariableDeclaration","scope":3373,"src":"1749:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:19"},"scope":4025,"src":"1667:4213:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3416,"nodeType":"Block","src":"6122:189:19","statements":[{"assignments":[3389],"declarations":[{"constant":false,"id":3389,"mutability":"mutable","name":"result","nameLocation":"6140:6:19","nodeType":"VariableDeclaration","scope":3416,"src":"6132:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3388,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3395,"initialValue":{"arguments":[{"id":3391,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6156:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3392,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"6159:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3393,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6162:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3390,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3373,3417],"referencedDeclaration":3373,"src":"6149:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6149:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3396,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3383,"src":"6188:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3397,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"6200:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3166_$","typeString":"type(enum Math.Rounding)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"6200:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"src":"6188:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3401,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6222:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3402,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"6225:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3403,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"6228:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3400,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:19","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6215:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3413,"nodeType":"IfStatement","src":"6184:98:19","trueBody":{"id":3412,"nodeType":"Block","src":"6246:36:19","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6260:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3411,"nodeType":"ExpressionStatement","src":"6260:11:19"}]}},{"expression":{"id":3414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3389,"src":"6298:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3387,"id":3415,"nodeType":"Return","src":"6291:13:19"}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"5886:121:19","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3417,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:19","nodeType":"FunctionDefinition","parameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"x","nameLocation":"6036:1:19","nodeType":"VariableDeclaration","scope":3417,"src":"6028:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"y","nameLocation":"6047:1:19","nodeType":"VariableDeclaration","scope":3417,"src":"6039:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3380,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:19","nodeType":"VariableDeclaration","scope":3417,"src":"6050:19:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:19","nodeType":"VariableDeclaration","scope":3417,"src":"6071:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"typeName":{"id":3382,"nodeType":"UserDefinedTypeName","pathNode":{"id":3381,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"6071:8:19"},"referencedDeclaration":3166,"src":"6071:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:19"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3417,"src":"6113:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:19"},"scope":4025,"src":"6012:299:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3528,"nodeType":"Block","src":"6587:1585:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3425,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"6601:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3431,"nodeType":"IfStatement","src":"6597:45:19","trueBody":{"id":3430,"nodeType":"Block","src":"6609:33:19","statements":[{"expression":{"hexValue":"30","id":3428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3424,"id":3429,"nodeType":"Return","src":"6623:8:19"}]}},{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"result","nameLocation":"7329:6:19","nodeType":"VariableDeclaration","scope":3528,"src":"7321:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3436,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7349:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3435,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3697,3733],"referencedDeclaration":3697,"src":"7344:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7344:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:19"},{"id":3527,"nodeType":"UncheckedBlock","src":"7758:408:19","statements":[{"expression":{"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3443,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7782:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3444,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7792:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7801:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7805:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3449,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3453,"nodeType":"ExpressionStatement","src":"7782:35:19"},{"expression":{"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7831:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3455,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7841:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3456,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7850:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3457,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7854:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3464,"nodeType":"ExpressionStatement","src":"7831:35:19"},{"expression":{"id":3474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3465,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7880:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7890:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3467,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7899:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3468,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7903:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3475,"nodeType":"ExpressionStatement","src":"7880:35:19"},{"expression":{"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3476,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7929:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3477,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7939:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3478,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7948:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3479,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7952:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3486,"nodeType":"ExpressionStatement","src":"7929:35:19"},{"expression":{"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3487,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7978:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3488,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"7988:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3489,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"7997:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3490,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8001:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3493,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3494,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3497,"nodeType":"ExpressionStatement","src":"7978:35:19"},{"expression":{"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3498,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8027:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8037:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"8046:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3501,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8050:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3508,"nodeType":"ExpressionStatement","src":"8027:35:19"},{"expression":{"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3509,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8076:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3510,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8086:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3511,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"8095:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3512,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8099:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3515,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3519,"nodeType":"ExpressionStatement","src":"8076:35:19"},{"expression":{"arguments":[{"id":3521,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8136:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3522,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"8144:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"8148:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3520,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3202,"src":"8132:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8132:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3424,"id":3526,"nodeType":"Return","src":"8125:30:19"}]}]},"documentation":{"id":3418,"nodeType":"StructuredDocumentation","src":"6317:208:19","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":3529,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:19","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3420,"mutability":"mutable","name":"a","nameLocation":"6552:1:19","nodeType":"VariableDeclaration","scope":3529,"src":"6544:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:19"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3529,"src":"6578:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:19"},"scope":4025,"src":"6530:1642:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3564,"nodeType":"Block","src":"8348:161:19","statements":[{"id":3563,"nodeType":"UncheckedBlock","src":"8358:145:19","statements":[{"assignments":[3541],"declarations":[{"constant":false,"id":3541,"mutability":"mutable","name":"result","nameLocation":"8390:6:19","nodeType":"VariableDeclaration","scope":3563,"src":"8382:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3540,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3545,"initialValue":{"arguments":[{"id":3543,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8404:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3542,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[3529,3565],"referencedDeclaration":3529,"src":"8399:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8399:7:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"8427:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3535,"src":"8437:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3548,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"8449:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3166_$","typeString":"type(enum Math.Rounding)"}},"id":3549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"8449:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"src":"8437:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3551,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"8464:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3552,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3541,"src":"8473:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3554,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3532,"src":"8482:1:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:19","trueExpression":{"hexValue":"31","id":3557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3539,"id":3562,"nodeType":"Return","src":"8420:72:19"}]}]},"documentation":{"id":3530,"nodeType":"StructuredDocumentation","src":"8178:89:19","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":3565,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:19","nodeType":"FunctionDefinition","parameters":{"id":3536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3532,"mutability":"mutable","name":"a","nameLocation":"8294:1:19","nodeType":"VariableDeclaration","scope":3565,"src":"8286:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3531,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3535,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:19","nodeType":"VariableDeclaration","scope":3565,"src":"8297:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"typeName":{"id":3534,"nodeType":"UserDefinedTypeName","pathNode":{"id":3533,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"8297:8:19"},"referencedDeclaration":3166,"src":"8297:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:19"},"returnParameters":{"id":3539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3565,"src":"8339:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:19"},"scope":4025,"src":"8272:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3696,"nodeType":"Block","src":"8694:922:19","statements":[{"assignments":[3574],"declarations":[{"constant":false,"id":3574,"mutability":"mutable","name":"result","nameLocation":"8712:6:19","nodeType":"VariableDeclaration","scope":3696,"src":"8704:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3573,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3576,"initialValue":{"hexValue":"30","id":3575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:19"},{"id":3693,"nodeType":"UncheckedBlock","src":"8732:855:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"8760:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3591,"nodeType":"IfStatement","src":"8756:99:19","trueBody":{"id":3590,"nodeType":"Block","src":"8778:77:19","statements":[{"expression":{"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3582,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"8796:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3585,"nodeType":"ExpressionStatement","src":"8796:13:19"},{"expression":{"id":3588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3586,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8827:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":3587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3589,"nodeType":"ExpressionStatement","src":"8827:13:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3592,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"8872:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3606,"nodeType":"IfStatement","src":"8868:96:19","trueBody":{"id":3605,"nodeType":"Block","src":"8889:75:19","statements":[{"expression":{"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"8907:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3600,"nodeType":"ExpressionStatement","src":"8907:12:19"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3601,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"8937:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"8937:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"8981:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3621,"nodeType":"IfStatement","src":"8977:96:19","trueBody":{"id":3620,"nodeType":"Block","src":"8998:75:19","statements":[{"expression":{"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9016:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3615,"nodeType":"ExpressionStatement","src":"9016:12:19"},{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3616,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9046:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ExpressionStatement","src":"9046:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9090:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3636,"nodeType":"IfStatement","src":"9086:96:19","trueBody":{"id":3635,"nodeType":"Block","src":"9107:75:19","statements":[{"expression":{"id":3629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9125:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3630,"nodeType":"ExpressionStatement","src":"9125:12:19"},{"expression":{"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9155:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ExpressionStatement","src":"9155:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3651,"nodeType":"IfStatement","src":"9195:93:19","trueBody":{"id":3650,"nodeType":"Block","src":"9215:73:19","statements":[{"expression":{"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9233:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":3643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3645,"nodeType":"ExpressionStatement","src":"9233:11:19"},{"expression":{"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9262:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3649,"nodeType":"ExpressionStatement","src":"9262:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9305:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3666,"nodeType":"IfStatement","src":"9301:93:19","trueBody":{"id":3665,"nodeType":"Block","src":"9321:73:19","statements":[{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3657,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9339:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3660,"nodeType":"ExpressionStatement","src":"9339:11:19"},{"expression":{"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3661,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9368:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3664,"nodeType":"ExpressionStatement","src":"9368:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9411:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":3668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3681,"nodeType":"IfStatement","src":"9407:93:19","trueBody":{"id":3680,"nodeType":"Block","src":"9427:73:19","statements":[{"expression":{"id":3674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9445:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":3673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3675,"nodeType":"ExpressionStatement","src":"9445:11:19"},{"expression":{"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9474:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3679,"nodeType":"ExpressionStatement","src":"9474:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3568,"src":"9517:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3692,"nodeType":"IfStatement","src":"9513:64:19","trueBody":{"id":3691,"nodeType":"Block","src":"9533:44:19","statements":[{"expression":{"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9551:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3690,"nodeType":"ExpressionStatement","src":"9551:11:19"}]}}]},{"expression":{"id":3694,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3574,"src":"9603:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3572,"id":3695,"nodeType":"Return","src":"9596:13:19"}]},"documentation":{"id":3566,"nodeType":"StructuredDocumentation","src":"8515:113:19","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3697,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:19","nodeType":"FunctionDefinition","parameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"value","nameLocation":"8655:5:19","nodeType":"VariableDeclaration","scope":3697,"src":"8647:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:19"},"returnParameters":{"id":3572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3697,"src":"8685:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3570,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:19"},"scope":4025,"src":"8633:983:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3732,"nodeType":"Block","src":"9849:165:19","statements":[{"id":3731,"nodeType":"UncheckedBlock","src":"9859:149:19","statements":[{"assignments":[3709],"declarations":[{"constant":false,"id":3709,"mutability":"mutable","name":"result","nameLocation":"9891:6:19","nodeType":"VariableDeclaration","scope":3731,"src":"9883:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3708,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3713,"initialValue":{"arguments":[{"id":3711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9905:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[3697,3733],"referencedDeclaration":3697,"src":"9900:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9900:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3714,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"9932:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"id":3718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3715,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3703,"src":"9942:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3716,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"9954:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3166_$","typeString":"type(enum Math.Rounding)"}},"id":3717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"9954:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"src":"9942:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"9974:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3722,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3700,"src":"9983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:19","trueExpression":{"hexValue":"31","id":3725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3728,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3707,"id":3730,"nodeType":"Return","src":"9925:72:19"}]}]},"documentation":{"id":3698,"nodeType":"StructuredDocumentation","src":"9622:142:19","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3733,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:19","nodeType":"FunctionDefinition","parameters":{"id":3704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3700,"mutability":"mutable","name":"value","nameLocation":"9791:5:19","nodeType":"VariableDeclaration","scope":3733,"src":"9783:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3699,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3703,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:19","nodeType":"VariableDeclaration","scope":3733,"src":"9798:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"typeName":{"id":3702,"nodeType":"UserDefinedTypeName","pathNode":{"id":3701,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"9798:8:19"},"referencedDeclaration":3166,"src":"9798:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:19"},"returnParameters":{"id":3707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3706,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3733,"src":"9840:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3705,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:19"},"scope":4025,"src":"9769:245:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3861,"nodeType":"Block","src":"10201:854:19","statements":[{"assignments":[3742],"declarations":[{"constant":false,"id":3742,"mutability":"mutable","name":"result","nameLocation":"10219:6:19","nodeType":"VariableDeclaration","scope":3861,"src":"10211:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3741,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3744,"initialValue":{"hexValue":"30","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:19"},{"id":3858,"nodeType":"UncheckedBlock","src":"10239:787:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10267:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3761,"nodeType":"IfStatement","src":"10263:103:19","trueBody":{"id":3760,"nodeType":"Block","src":"10286:80:19","statements":[{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10304:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":3752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"10304:17:19"},{"expression":{"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10339:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":3757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3759,"nodeType":"ExpressionStatement","src":"10339:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3762,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10383:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"IfStatement","src":"10379:103:19","trueBody":{"id":3777,"nodeType":"Block","src":"10402:80:19","statements":[{"expression":{"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10420:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":3770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":3769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3772,"nodeType":"ExpressionStatement","src":"10420:17:19"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10455:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":3774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3776,"nodeType":"ExpressionStatement","src":"10455:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10499:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"10495:103:19","trueBody":{"id":3794,"nodeType":"Block","src":"10518:80:19","statements":[{"expression":{"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3784,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10536:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":3787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":3786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:19","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3789,"nodeType":"ExpressionStatement","src":"10536:17:19"},{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3790,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10571:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"10571:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3796,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10615:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3812,"nodeType":"IfStatement","src":"10611:100:19","trueBody":{"id":3811,"nodeType":"Block","src":"10633:78:19","statements":[{"expression":{"id":3805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10651:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":3804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":3803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3806,"nodeType":"ExpressionStatement","src":"10651:16:19"},{"expression":{"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10685:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3810,"nodeType":"ExpressionStatement","src":"10685:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10728:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3829,"nodeType":"IfStatement","src":"10724:100:19","trueBody":{"id":3828,"nodeType":"Block","src":"10746:78:19","statements":[{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10764:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":3821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":3820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"10764:16:19"},{"expression":{"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3824,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10798:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3827,"nodeType":"ExpressionStatement","src":"10798:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10841:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3846,"nodeType":"IfStatement","src":"10837:100:19","trueBody":{"id":3845,"nodeType":"Block","src":"10859:78:19","statements":[{"expression":{"id":3839,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10877:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":3838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":3837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:19","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3840,"nodeType":"ExpressionStatement","src":"10877:16:19"},{"expression":{"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3841,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10911:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3844,"nodeType":"ExpressionStatement","src":"10911:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3736,"src":"10954:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":3849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3857,"nodeType":"IfStatement","src":"10950:66:19","trueBody":{"id":3856,"nodeType":"Block","src":"10972:44:19","statements":[{"expression":{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3852,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"10990:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3855,"nodeType":"ExpressionStatement","src":"10990:11:19"}]}}]},{"expression":{"id":3859,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3742,"src":"11042:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3740,"id":3860,"nodeType":"Return","src":"11035:13:19"}]},"documentation":{"id":3734,"nodeType":"StructuredDocumentation","src":"10020:114:19","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":3862,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:19","nodeType":"FunctionDefinition","parameters":{"id":3737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3736,"mutability":"mutable","name":"value","nameLocation":"10162:5:19","nodeType":"VariableDeclaration","scope":3862,"src":"10154:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3735,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:19"},"returnParameters":{"id":3740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3862,"src":"10192:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3738,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:19"},"scope":4025,"src":"10139:916:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3897,"nodeType":"Block","src":"11290:167:19","statements":[{"id":3896,"nodeType":"UncheckedBlock","src":"11300:151:19","statements":[{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"result","nameLocation":"11332:6:19","nodeType":"VariableDeclaration","scope":3896,"src":"11324:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3873,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3878,"initialValue":{"arguments":[{"id":3876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11347:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3875,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[3862,3898],"referencedDeclaration":3862,"src":"11341:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11341:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3879,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"11374:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3880,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"11384:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3881,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"11396:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3166_$","typeString":"type(enum Math.Rounding)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"11396:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"src":"11384:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":3884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:19","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":3885,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"11417:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3865,"src":"11426:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:19","trueExpression":{"hexValue":"31","id":3890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":3893,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3872,"id":3895,"nodeType":"Return","src":"11367:73:19"}]}]},"documentation":{"id":3863,"nodeType":"StructuredDocumentation","src":"11061:143:19","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":3898,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:19","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3865,"mutability":"mutable","name":"value","nameLocation":"11232:5:19","nodeType":"VariableDeclaration","scope":3898,"src":"11224:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3864,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:19","nodeType":"VariableDeclaration","scope":3898,"src":"11239:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"typeName":{"id":3867,"nodeType":"UserDefinedTypeName","pathNode":{"id":3866,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"11239:8:19"},"referencedDeclaration":3166,"src":"11239:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:19"},"returnParameters":{"id":3872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3898,"src":"11281:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3870,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:19"},"scope":4025,"src":"11209:248:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3984,"nodeType":"Block","src":"11771:600:19","statements":[{"assignments":[3907],"declarations":[{"constant":false,"id":3907,"mutability":"mutable","name":"result","nameLocation":"11789:6:19","nodeType":"VariableDeclaration","scope":3984,"src":"11781:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3906,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3909,"initialValue":{"hexValue":"30","id":3908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:19"},{"id":3981,"nodeType":"UncheckedBlock","src":"11809:533:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3910,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"11837:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":3911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3924,"nodeType":"IfStatement","src":"11833:98:19","trueBody":{"id":3923,"nodeType":"Block","src":"11855:76:19","statements":[{"expression":{"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3915,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"11873:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:19","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3918,"nodeType":"ExpressionStatement","src":"11873:13:19"},{"expression":{"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3919,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"11904:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":3920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3922,"nodeType":"ExpressionStatement","src":"11904:12:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"11948:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":3926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3939,"nodeType":"IfStatement","src":"11944:95:19","trueBody":{"id":3938,"nodeType":"Block","src":"11965:74:19","statements":[{"expression":{"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"11983:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3933,"nodeType":"ExpressionStatement","src":"11983:12:19"},{"expression":{"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"12013:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":3935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3937,"nodeType":"ExpressionStatement","src":"12013:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12056:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3954,"nodeType":"IfStatement","src":"12052:95:19","trueBody":{"id":3953,"nodeType":"Block","src":"12073:74:19","statements":[{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12091:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":3946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"12091:12:19"},{"expression":{"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"12121:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":3950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:19","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3952,"nodeType":"ExpressionStatement","src":"12121:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3955,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12164:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":3956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3969,"nodeType":"IfStatement","src":"12160:95:19","trueBody":{"id":3968,"nodeType":"Block","src":"12181:74:19","statements":[{"expression":{"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12199:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:19","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3963,"nodeType":"ExpressionStatement","src":"12199:12:19"},{"expression":{"id":3966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"12229:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":3965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:19","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3967,"nodeType":"ExpressionStatement","src":"12229:11:19"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3901,"src":"12272:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:19","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3980,"nodeType":"IfStatement","src":"12268:64:19","trueBody":{"id":3979,"nodeType":"Block","src":"12288:44:19","statements":[{"expression":{"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3975,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"12306:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3978,"nodeType":"ExpressionStatement","src":"12306:11:19"}]}}]},{"expression":{"id":3982,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3907,"src":"12358:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3905,"id":3983,"nodeType":"Return","src":"12351:13:19"}]},"documentation":{"id":3899,"nodeType":"StructuredDocumentation","src":"11463:240:19","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":3985,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:19","nodeType":"FunctionDefinition","parameters":{"id":3902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3901,"mutability":"mutable","name":"value","nameLocation":"11732:5:19","nodeType":"VariableDeclaration","scope":3985,"src":"11724:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3900,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:19"},"returnParameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3985,"src":"11762:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:19"},"scope":4025,"src":"11708:663:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4023,"nodeType":"Block","src":"12608:174:19","statements":[{"id":4022,"nodeType":"UncheckedBlock","src":"12618:158:19","statements":[{"assignments":[3997],"declarations":[{"constant":false,"id":3997,"mutability":"mutable","name":"result","nameLocation":"12650:6:19","nodeType":"VariableDeclaration","scope":4022,"src":"12642:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3996,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4001,"initialValue":{"arguments":[{"id":3999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"12666:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3998,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[3985,4024],"referencedDeclaration":3985,"src":"12659:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:19"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"12693:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"id":4006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4003,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3991,"src":"12703:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4004,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3166,"src":"12715:8:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$3166_$","typeString":"type(enum Math.Rounding)"}},"id":4005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":3164,"src":"12715:11:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"src":"12703:23:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3997,"src":"12736:6:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:19","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4011,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4013,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"12751:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:19","trueExpression":{"hexValue":"31","id":4016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":4019,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3995,"id":4021,"nodeType":"Return","src":"12686:79:19"}]}]},"documentation":{"id":3986,"nodeType":"StructuredDocumentation","src":"12377:144:19","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4024,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:19","nodeType":"FunctionDefinition","parameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"value","nameLocation":"12550:5:19","nodeType":"VariableDeclaration","scope":4024,"src":"12542:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3991,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:19","nodeType":"VariableDeclaration","scope":4024,"src":"12557:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"},"typeName":{"id":3990,"nodeType":"UserDefinedTypeName","pathNode":{"id":3989,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":3166,"src":"12557:8:19"},"referencedDeclaration":3166,"src":"12557:8:19","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3166","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:19"},"returnParameters":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4024,"src":"12599:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:19"},"scope":4025,"src":"12526:256:19","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4026,"src":"202:12582:19","usedErrors":[]}],"src":"103:12682:19"},"id":19},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[4130]},"id":4131,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4027,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4028,"nodeType":"StructuredDocumentation","src":"134:80:20","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4130,"linearizedBaseContracts":[4130],"name":"SignedMath","nameLocation":"223:10:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4045,"nodeType":"Block","src":"375:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4038,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"392:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4039,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"396:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4042,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"404:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:20","trueExpression":{"id":4041,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"400:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4037,"id":4044,"nodeType":"Return","src":"385:20:20"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"240:66:20","text":" @dev Returns the largest of two signed numbers."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:20","nodeType":"FunctionDefinition","parameters":{"id":4034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"a","nameLocation":"331:1:20","nodeType":"VariableDeclaration","scope":4046,"src":"324:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4030,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"b","nameLocation":"341:1:20","nodeType":"VariableDeclaration","scope":4046,"src":"334:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4032,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:20"},"returnParameters":{"id":4037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4036,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"367:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4035,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:20"},"scope":4130,"src":"311:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"554:37:20","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4056,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"571:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4057,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"575:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4060,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4051,"src":"583:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:20","trueExpression":{"id":4059,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"579:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4055,"id":4062,"nodeType":"Return","src":"564:20:20"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"418:67:20","text":" @dev Returns the smallest of two signed numbers."},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:20","nodeType":"FunctionDefinition","parameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4049,"mutability":"mutable","name":"a","nameLocation":"510:1:20","nodeType":"VariableDeclaration","scope":4064,"src":"503:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4048,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4051,"mutability":"mutable","name":"b","nameLocation":"520:1:20","nodeType":"VariableDeclaration","scope":4064,"src":"513:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4050,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:20"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4064,"src":"546:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4053,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:20"},"scope":4130,"src":"490:101:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4107,"nodeType":"Block","src":"796:162:20","statements":[{"assignments":[4075],"declarations":[{"constant":false,"id":4075,"mutability":"mutable","name":"x","nameLocation":"865:1:20","nodeType":"VariableDeclaration","scope":4107,"src":"858:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4074,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4088,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4076,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"870:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":4077,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"874:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"881:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"885:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4086,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:20"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4089,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"910:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4094,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4075,"src":"930:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:20","typeDescriptions":{}}},"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"922:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:20","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4091,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:20","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4090,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:20","typeDescriptions":{}}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"915:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4099,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"944:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":4100,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"948:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4102,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4104,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4073,"id":4106,"nodeType":"Return","src":"903:48:20"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"597:126:20","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":4108,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:20","nodeType":"FunctionDefinition","parameters":{"id":4070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"a","nameLocation":"752:1:20","nodeType":"VariableDeclaration","scope":4108,"src":"745:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4066,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"b","nameLocation":"762:1:20","nodeType":"VariableDeclaration","scope":4108,"src":"755:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4068,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:20"},"returnParameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4072,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4108,"src":"788:6:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4071,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:20"},"scope":4130,"src":"728:230:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4128,"nodeType":"Block","src":"1102:158:20","statements":[{"id":4127,"nodeType":"UncheckedBlock","src":"1112:142:20","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4118,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1227:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:20","subExpression":{"id":4122,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1241:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:20","trueExpression":{"id":4121,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4111,"src":"1236:1:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4117,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:20","typeDescriptions":{}}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1219:24:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4115,"id":4126,"nodeType":"Return","src":"1212:31:20"}]}]},"documentation":{"id":4109,"nodeType":"StructuredDocumentation","src":"964:78:20","text":" @dev Returns the absolute unsigned value of a signed value."},"id":4129,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:20","nodeType":"FunctionDefinition","parameters":{"id":4112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4111,"mutability":"mutable","name":"n","nameLocation":"1067:1:20","nodeType":"VariableDeclaration","scope":4129,"src":"1060:8:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4110,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:20","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:20"},"returnParameters":{"id":4115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4114,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4129,"src":"1093:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4113,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:20"},"scope":4130,"src":"1047:213:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4131,"src":"215:1047:20","usedErrors":[]}],"src":"109:1154:20"},"id":20},"base64-sol/base64.sol":{"ast":{"absolutePath":"base64-sol/base64.sol","exportedSymbols":{"Base64":[4245]},"id":4246,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4132,"literals":["solidity",">=","0.6",".0"],"nodeType":"PragmaDirective","src":"33:24:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4133,"nodeType":"StructuredDocumentation","src":"59:127:21","text":"@title Base64\n @author Brecht Devos - <brecht@loopring.org>\n @notice Provides functions for encoding/decoding base64"},"fullyImplemented":true,"id":4245,"linearizedBaseContracts":[4245],"name":"Base64","nameLocation":"194:6:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4136,"mutability":"constant","name":"TABLE_ENCODE","nameLocation":"232:12:21","nodeType":"VariableDeclaration","scope":4245,"src":"207:106:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4134,"name":"string","nodeType":"ElementaryTypeName","src":"207:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2f","id":4135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"247:66:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_84d8a590de33e00cbdc16e1f28c3506f5ec15c599fab9a6a4bcd575cc2f110ce","typeString":"literal_string \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\""},"value":"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"},"visibility":"internal"},{"constant":true,"id":4139,"mutability":"constant","name":"TABLE_DECODE","nameLocation":"344:12:21","nodeType":"VariableDeclaration","scope":4245,"src":"319:451:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4137,"name":"bytes","nodeType":"ElementaryTypeName","src":"319:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":{"hexValue":"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000","id":4138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"359:411:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_cbed483d4f9f83dd52b06773fd58dd8723113252a85374752ef109e22dfa50f9","typeString":"literal_string hex\"000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e0000003f3435363738393a3b3c3d00000000000000000102030405060708090a0b0c0d0e0f101112131415161718190000000000001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\""},"value":"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000>\u0000\u0000\u0000?456789:;<=\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0003\u0004\u0005\u0006\u0007\b\t\n\u000b\f\r\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\u0019\u0000\u0000\u0000\u0000\u0000\u0000\u001a\u001b\u001c\u001d\u001e\u001f !\"#$%&'()*+,-./0123\u0000\u0000\u0000\u0000\u0000"},"visibility":"internal"},{"body":{"id":4182,"nodeType":"Block","src":"850:1788:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4146,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"864:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"864:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"879:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"864:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4152,"nodeType":"IfStatement","src":"860:31:21","trueBody":{"expression":{"hexValue":"","id":4150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"889:2:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":4145,"id":4151,"nodeType":"Return","src":"882:9:21"}},{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"table","nameLocation":"954:5:21","nodeType":"VariableDeclaration","scope":4182,"src":"940:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4153,"name":"string","nodeType":"ElementaryTypeName","src":"940:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4156,"initialValue":{"id":4155,"name":"TABLE_ENCODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4136,"src":"962:12:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"940:34:21"},{"assignments":[4158],"declarations":[{"constant":false,"id":4158,"mutability":"mutable","name":"encodedLen","nameLocation":"1031:10:21","nodeType":"VariableDeclaration","scope":4182,"src":"1023:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4169,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4160,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4141,"src":"1050:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1050:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1064:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1050:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1049:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"33","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1069:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"1049:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4167,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1048:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1044:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1023:48:21"},{"assignments":[4171],"declarations":[{"constant":false,"id":4171,"mutability":"mutable","name":"result","nameLocation":"1165:6:21","nodeType":"VariableDeclaration","scope":4182,"src":"1151:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4170,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4178,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"encodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4158,"src":"1185:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1198:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"1185:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1174:10:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4172,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1174:27:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1151:50:21"},{"AST":{"nodeType":"YulBlock","src":"1221:1387:21","statements":[{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1286:6:21"},{"name":"encodedLen","nodeType":"YulIdentifier","src":"1294:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1279:6:21"},"nodeType":"YulFunctionCall","src":"1279:26:21"},"nodeType":"YulExpressionStatement","src":"1279:26:21"},{"nodeType":"YulVariableDeclaration","src":"1359:29:21","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"1379:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"1386:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1375:3:21"},"nodeType":"YulFunctionCall","src":"1375:13:21"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"1363:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1427:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"1442:4:21"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"1431:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1459:39:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1477:7:21"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1492:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1486:5:21"},"nodeType":"YulFunctionCall","src":"1486:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1473:3:21"},"nodeType":"YulFunctionCall","src":"1473:25:21"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"1463:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1556:32:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"1577:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"1585:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1573:3:21"},"nodeType":"YulFunctionCall","src":"1573:15:21"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"1560:9:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"1697:697:21","statements":[{"nodeType":"YulAssignment","src":"1747:26:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1762:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"1771:1:21","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1758:3:21"},"nodeType":"YulFunctionCall","src":"1758:15:21"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1747:7:21"}]},{"nodeType":"YulVariableDeclaration","src":"1790:27:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1809:7:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1803:5:21"},"nodeType":"YulFunctionCall","src":"1803:14:21"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"1794:5:21","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1881:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"1902:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1920:2:21","type":"","value":"18"},{"name":"input","nodeType":"YulIdentifier","src":"1924:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1916:3:21"},"nodeType":"YulFunctionCall","src":"1916:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1912:3:21"},"nodeType":"YulFunctionCall","src":"1912:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1898:3:21"},"nodeType":"YulFunctionCall","src":"1898:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1892:5:21"},"nodeType":"YulFunctionCall","src":"1892:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1873:7:21"},"nodeType":"YulFunctionCall","src":"1873:67:21"},"nodeType":"YulExpressionStatement","src":"1873:67:21"},{"nodeType":"YulAssignment","src":"1957:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1974:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"1985:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1970:3:21"},"nodeType":"YulFunctionCall","src":"1970:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"1957:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2012:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2033:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2051:2:21","type":"","value":"12"},{"name":"input","nodeType":"YulIdentifier","src":"2055:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2047:3:21"},"nodeType":"YulFunctionCall","src":"2047:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2063:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2043:3:21"},"nodeType":"YulFunctionCall","src":"2043:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2029:3:21"},"nodeType":"YulFunctionCall","src":"2029:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2023:5:21"},"nodeType":"YulFunctionCall","src":"2023:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2004:7:21"},"nodeType":"YulFunctionCall","src":"2004:67:21"},"nodeType":"YulExpressionStatement","src":"2004:67:21"},{"nodeType":"YulAssignment","src":"2088:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2105:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2116:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2101:3:21"},"nodeType":"YulFunctionCall","src":"2101:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2088:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2143:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2164:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2183:1:21","type":"","value":"6"},{"name":"input","nodeType":"YulIdentifier","src":"2186:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2178:3:21"},"nodeType":"YulFunctionCall","src":"2178:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"2194:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2174:3:21"},"nodeType":"YulFunctionCall","src":"2174:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2160:3:21"},"nodeType":"YulFunctionCall","src":"2160:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2154:5:21"},"nodeType":"YulFunctionCall","src":"2154:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2135:7:21"},"nodeType":"YulFunctionCall","src":"2135:67:21"},"nodeType":"YulExpressionStatement","src":"2135:67:21"},{"nodeType":"YulAssignment","src":"2219:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2236:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2247:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2232:3:21"},"nodeType":"YulFunctionCall","src":"2232:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2219:9:21"}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2274:9:21"},{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"2295:8:21"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"2317:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"2325:4:21","type":"","value":"0x3F"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2305:3:21"},"nodeType":"YulFunctionCall","src":"2305:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2291:3:21"},"nodeType":"YulFunctionCall","src":"2291:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2285:5:21"},"nodeType":"YulFunctionCall","src":"2285:47:21"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"2266:7:21"},"nodeType":"YulFunctionCall","src":"2266:67:21"},"nodeType":"YulExpressionStatement","src":"2266:67:21"},{"nodeType":"YulAssignment","src":"2350:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2367:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2363:3:21"},"nodeType":"YulFunctionCall","src":"2363:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2350:9:21"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"1665:7:21"},{"name":"endPtr","nodeType":"YulIdentifier","src":"1674:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1662:2:21"},"nodeType":"YulFunctionCall","src":"1662:19:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1682:2:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"1659:2:21","statements":[]},"src":"1655:739:21"},{"cases":[{"body":{"nodeType":"YulBlock","src":"2486:47:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2499:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2510:1:21","type":"","value":"2"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2495:3:21"},"nodeType":"YulFunctionCall","src":"2495:17:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:3:21","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"2523:6:21","type":"","value":"0x3d3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2514:3:21"},"nodeType":"YulFunctionCall","src":"2514:16:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2488:6:21"},"nodeType":"YulFunctionCall","src":"2488:43:21"},"nodeType":"YulExpressionStatement","src":"2488:43:21"}]},"nodeType":"YulCase","src":"2479:54:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2484:1:21","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2553:45:21","statements":[{"expression":{"arguments":[{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"2566:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"2577:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2562:3:21"},"nodeType":"YulFunctionCall","src":"2562:17:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2585:3:21","type":"","value":"248"},{"kind":"number","nodeType":"YulLiteral","src":"2590:4:21","type":"","value":"0x3d"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2581:3:21"},"nodeType":"YulFunctionCall","src":"2581:14:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2555:6:21"},"nodeType":"YulFunctionCall","src":"2555:41:21"},"nodeType":"YulExpressionStatement","src":"2555:41:21"}]},"nodeType":"YulCase","src":"2546:52:21","value":{"kind":"number","nodeType":"YulLiteral","src":"2551:1:21","type":"","value":"2"}}],"expression":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2457:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2451:5:21"},"nodeType":"YulFunctionCall","src":"2451:11:21"},{"kind":"number","nodeType":"YulLiteral","src":"2464:1:21","type":"","value":"3"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"2447:3:21"},"nodeType":"YulFunctionCall","src":"2447:19:21"},"nodeType":"YulSwitch","src":"2440:158:21"}]},"evmVersion":"london","externalReferences":[{"declaration":4141,"isOffset":false,"isSlot":false,"src":"1442:4:21","valueSize":1},{"declaration":4141,"isOffset":false,"isSlot":false,"src":"1492:4:21","valueSize":1},{"declaration":4141,"isOffset":false,"isSlot":false,"src":"2457:4:21","valueSize":1},{"declaration":4158,"isOffset":false,"isSlot":false,"src":"1294:10:21","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"1286:6:21","valueSize":1},{"declaration":4171,"isOffset":false,"isSlot":false,"src":"1577:6:21","valueSize":1},{"declaration":4154,"isOffset":false,"isSlot":false,"src":"1379:5:21","valueSize":1}],"id":4179,"nodeType":"InlineAssembly","src":"1212:1396:21"},{"expression":{"id":4180,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4171,"src":"2625:6:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4145,"id":4181,"nodeType":"Return","src":"2618:13:21"}]},"id":4183,"implemented":true,"kind":"function","modifiers":[],"name":"encode","nameLocation":"786:6:21","nodeType":"FunctionDefinition","parameters":{"id":4142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4141,"mutability":"mutable","name":"data","nameLocation":"806:4:21","nodeType":"VariableDeclaration","scope":4183,"src":"793:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4140,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:19:21"},"returnParameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4183,"src":"835:13:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4143,"name":"string","nodeType":"ElementaryTypeName","src":"835:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"834:15:21"},"scope":4245,"src":"777:1861:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4243,"nodeType":"Block","src":"2718:2104:21","statements":[{"assignments":[4191],"declarations":[{"constant":false,"id":4191,"mutability":"mutable","name":"data","nameLocation":"2741:4:21","nodeType":"VariableDeclaration","scope":4243,"src":"2728:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4190,"name":"bytes","nodeType":"ElementaryTypeName","src":"2728:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4196,"initialValue":{"arguments":[{"id":4194,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"2754:5:21","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2748:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4192,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:21","typeDescriptions":{}}},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2748:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2728:32:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4197,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"2775:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2775:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2790:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2775:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4206,"nodeType":"IfStatement","src":"2771:41:21","trueBody":{"expression":{"arguments":[{"hexValue":"30","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2800:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4201,"name":"bytes","nodeType":"ElementaryTypeName","src":"2804:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2800:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4189,"id":4205,"nodeType":"Return","src":"2793:19:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4208,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"2830:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2830:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"34","id":4210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2844:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2830:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2849:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2830:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e76616c696420626173653634206465636f64657220696e707574","id":4214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2852:30:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""},"value":"invalid base64 decoder input"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b899645e29043a8d30000fb8ed0252b5c4f6f5f09672aefa374ee368d324bb89","typeString":"literal_string \"invalid base64 decoder input\""}],"id":4207,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2822:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2822:61:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4216,"nodeType":"ExpressionStatement","src":"2822:61:21"},{"assignments":[4218],"declarations":[{"constant":false,"id":4218,"mutability":"mutable","name":"table","nameLocation":"2945:5:21","nodeType":"VariableDeclaration","scope":4243,"src":"2932:18:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4217,"name":"bytes","nodeType":"ElementaryTypeName","src":"2932:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4220,"initialValue":{"id":4219,"name":"TABLE_DECODE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4139,"src":"2953:12:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2932:33:21"},{"assignments":[4222],"declarations":[{"constant":false,"id":4222,"mutability":"mutable","name":"decodedLen","nameLocation":"3032:10:21","nodeType":"VariableDeclaration","scope":4243,"src":"3024:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"3024:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4230,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4223,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"3046:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3046:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"34","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3060:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3046:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4227,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3045:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"33","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3065:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3045:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3024:42:21"},{"assignments":[4232],"declarations":[{"constant":false,"id":4232,"mutability":"mutable","name":"result","nameLocation":"3159:6:21","nodeType":"VariableDeclaration","scope":4243,"src":"3146:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4231,"name":"bytes","nodeType":"ElementaryTypeName","src":"3146:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4239,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"decodedLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"3178:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3332","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3191:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3178:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3168:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4233,"name":"bytes","nodeType":"ElementaryTypeName","src":"3172:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3168:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3146:48:21"},{"AST":{"nodeType":"YulBlock","src":"3214:1578:21","statements":[{"nodeType":"YulVariableDeclaration","src":"3260:46:21","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3287:4:21"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3299:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3293:5:21"},"nodeType":"YulFunctionCall","src":"3293:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3283:3:21"},"nodeType":"YulFunctionCall","src":"3283:22:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3277:5:21"},"nodeType":"YulFunctionCall","src":"3277:29:21"},"variables":[{"name":"lastBytes","nodeType":"YulTypedName","src":"3264:9:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"3353:191:21","statements":[{"nodeType":"YulAssignment","src":"3371:32:21","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3389:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3401:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3385:3:21"},"nodeType":"YulFunctionCall","src":"3385:18:21"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3371:10:21"}]},{"body":{"nodeType":"YulBlock","src":"3458:72:21","statements":[{"nodeType":"YulAssignment","src":"3480:32:21","value":{"arguments":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3498:10:21"},{"kind":"number","nodeType":"YulLiteral","src":"3510:1:21","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3494:3:21"},"nodeType":"YulFunctionCall","src":"3494:18:21"},"variableNames":[{"name":"decodedLen","nodeType":"YulIdentifier","src":"3480:10:21"}]}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3430:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3441:6:21","type":"","value":"0xFFFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3426:3:21"},"nodeType":"YulFunctionCall","src":"3426:22:21"},{"kind":"number","nodeType":"YulLiteral","src":"3450:6:21","type":"","value":"0x3d3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3423:2:21"},"nodeType":"YulFunctionCall","src":"3423:34:21"},"nodeType":"YulIf","src":"3420:110:21"}]},"condition":{"arguments":[{"arguments":[{"name":"lastBytes","nodeType":"YulIdentifier","src":"3329:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"3340:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3325:3:21"},"nodeType":"YulFunctionCall","src":"3325:20:21"},{"kind":"number","nodeType":"YulLiteral","src":"3347:4:21","type":"","value":"0x3d"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3322:2:21"},"nodeType":"YulFunctionCall","src":"3322:30:21"},"nodeType":"YulIf","src":"3319:225:21"},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3609:6:21"},{"name":"decodedLen","nodeType":"YulIdentifier","src":"3617:10:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3602:6:21"},"nodeType":"YulFunctionCall","src":"3602:26:21"},"nodeType":"YulExpressionStatement","src":"3602:26:21"},{"nodeType":"YulVariableDeclaration","src":"3682:29:21","value":{"arguments":[{"name":"table","nodeType":"YulIdentifier","src":"3702:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"3709:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3698:3:21"},"nodeType":"YulFunctionCall","src":"3698:13:21"},"variables":[{"name":"tablePtr","nodeType":"YulTypedName","src":"3686:8:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3750:19:21","value":{"name":"data","nodeType":"YulIdentifier","src":"3765:4:21"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"3754:7:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3782:39:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3800:7:21"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3815:4:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3809:5:21"},"nodeType":"YulFunctionCall","src":"3809:11:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3796:3:21"},"nodeType":"YulFunctionCall","src":"3796:25:21"},"variables":[{"name":"endPtr","nodeType":"YulTypedName","src":"3786:6:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3879:32:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"3900:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"3908:2:21","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3896:3:21"},"nodeType":"YulFunctionCall","src":"3896:15:21"},"variables":[{"name":"resultPtr","nodeType":"YulTypedName","src":"3883:9:21","type":""}]},{"body":{"nodeType":"YulBlock","src":"4025:757:21","statements":[{"nodeType":"YulAssignment","src":"4078:26:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4093:7:21"},{"kind":"number","nodeType":"YulLiteral","src":"4102:1:21","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4089:3:21"},"nodeType":"YulFunctionCall","src":"4089:15:21"},"variableNames":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4078:7:21"}]},{"nodeType":"YulVariableDeclaration","src":"4120:27:21","value":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"4139:7:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4133:5:21"},"nodeType":"YulFunctionCall","src":"4133:14:21"},"variables":[{"name":"input","nodeType":"YulTypedName","src":"4124:5:21","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4196:473:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4266:2:21","type":"","value":"18"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4284:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4302:2:21","type":"","value":"24"},{"name":"input","nodeType":"YulIdentifier","src":"4306:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4298:3:21"},"nodeType":"YulFunctionCall","src":"4298:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4314:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4294:3:21"},"nodeType":"YulFunctionCall","src":"4294:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4280:3:21"},"nodeType":"YulFunctionCall","src":"4280:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4274:5:21"},"nodeType":"YulFunctionCall","src":"4274:47:21"},{"kind":"number","nodeType":"YulLiteral","src":"4323:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4270:3:21"},"nodeType":"YulFunctionCall","src":"4270:58:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4262:3:21"},"nodeType":"YulFunctionCall","src":"4262:67:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4358:2:21","type":"","value":"12"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4376:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4394:2:21","type":"","value":"16"},{"name":"input","nodeType":"YulIdentifier","src":"4398:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4390:3:21"},"nodeType":"YulFunctionCall","src":"4390:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4406:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4386:3:21"},"nodeType":"YulFunctionCall","src":"4386:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4372:3:21"},"nodeType":"YulFunctionCall","src":"4372:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4366:5:21"},"nodeType":"YulFunctionCall","src":"4366:47:21"},{"kind":"number","nodeType":"YulLiteral","src":"4415:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4362:3:21"},"nodeType":"YulFunctionCall","src":"4362:58:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4354:3:21"},"nodeType":"YulFunctionCall","src":"4354:67:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4234:3:21"},"nodeType":"YulFunctionCall","src":"4234:188:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4476:1:21","type":"","value":"6"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4493:8:21"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4512:1:21","type":"","value":"8"},{"name":"input","nodeType":"YulIdentifier","src":"4515:5:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4507:3:21"},"nodeType":"YulFunctionCall","src":"4507:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"4523:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4503:3:21"},"nodeType":"YulFunctionCall","src":"4503:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:21"},"nodeType":"YulFunctionCall","src":"4489:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4483:5:21"},"nodeType":"YulFunctionCall","src":"4483:47:21"},{"kind":"number","nodeType":"YulLiteral","src":"4532:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4479:3:21"},"nodeType":"YulFunctionCall","src":"4479:58:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4471:3:21"},"nodeType":"YulFunctionCall","src":"4471:67:21"},{"arguments":[{"arguments":[{"arguments":[{"name":"tablePtr","nodeType":"YulIdentifier","src":"4585:8:21"},{"arguments":[{"name":"input","nodeType":"YulIdentifier","src":"4607:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"4615:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4595:3:21"},"nodeType":"YulFunctionCall","src":"4595:25:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4581:3:21"},"nodeType":"YulFunctionCall","src":"4581:40:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4575:5:21"},"nodeType":"YulFunctionCall","src":"4575:47:21"},{"kind":"number","nodeType":"YulLiteral","src":"4624:4:21","type":"","value":"0xFF"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4571:3:21"},"nodeType":"YulFunctionCall","src":"4571:58:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4443:3:21"},"nodeType":"YulFunctionCall","src":"4443:208:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4210:3:21"},"nodeType":"YulFunctionCall","src":"4210:459:21"},"variables":[{"name":"output","nodeType":"YulTypedName","src":"4200:6:21","type":""}]},{"expression":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4693:9:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4708:3:21","type":"","value":"232"},{"name":"output","nodeType":"YulIdentifier","src":"4713:6:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4704:3:21"},"nodeType":"YulFunctionCall","src":"4704:16:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4686:6:21"},"nodeType":"YulFunctionCall","src":"4686:35:21"},"nodeType":"YulExpressionStatement","src":"4686:35:21"},{"nodeType":"YulAssignment","src":"4738:30:21","value":{"arguments":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4755:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"4766:1:21","type":"","value":"3"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:21"},"nodeType":"YulFunctionCall","src":"4751:17:21"},"variableNames":[{"name":"resultPtr","nodeType":"YulIdentifier","src":"4738:9:21"}]}]},"condition":{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"3993:7:21"},{"name":"endPtr","nodeType":"YulIdentifier","src":"4002:6:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3990:2:21"},"nodeType":"YulFunctionCall","src":"3990:19:21"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4010:2:21","statements":[]},"pre":{"nodeType":"YulBlock","src":"3987:2:21","statements":[]},"src":"3983:799:21"}]},"evmVersion":"london","externalReferences":[{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3287:4:21","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3299:4:21","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3765:4:21","valueSize":1},{"declaration":4191,"isOffset":false,"isSlot":false,"src":"3815:4:21","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3371:10:21","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3389:10:21","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3480:10:21","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3498:10:21","valueSize":1},{"declaration":4222,"isOffset":false,"isSlot":false,"src":"3617:10:21","valueSize":1},{"declaration":4232,"isOffset":false,"isSlot":false,"src":"3609:6:21","valueSize":1},{"declaration":4232,"isOffset":false,"isSlot":false,"src":"3900:6:21","valueSize":1},{"declaration":4218,"isOffset":false,"isSlot":false,"src":"3702:5:21","valueSize":1}],"id":4240,"nodeType":"InlineAssembly","src":"3205:1587:21"},{"expression":{"id":4241,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4232,"src":"4809:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4189,"id":4242,"nodeType":"Return","src":"4802:13:21"}]},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"decode","nameLocation":"2653:6:21","nodeType":"FunctionDefinition","parameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"_data","nameLocation":"2674:5:21","nodeType":"VariableDeclaration","scope":4244,"src":"2660:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4184,"name":"string","nodeType":"ElementaryTypeName","src":"2660:6:21","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2659:21:21"},"returnParameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"2704:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4187,"name":"bytes","nodeType":"ElementaryTypeName","src":"2704:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2703:14:21"},"scope":4245,"src":"2644:2178:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4246,"src":"186:4638:21","usedErrors":[]}],"src":"33:4792:21"},"id":21},"contracts/BasicNft.sol":{"ast":{"absolutePath":"contracts/BasicNft.sol","exportedSymbols":{"Address":[2872],"BasicNft":[4308],"Context":[2894],"ERC165":[3147],"ERC721":[2225],"IERC165":[3159],"IERC721":[2341],"IERC721Metadata":[2542],"IERC721Receiver":[2359],"Math":[4025],"SignedMath":[4130],"Strings":[3123]},"id":4309,"license":"MIT","nodeType":"SourceUnit","nodes":[{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":4247,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4309,"sourceUnit":2226,"src":"32:57:22","symbolAliases":[],"unitAlias":""},{"id":4248,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"93:23:22"},{"abstract":false,"baseContracts":[{"baseName":{"id":4249,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"141:6:22"},"id":4250,"nodeType":"InheritanceSpecifier","src":"141:6:22"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4308,"linearizedBaseContracts":[4308,2225,2542,2341,3147,3159,2894],"name":"BasicNft","nameLocation":"129:8:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"78ce9035","id":4253,"mutability":"constant","name":"TOKEN_URI","nameLocation":"178:9:22","nodeType":"VariableDeclaration","scope":4308,"src":"155:133:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4251,"name":"string","nodeType":"ElementaryTypeName","src":"155:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6e","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"199:89:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5eed4f63f16dc8435ed5e031f22f9553384324656005540ac9ece13d0969af8","typeString":"literal_string \"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\""},"value":"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json"},"visibility":"public"},{"constant":false,"id":4255,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"311:14:22","nodeType":"VariableDeclaration","scope":4308,"src":"295:30:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"295:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":4266,"nodeType":"Block","src":"371:37:22","statements":[{"expression":{"id":4264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4262,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"382:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"399:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"382:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4265,"nodeType":"ExpressionStatement","src":"382:18:22"}]},"id":4267,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"446f676965","id":4258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"355:7:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_e5d21699003d762b953d66adecbe4f97c4791cae2f281f96a4beb7efcb7bbcf6","typeString":"literal_string \"Dogie\""},"value":"Dogie"},{"hexValue":"444f47","id":4259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"364:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5b35d1f7dc7cf1448a70456de4980702e1fdae4e057d31003c0e1e4b3c4bde2","typeString":"literal_string \"DOG\""},"value":"DOG"}],"id":4260,"kind":"baseConstructorSpecifier","modifierName":{"id":4257,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"348:6:22"},"nodeType":"ModifierInvocation","src":"348:22:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[],"src":"345:2:22"},"returnParameters":{"id":4261,"nodeType":"ParameterList","parameters":[],"src":"371:0:22"},"scope":4308,"src":"334:74:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4286,"nodeType":"Block","src":"460:134:22","statements":[{"expression":{"arguments":[{"expression":{"id":4273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"481:3:22","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"481:10:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4275,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"493:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4272,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1793,1822],"referencedDeclaration":1793,"src":"471:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"471:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4277,"nodeType":"ExpressionStatement","src":"471:37:22"},{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4278,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"519:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4279,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"536:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"553:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"536:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"519:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"519:35:22"},{"expression":{"id":4284,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"572:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4271,"id":4285,"nodeType":"Return","src":"565:21:22"}]},"functionSelector":"c2229fea","id":4287,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"425:7:22","nodeType":"FunctionDefinition","parameters":{"id":4268,"nodeType":"ParameterList","parameters":[],"src":"432:2:22"},"returnParameters":{"id":4271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4287,"src":"451:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"451:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"450:9:22"},"scope":4308,"src":"416:178:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1503],"body":{"id":4298,"nodeType":"Block","src":"682:37:22","statements":[{"expression":{"components":[{"id":4295,"name":"TOKEN_URI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"701:9:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":4296,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"700:11:22","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4294,"id":4297,"nodeType":"Return","src":"693:18:22"}]},"functionSelector":"c87b56dd","id":4299,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"611:8:22","nodeType":"FunctionDefinition","overrides":{"id":4291,"nodeType":"OverrideSpecifier","overrides":[],"src":"649:8:22"},"parameters":{"id":4290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4289,"mutability":"mutable","name":"tokenId","nameLocation":"628:7:22","nodeType":"VariableDeclaration","scope":4299,"src":"620:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4288,"name":"uint256","nodeType":"ElementaryTypeName","src":"620:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"619:17:22"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4299,"src":"667:13:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4292,"name":"string","nodeType":"ElementaryTypeName","src":"667:6:22","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"666:15:22"},"scope":4308,"src":"602:117:22","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4306,"nodeType":"Block","src":"784:40:22","statements":[{"expression":{"id":4304,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"802:14:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4303,"id":4305,"nodeType":"Return","src":"795:21:22"}]},"functionSelector":"6e02007d","id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"736:15:22","nodeType":"FunctionDefinition","parameters":{"id":4300,"nodeType":"ParameterList","parameters":[],"src":"751:2:22"},"returnParameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4302,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"775:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4301,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"774:9:22"},"scope":4308,"src":"727:97:22","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4309,"src":"120:707:22","usedErrors":[]}],"src":"32:797:22"},"id":22},"contracts/DynamicSvgNft.sol":{"ast":{"absolutePath":"contracts/DynamicSvgNft.sol","exportedSymbols":{"Address":[2872],"AggregatorV3Interface":[103],"Base64":[4245],"Context":[2894],"DynamicSvgNft":[4511],"ERC165":[3147],"ERC721":[2225],"IERC165":[3159],"IERC721":[2341],"IERC721Metadata":[2542],"IERC721Receiver":[2359],"Math":[4025],"SignedMath":[4130],"Strings":[3123]},"id":4512,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4310,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"35:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":4311,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4512,"sourceUnit":2226,"src":"62:57:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol","id":4312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4512,"sourceUnit":104,"src":"121:76:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"base64-sol/base64.sol","file":"base64-sol/base64.sol","id":4313,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4512,"sourceUnit":4246,"src":"199:31:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4314,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"260:6:23"},"id":4315,"nodeType":"InheritanceSpecifier","src":"260:6:23"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4511,"linearizedBaseContracts":[4511,2225,2542,2341,3147,3159,2894],"name":"DynamicSvgNft","nameLocation":"243:13:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4317,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"290:14:23","nodeType":"VariableDeclaration","scope":4511,"src":"274:30:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4316,"name":"uint256","nodeType":"ElementaryTypeName","src":"274:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4319,"mutability":"mutable","name":"i_lowImageURI","nameLocation":"326:13:23","nodeType":"VariableDeclaration","scope":4511,"src":"311:28:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4318,"name":"string","nodeType":"ElementaryTypeName","src":"311:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":4321,"mutability":"mutable","name":"i_highImageURI","nameLocation":"361:14:23","nodeType":"VariableDeclaration","scope":4511,"src":"346:29:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":4320,"name":"string","nodeType":"ElementaryTypeName","src":"346:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":true,"id":4324,"mutability":"constant","name":"base64EncodedSvgPrefix","nameLocation":"406:22:23","nodeType":"VariableDeclaration","scope":4511,"src":"382:77:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4322,"name":"string","nodeType":"ElementaryTypeName","src":"382:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":4323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"431:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"visibility":"private"},{"constant":false,"id":4327,"mutability":"immutable","name":"i_priceFeed","nameLocation":"507:11:23","nodeType":"VariableDeclaration","scope":4511,"src":"466:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"},"typeName":{"id":4326,"nodeType":"UserDefinedTypeName","pathNode":{"id":4325,"name":"AggregatorV3Interface","nodeType":"IdentifierPath","referencedDeclaration":103,"src":"466:21:23"},"referencedDeclaration":103,"src":"466:21:23","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"},{"constant":false,"functionSelector":"e12f64b5","id":4331,"mutability":"mutable","name":"s_tokenIdHighValue","nameLocation":"559:18:23","nodeType":"VariableDeclaration","scope":4511,"src":"525:52:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"typeName":{"id":4330,"keyType":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"533:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"525:26:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"},"valueType":{"id":4329,"name":"int256","nodeType":"ElementaryTypeName","src":"544:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}},"visibility":"public"},{"anonymous":false,"id":4337,"name":"CreateNft","nameLocation":"592:9:23","nodeType":"EventDefinition","parameters":{"id":4336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4333,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"618:7:23","nodeType":"VariableDeclaration","scope":4337,"src":"602:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4332,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4335,"indexed":false,"mutability":"mutable","name":"highValue","nameLocation":"634:9:23","nodeType":"VariableDeclaration","scope":4337,"src":"627:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4334,"name":"int256","nodeType":"ElementaryTypeName","src":"627:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"601:43:23"},"src":"586:59:23"},{"body":{"id":4372,"nodeType":"Block","src":"803:199:23","statements":[{"expression":{"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4350,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"814:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"831:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"814:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4353,"nodeType":"ExpressionStatement","src":"814:18:23"},{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4354,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"843:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4356,"name":"lowSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4341,"src":"873:6:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4355,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"859:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"859:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"843:37:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4359,"nodeType":"ExpressionStatement","src":"843:37:23"},{"expression":{"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"891:14:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4362,"name":"highSvg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4343,"src":"922:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4361,"name":"svgToImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"908:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (string memory) pure returns (string memory)"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"908:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"891:39:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4365,"nodeType":"ExpressionStatement","src":"891:39:23"},{"expression":{"id":4370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4366,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"941:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4368,"name":"priceFeedAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4339,"src":"977:16:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4367,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":103,"src":"955:21:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$103_$","typeString":"type(contract AggregatorV3Interface)"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"src":"941:53:23","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":4371,"nodeType":"ExpressionStatement","src":"941:53:23"}]},"id":4373,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44796e616d696320535647204e4654","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"777:17:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ea1fd3254b60bf4a83b0986ee86edb0638cb2f820040df53c34a4f0ba57d146d","typeString":"literal_string \"Dynamic SVG NFT\""},"value":"Dynamic SVG NFT"},{"hexValue":"44534e","id":4347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"796:5:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_275f2341ff18e41e04cc32c20974ed0046a9cb9bd1a1fcf968aafc5924b80a4d","typeString":"literal_string \"DSN\""},"value":"DSN"}],"id":4348,"kind":"baseConstructorSpecifier","modifierName":{"id":4345,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"770:6:23"},"nodeType":"ModifierInvocation","src":"770:32:23"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4339,"mutability":"mutable","name":"priceFeedAddress","nameLocation":"683:16:23","nodeType":"VariableDeclaration","scope":4373,"src":"675:24:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4338,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4341,"mutability":"mutable","name":"lowSvg","nameLocation":"724:6:23","nodeType":"VariableDeclaration","scope":4373,"src":"710:20:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4340,"name":"string","nodeType":"ElementaryTypeName","src":"710:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4343,"mutability":"mutable","name":"highSvg","nameLocation":"755:7:23","nodeType":"VariableDeclaration","scope":4373,"src":"741:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4342,"name":"string","nodeType":"ElementaryTypeName","src":"741:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"664:105:23"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[],"src":"803:0:23"},"scope":4511,"src":"653:349:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4409,"nodeType":"Block","src":"1088:235:23","statements":[{"assignments":[4381],"declarations":[{"constant":false,"id":4381,"mutability":"mutable","name":"baseURL","nameLocation":"1113:7:23","nodeType":"VariableDeclaration","scope":4409,"src":"1099:21:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4380,"name":"string","nodeType":"ElementaryTypeName","src":"1099:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4383,"initialValue":{"hexValue":"646174613a696d6167652f7376672b786d6c3b6261736536342c","id":4382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1123:28:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_f90ae014c41cb48231e1f02c314087ff9c479133697911d25c5fe231e237dd14","typeString":"literal_string \"data:image/svg+xml;base64,\""},"value":"data:image/svg+xml;base64,"},"nodeType":"VariableDeclarationStatement","src":"1099:52:23"},{"assignments":[4385],"declarations":[{"constant":false,"id":4385,"mutability":"mutable","name":"svgBase64Encoded","nameLocation":"1176:16:23","nodeType":"VariableDeclaration","scope":4409,"src":"1162:30:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4384,"name":"string","nodeType":"ElementaryTypeName","src":"1162:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4399,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"id":4394,"name":"svg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4375,"src":"1239:3:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4392,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1222:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1222:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1222:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1215:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4390,"name":"string","nodeType":"ElementaryTypeName","src":"1215:6:23","typeDescriptions":{}}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1215:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1209:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4388,"name":"bytes","nodeType":"ElementaryTypeName","src":"1209:5:23","typeDescriptions":{}}},"id":4397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1209:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4386,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"1195:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$4245_$","typeString":"type(library Base64)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"1195:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1195:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1162:84:23"},{"expression":{"arguments":[{"arguments":[{"id":4404,"name":"baseURL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4381,"src":"1288:7:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4405,"name":"svgBase64Encoded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4385,"src":"1297:16:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4402,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1271:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4403,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1271:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1271:43:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1264:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4400,"name":"string","nodeType":"ElementaryTypeName","src":"1264:6:23","typeDescriptions":{}}},"id":4407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1264:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4379,"id":4408,"nodeType":"Return","src":"1257:58:23"}]},"functionSelector":"30d871c6","id":4410,"implemented":true,"kind":"function","modifiers":[],"name":"svgToImageURI","nameLocation":"1019:13:23","nodeType":"FunctionDefinition","parameters":{"id":4376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4375,"mutability":"mutable","name":"svg","nameLocation":"1047:3:23","nodeType":"VariableDeclaration","scope":4410,"src":"1033:17:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4374,"name":"string","nodeType":"ElementaryTypeName","src":"1033:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1032:19:23"},"returnParameters":{"id":4379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4410,"src":"1073:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4377,"name":"string","nodeType":"ElementaryTypeName","src":"1073:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1072:15:23"},"scope":4511,"src":"1010:313:23","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4438,"nodeType":"Block","src":"1373:211:23","statements":[{"expression":{"id":4419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4415,"name":"s_tokenIdHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"1384:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":4417,"indexExpression":{"id":4416,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"1403:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1384:34:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4418,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"1421:9:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1384:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4420,"nodeType":"ExpressionStatement","src":"1384:46:23"},{"expression":{"arguments":[{"expression":{"id":4422,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1451:3:23","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1451:10:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4424,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"1463:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4421,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1793,1822],"referencedDeclaration":1793,"src":"1441:9:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1441:37:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4426,"nodeType":"ExpressionStatement","src":"1441:37:23"},{"expression":{"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4427,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"1489:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4428,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"1506:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1523:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1506:18:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1489:35:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4432,"nodeType":"ExpressionStatement","src":"1489:35:23"},{"eventCall":{"arguments":[{"id":4434,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4317,"src":"1550:14:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4435,"name":"highValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4412,"src":"1566:9:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4433,"name":"CreateNft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4337,"src":"1540:9:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$","typeString":"function (uint256,int256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1540:36:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4437,"nodeType":"EmitStatement","src":"1535:41:23"}]},"functionSelector":"1e930812","id":4439,"implemented":true,"kind":"function","modifiers":[],"name":"mintNft","nameLocation":"1340:7:23","nodeType":"FunctionDefinition","parameters":{"id":4413,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4412,"mutability":"mutable","name":"highValue","nameLocation":"1355:9:23","nodeType":"VariableDeclaration","scope":4439,"src":"1348:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4411,"name":"int256","nodeType":"ElementaryTypeName","src":"1348:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1347:18:23"},"returnParameters":{"id":4414,"nodeType":"ParameterList","parameters":[],"src":"1373:0:23"},"scope":4511,"src":"1331:253:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1512],"body":{"id":4447,"nodeType":"Block","src":"1659:57:23","statements":[{"expression":{"hexValue":"646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c","id":4445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1677:31:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_bccab2d885f86fda81bfd84dd4248d31f8073b473d187111d36536db073076fa","typeString":"literal_string \"data:application/json;base64,\""},"value":"data:application/json;base64,"},"functionReturnParameters":4444,"id":4446,"nodeType":"Return","src":"1670:38:23"}]},"id":4448,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1601:8:23","nodeType":"FunctionDefinition","overrides":{"id":4441,"nodeType":"OverrideSpecifier","overrides":[],"src":"1626:8:23"},"parameters":{"id":4440,"nodeType":"ParameterList","parameters":[],"src":"1609:2:23"},"returnParameters":{"id":4444,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4443,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4448,"src":"1644:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4442,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1643:15:23"},"scope":4511,"src":"1592:124:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"baseFunctions":[1503],"body":{"id":4509,"nodeType":"Block","src":"1804:1048:23","statements":[{"expression":{"arguments":[{"arguments":[{"id":4458,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"1831:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4457,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1823:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1823:16:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e","id":4460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1841:33:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","typeString":"literal_string \"URI Query for nonexistent token\""},"value":"URI Query for nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","typeString":"literal_string \"URI Query for nonexistent token\""}],"id":4456,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1815:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1815:60:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4462,"nodeType":"ExpressionStatement","src":"1815:60:23"},{"assignments":[null,4464,null,null,null],"declarations":[null,{"constant":false,"id":4464,"mutability":"mutable","name":"price","nameLocation":"1898:5:23","nodeType":"VariableDeclaration","scope":4509,"src":"1891:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4463,"name":"int256","nodeType":"ElementaryTypeName","src":"1891:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":4468,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4465,"name":"i_priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4327,"src":"1913:11:23","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$103","typeString":"contract AggregatorV3Interface"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":102,"src":"1913:27:23","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1913:29:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"1888:54:23"},{"assignments":[4470],"declarations":[{"constant":false,"id":4470,"mutability":"mutable","name":"imageURI","nameLocation":"1967:8:23","nodeType":"VariableDeclaration","scope":4509,"src":"1953:22:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4469,"name":"string","nodeType":"ElementaryTypeName","src":"1953:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4472,"initialValue":{"id":4471,"name":"i_lowImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4319,"src":"1978:13:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"1953:38:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4464,"src":"2006:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"baseExpression":{"id":4474,"name":"s_tokenIdHighValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4331,"src":"2015:18:23","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_int256_$","typeString":"mapping(uint256 => int256)"}},"id":4476,"indexExpression":{"id":4475,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4450,"src":"2034:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2015:27:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2006:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4483,"nodeType":"IfStatement","src":"2002:94:23","trueBody":{"id":4482,"nodeType":"Block","src":"2044:52:23","statements":[{"expression":{"id":4480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4478,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"2059:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4479,"name":"i_highImageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4321,"src":"2070:14:23","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"src":"2059:25:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":4481,"nodeType":"ExpressionStatement","src":"2059:25:23"}]}},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4488,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[4448],"referencedDeclaration":4448,"src":"2192:8:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"arguments":[{"hexValue":"7b226e616d65223a22","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2352:11:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},"value":"{\"name\":\""},{"arguments":[],"expression":{"argumentTypes":[],"id":4497,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"2398:4:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2398:6:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"222c20226465736372697074696f6e223a22416e204e46542074686174206368616e676573206261736564206f6e2074686520436861696e6c696e6b2046656564222c20","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2473:70:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","typeString":"literal_string \"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", \""},"value":"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", "},{"hexValue":"2261747472696275746573223a205b7b2274726169745f74797065223a2022636f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765223a22","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2578:69:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"\""},"value":"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\""},{"id":4501,"name":"imageURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4470,"src":"2682:8:23","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"227d","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2725:4:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""},"value":"\"}"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","typeString":"literal_string \"{\"name\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","typeString":"literal_string \"\", \"description\":\"An NFT that changes based on the Chainlink Feed\", \""},{"typeIdentifier":"t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","typeString":"literal_string \"\"attributes\": [{\"trait_type\": \"coolness\", \"value\": 100}], \"image\":\"\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","typeString":"literal_string \"\"}\""}],"expression":{"id":4494,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2301:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2301:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2301:459:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2265:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4492,"name":"bytes","nodeType":"ElementaryTypeName","src":"2265:5:23","typeDescriptions":{}}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2265:522:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4490,"name":"Base64","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"2225:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Base64_$4245_$","typeString":"type(library Base64)"}},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","referencedDeclaration":4183,"src":"2225:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_string_memory_ptr_$","typeString":"function (bytes memory) pure returns (string memory)"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2225:585:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4486,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2153:3:23","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"2153:16:23","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2153:676:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2128:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4484,"name":"string","nodeType":"ElementaryTypeName","src":"2128:6:23","typeDescriptions":{}}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2128:716:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4455,"id":4508,"nodeType":"Return","src":"2108:736:23"}]},"functionSelector":"c87b56dd","id":4510,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"1733:8:23","nodeType":"FunctionDefinition","overrides":{"id":4452,"nodeType":"OverrideSpecifier","overrides":[],"src":"1771:8:23"},"parameters":{"id":4451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4450,"mutability":"mutable","name":"tokenId","nameLocation":"1750:7:23","nodeType":"VariableDeclaration","scope":4510,"src":"1742:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1742:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1741:17:23"},"returnParameters":{"id":4455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4454,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4510,"src":"1789:13:23","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4453,"name":"string","nodeType":"ElementaryTypeName","src":"1789:6:23","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1788:15:23"},"scope":4511,"src":"1724:1128:23","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4512,"src":"234:2621:23","usedErrors":[]}],"src":"35:2822:23"},"id":23},"contracts/RandomIpfsNft.sol":{"ast":{"absolutePath":"contracts/RandomIpfsNft.sol","exportedSymbols":{"Address":[2872],"Context":[2894],"ERC165":[3147],"ERC721":[2225],"ERC721URIStorage":[2515],"IERC165":[3159],"IERC4906":[1295],"IERC721":[2341],"IERC721Metadata":[2542],"IERC721Receiver":[2359],"Math":[4025],"Ownable":[1270],"RandomIpfsNft":[4861],"SignedMath":[4130],"Strings":[3123],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[294],"randomIpfsNft_NeedMoreETHSent":[4521],"randomIpfsNft_RangeOutOfBounds":[4519],"randomIpfsNft_TransferFailed":[4523]},"id":4862,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4513,"literals":["solidity","^","0.8",".7"],"nodeType":"PragmaDirective","src":"34:23:24"},{"absolutePath":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol","id":4514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4862,"sourceUnit":295,"src":"61:80:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol","id":4515,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4862,"sourceUnit":58,"src":"143:61:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":4516,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4862,"sourceUnit":2516,"src":"206:78:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":4517,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4862,"sourceUnit":1271,"src":"286:52:24","symbolAliases":[],"unitAlias":""},{"id":4519,"name":"randomIpfsNft_RangeOutOfBounds","nameLocation":"348:30:24","nodeType":"ErrorDefinition","parameters":{"id":4518,"nodeType":"ParameterList","parameters":[],"src":"378:2:24"},"src":"342:39:24"},{"id":4521,"name":"randomIpfsNft_NeedMoreETHSent","nameLocation":"389:29:24","nodeType":"ErrorDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[],"src":"418:2:24"},"src":"383:38:24"},{"id":4523,"name":"randomIpfsNft_TransferFailed","nameLocation":"429:28:24","nodeType":"ErrorDefinition","parameters":{"id":4522,"nodeType":"ParameterList","parameters":[],"src":"457:2:24"},"src":"423:37:24"},{"abstract":false,"baseContracts":[{"baseName":{"id":4524,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"490:17:24"},"id":4525,"nodeType":"InheritanceSpecifier","src":"490:17:24"},{"baseName":{"id":4526,"name":"ERC721URIStorage","nodeType":"IdentifierPath","referencedDeclaration":2515,"src":"509:16:24"},"id":4527,"nodeType":"InheritanceSpecifier","src":"509:16:24"},{"baseName":{"id":4528,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":1270,"src":"527:7:24"},"id":4529,"nodeType":"InheritanceSpecifier","src":"527:7:24"}],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4861,"linearizedBaseContracts":[4861,1270,2515,2225,2542,1295,2341,3147,3159,2894,57],"name":"RandomIpfsNft","nameLocation":"473:13:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4532,"mutability":"immutable","name":"i_vrfCoordinator","nameLocation":"586:16:24","nodeType":"VariableDeclaration","scope":4861,"src":"542:60:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":4531,"nodeType":"UserDefinedTypeName","pathNode":{"id":4530,"name":"VRFCoordinatorV2Interface","nodeType":"IdentifierPath","referencedDeclaration":294,"src":"542:25:24"},"referencedDeclaration":294,"src":"542:25:24","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"private"},{"constant":false,"id":4534,"mutability":"immutable","name":"i_subscriptionId","nameLocation":"634:16:24","nodeType":"VariableDeclaration","scope":4861,"src":"609:41:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4533,"name":"uint64","nodeType":"ElementaryTypeName","src":"609:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"private"},{"constant":false,"id":4536,"mutability":"immutable","name":"i_gasLane","nameLocation":"683:9:24","nodeType":"VariableDeclaration","scope":4861,"src":"657:35:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"657:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":4538,"mutability":"immutable","name":"i_callbackGasLimit","nameLocation":"724:18:24","nodeType":"VariableDeclaration","scope":4861,"src":"699:43:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4537,"name":"uint32","nodeType":"ElementaryTypeName","src":"699:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"private"},{"constant":true,"id":4541,"mutability":"constant","name":"REQUEST_CONFIRMATIONS","nameLocation":"773:21:24","nodeType":"VariableDeclaration","scope":4861,"src":"749:49:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4539,"name":"uint16","nodeType":"ElementaryTypeName","src":"749:6:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":4540,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"797:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"private"},{"constant":true,"id":4544,"mutability":"constant","name":"NUM_WORDS","nameLocation":"829:9:24","nodeType":"VariableDeclaration","scope":4861,"src":"805:37:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4542,"name":"uint32","nodeType":"ElementaryTypeName","src":"805:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":false,"id":4548,"mutability":"mutable","name":"s_requestIdToSender","nameLocation":"879:19:24","nodeType":"VariableDeclaration","scope":4861,"src":"851:47:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":4547,"keyType":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"851:27:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueType":{"id":4546,"name":"address","nodeType":"ElementaryTypeName","src":"870:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"internal"},{"canonicalName":"RandomIpfsNft.Breed","id":4552,"members":[{"id":4549,"name":"PUG","nameLocation":"929:3:24","nodeType":"EnumValue","src":"929:3:24"},{"id":4550,"name":"SHIBA_INU","nameLocation":"943:9:24","nodeType":"EnumValue","src":"943:9:24"},{"id":4551,"name":"ST_BERNARD","nameLocation":"963:10:24","nodeType":"EnumValue","src":"963:10:24"}],"name":"Breed","nameLocation":"912:5:24","nodeType":"EnumDefinition","src":"907:73:24"},{"constant":true,"id":4555,"mutability":"constant","name":"MAX_CHANCE_VALUE","nameLocation":"1014:16:24","nodeType":"VariableDeclaration","scope":4861,"src":"988:48:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4553,"name":"uint256","nodeType":"ElementaryTypeName","src":"988:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"313030","id":4554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1033:3:24","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"visibility":"internal"},{"constant":false,"id":4557,"mutability":"mutable","name":"s_tokenCounter","nameLocation":"1059:14:24","nodeType":"VariableDeclaration","scope":4861,"src":"1043:30:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":4559,"mutability":"immutable","name":"i_mintFee","nameLocation":"1107:9:24","nodeType":"VariableDeclaration","scope":4861,"src":"1080:36:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4558,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4562,"mutability":"mutable","name":"s_dogTokenUris","nameLocation":"1143:14:24","nodeType":"VariableDeclaration","scope":4861,"src":"1125:32:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string[]"},"typeName":{"baseType":{"id":4560,"name":"string","nodeType":"ElementaryTypeName","src":"1125:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4561,"nodeType":"ArrayTypeName","src":"1125:8:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"anonymous":false,"id":4568,"name":"NftRequested","nameLocation":"1172:12:24","nodeType":"EventDefinition","parameters":{"id":4567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"indexed":true,"mutability":"mutable","name":"requestId","nameLocation":"1201:9:24","nodeType":"VariableDeclaration","scope":4568,"src":"1185:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4566,"indexed":false,"mutability":"mutable","name":"requester","nameLocation":"1220:9:24","nodeType":"VariableDeclaration","scope":4568,"src":"1212:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4565,"name":"address","nodeType":"ElementaryTypeName","src":"1212:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1184:46:24"},"src":"1166:65:24"},{"anonymous":false,"id":4575,"name":"Nftminted","nameLocation":"1243:9:24","nodeType":"EventDefinition","parameters":{"id":4574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"indexed":false,"mutability":"mutable","name":"dogBreed","nameLocation":"1259:8:24","nodeType":"VariableDeclaration","scope":4575,"src":"1253:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4570,"nodeType":"UserDefinedTypeName","pathNode":{"id":4569,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4552,"src":"1253:5:24"},"referencedDeclaration":4552,"src":"1253:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"},{"constant":false,"id":4573,"indexed":false,"mutability":"mutable","name":"minter","nameLocation":"1277:6:24","nodeType":"VariableDeclaration","scope":4575,"src":"1269:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4572,"name":"address","nodeType":"ElementaryTypeName","src":"1269:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1252:32:24"},"src":"1237:48:24"},{"body":{"id":4625,"nodeType":"Block","src":"1574:273:24","statements":[{"expression":{"id":4603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4599,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"1585:16:24","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4601,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1630:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4600,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":294,"src":"1604:25:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$294_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":4602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1604:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"}},"src":"1585:62:24","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"}},"id":4604,"nodeType":"ExpressionStatement","src":"1585:62:24"},{"expression":{"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4605,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"1658:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4606,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"1677:14:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"1658:33:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":4608,"nodeType":"ExpressionStatement","src":"1658:33:24"},{"expression":{"id":4611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4609,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"1702:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4610,"name":"gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1714:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1702:19:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4612,"nodeType":"ExpressionStatement","src":"1702:19:24"},{"expression":{"id":4615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4613,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"1732:18:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4614,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4583,"src":"1753:16:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"1732:37:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":4616,"nodeType":"ExpressionStatement","src":"1732:37:24"},{"expression":{"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4617,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"1780:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4618,"name":"dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4587,"src":"1797:12:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string memory[3] memory"}},"src":"1780:29:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4620,"nodeType":"ExpressionStatement","src":"1780:29:24"},{"expression":{"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4621,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"1820:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4622,"name":"mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4589,"src":"1832:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1820:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4624,"nodeType":"ExpressionStatement","src":"1820:19:24"}]},"id":4626,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4592,"name":"vrfCoordinatorV2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1523:16:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4593,"kind":"baseConstructorSpecifier","modifierName":{"id":4591,"name":"VRFConsumerBaseV2","nodeType":"IdentifierPath","referencedDeclaration":57,"src":"1505:17:24"},"nodeType":"ModifierInvocation","src":"1505:35:24"},{"arguments":[{"hexValue":"52616e646f6d2049504653204e4654","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1548:17:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_060d1bdab5c66f2c3459267e43d1a510b3c61ad39afb4b1b9b944fbc6d6a9661","typeString":"literal_string \"Random IPFS NFT\""},"value":"Random IPFS NFT"},{"hexValue":"52494e","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1567:5:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c2493aacafadd9e7cfb3e25fe184ffa39fa77c9794b3bfc81822f04194b6f764","typeString":"literal_string \"RIN\""},"value":"RIN"}],"id":4597,"kind":"baseConstructorSpecifier","modifierName":{"id":4594,"name":"ERC721","nodeType":"IdentifierPath","referencedDeclaration":2225,"src":"1541:6:24"},"nodeType":"ModifierInvocation","src":"1541:32:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4577,"mutability":"mutable","name":"vrfCoordinatorV2","nameLocation":"1323:16:24","nodeType":"VariableDeclaration","scope":4626,"src":"1315:24:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4576,"name":"address","nodeType":"ElementaryTypeName","src":"1315:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"subscriptionId","nameLocation":"1357:14:24","nodeType":"VariableDeclaration","scope":4626,"src":"1350:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":4578,"name":"uint64","nodeType":"ElementaryTypeName","src":"1350:6:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"gasLane","nameLocation":"1390:7:24","nodeType":"VariableDeclaration","scope":4626,"src":"1382:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1382:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"1415:16:24","nodeType":"VariableDeclaration","scope":4626,"src":"1408:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":4582,"name":"uint32","nodeType":"ElementaryTypeName","src":"1408:6:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":4587,"mutability":"mutable","name":"dogTokenUris","nameLocation":"1459:12:24","nodeType":"VariableDeclaration","scope":4626,"src":"1442:29:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$3_memory_ptr","typeString":"string[3]"},"typeName":{"baseType":{"id":4584,"name":"string","nodeType":"ElementaryTypeName","src":"1442:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4586,"length":{"hexValue":"33","id":4585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1449:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"1442:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$3_storage_ptr","typeString":"string[3]"}},"visibility":"internal"},{"constant":false,"id":4589,"mutability":"mutable","name":"mintFee","nameLocation":"1490:7:24","nodeType":"VariableDeclaration","scope":4626,"src":"1482:15:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4588,"name":"uint256","nodeType":"ElementaryTypeName","src":"1482:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1304:200:24"},"returnParameters":{"id":4598,"nodeType":"ParameterList","parameters":[],"src":"1574:0:24"},"scope":4861,"src":"1293:554:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4664,"nodeType":"Block","src":"1920:432:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4631,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1935:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"1935:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4633,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"1947:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1935:21:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4639,"nodeType":"IfStatement","src":"1931:92:24","trueBody":{"id":4638,"nodeType":"Block","src":"1958:65:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4635,"name":"randomIpfsNft_NeedMoreETHSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4521,"src":"1980:29:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1980:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4637,"nodeType":"RevertStatement","src":"1973:38:24"}]}},{"expression":{"id":4649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4640,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2033:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4643,"name":"i_gasLane","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4536,"src":"2095:9:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4644,"name":"i_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4534,"src":"2119:16:24","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":4645,"name":"REQUEST_CONFIRMATIONS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4541,"src":"2150:21:24","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":4646,"name":"i_callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4538,"src":"2186:18:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":4647,"name":"NUM_WORDS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"2219:9:24","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":4641,"name":"i_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4532,"src":"2045:16:24","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$294","typeString":"contract VRFCoordinatorV2Interface"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":227,"src":"2045:35:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":4648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2045:194:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2033:206:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4650,"nodeType":"ExpressionStatement","src":"2033:206:24"},{"expression":{"id":4656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4651,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"2250:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4653,"indexExpression":{"id":4652,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2270:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2250:30:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4654,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2283:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2283:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2250:43:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4657,"nodeType":"ExpressionStatement","src":"2250:43:24"},{"eventCall":{"arguments":[{"id":4659,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4629,"src":"2322:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2333:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"2333:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4658,"name":"NftRequested","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"2309:12:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,address)"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2309:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"EmitStatement","src":"2304:40:24"}]},"functionSelector":"aa152491","id":4665,"implemented":true,"kind":"function","modifiers":[],"name":"requestNft","nameLocation":"1864:10:24","nodeType":"FunctionDefinition","parameters":{"id":4627,"nodeType":"ParameterList","parameters":[],"src":"1874:2:24"},"returnParameters":{"id":4630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4629,"mutability":"mutable","name":"requestId","nameLocation":"1909:9:24","nodeType":"VariableDeclaration","scope":4665,"src":"1901:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4628,"name":"uint256","nodeType":"ElementaryTypeName","src":"1901:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1900:19:24"},"scope":4861,"src":"1855:497:24","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[30],"body":{"id":4723,"nodeType":"Block","src":"2455:444:24","statements":[{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"dogOwner","nameLocation":"2474:8:24","nodeType":"VariableDeclaration","scope":4723,"src":"2466:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4674,"name":"address","nodeType":"ElementaryTypeName","src":"2466:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4679,"initialValue":{"baseExpression":{"id":4676,"name":"s_requestIdToSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"2485:19:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":4678,"indexExpression":{"id":4677,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4667,"src":"2505:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2485:30:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2466:49:24"},{"assignments":[4681],"declarations":[{"constant":false,"id":4681,"mutability":"mutable","name":"newTokenId","nameLocation":"2534:10:24","nodeType":"VariableDeclaration","scope":4723,"src":"2526:18:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4680,"name":"uint256","nodeType":"ElementaryTypeName","src":"2526:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4683,"initialValue":{"id":4682,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2547:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2526:35:24"},{"assignments":[4685],"declarations":[{"constant":false,"id":4685,"mutability":"mutable","name":"moddedRng","nameLocation":"2582:9:24","nodeType":"VariableDeclaration","scope":4723,"src":"2574:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4684,"name":"uint256","nodeType":"ElementaryTypeName","src":"2574:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4691,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4686,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4670,"src":"2594:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4688,"indexExpression":{"hexValue":"30","id":4687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2606:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2594:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":4689,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"2611:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2594:33:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2574:53:24"},{"assignments":[4694],"declarations":[{"constant":false,"id":4694,"mutability":"mutable","name":"dogBreed","nameLocation":"2644:8:24","nodeType":"VariableDeclaration","scope":4723,"src":"2638:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4693,"nodeType":"UserDefinedTypeName","pathNode":{"id":4692,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4552,"src":"2638:5:24"},"referencedDeclaration":4552,"src":"2638:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"id":4698,"initialValue":{"arguments":[{"id":4696,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4685,"src":"2677:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4695,"name":"getBreedFromModdedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4819,"src":"2655:21:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_enum$_Breed_$4552_$","typeString":"function (uint256) pure returns (enum RandomIpfsNft.Breed)"}},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2655:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},"nodeType":"VariableDeclarationStatement","src":"2638:49:24"},{"expression":{"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4699,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2698:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4700,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"2716:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2698:32:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4702,"nodeType":"ExpressionStatement","src":"2698:32:24"},{"expression":{"arguments":[{"id":4704,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"2753:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4705,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"2763:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4703,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1793,1822],"referencedDeclaration":1793,"src":"2743:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2743:31:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4707,"nodeType":"ExpressionStatement","src":"2743:31:24"},{"expression":{"arguments":[{"id":4709,"name":"newTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4681,"src":"2798:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":4710,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"2810:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4715,"indexExpression":{"arguments":[{"id":4713,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"2833:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}],"id":4712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2825:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4711,"name":"uint256","nodeType":"ElementaryTypeName","src":"2825:7:24","typeDescriptions":{}}},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2825:17:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2810:33:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4708,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2484,"src":"2785:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2785:59:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4717,"nodeType":"ExpressionStatement","src":"2785:59:24"},{"eventCall":{"arguments":[{"id":4719,"name":"dogBreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4694,"src":"2872:8:24","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},{"id":4720,"name":"dogOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"2882:8:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4718,"name":"Nftminted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"2862:9:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_Breed_$4552_$_t_address_$returns$__$","typeString":"function (enum RandomIpfsNft.Breed,address)"}},"id":4721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2862:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4722,"nodeType":"EmitStatement","src":"2857:34:24"}]},"id":4724,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"2369:18:24","nodeType":"FunctionDefinition","overrides":{"id":4672,"nodeType":"OverrideSpecifier","overrides":[],"src":"2446:8:24"},"parameters":{"id":4671,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4667,"mutability":"mutable","name":"requestId","nameLocation":"2396:9:24","nodeType":"VariableDeclaration","scope":4724,"src":"2388:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4666,"name":"uint256","nodeType":"ElementaryTypeName","src":"2388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4670,"mutability":"mutable","name":"randomWords","nameLocation":"2424:11:24","nodeType":"VariableDeclaration","scope":4724,"src":"2407:28:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4668,"name":"uint256","nodeType":"ElementaryTypeName","src":"2407:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4669,"nodeType":"ArrayTypeName","src":"2407:9:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2387:49:24"},"returnParameters":{"id":4673,"nodeType":"ParameterList","parameters":[],"src":"2455:0:24"},"scope":4861,"src":"2360:539:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4757,"nodeType":"Block","src":"2944:218:24","statements":[{"assignments":[4730],"declarations":[{"constant":false,"id":4730,"mutability":"mutable","name":"amount","nameLocation":"2963:6:24","nodeType":"VariableDeclaration","scope":4757,"src":"2955:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"2955:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4736,"initialValue":{"expression":{"arguments":[{"id":4733,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2980:4:24","typeDescriptions":{"typeIdentifier":"t_contract$_RandomIpfsNft_$4861","typeString":"contract RandomIpfsNft"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RandomIpfsNft_$4861","typeString":"contract RandomIpfsNft"}],"id":4732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2972:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4731,"name":"address","nodeType":"ElementaryTypeName","src":"2972:7:24","typeDescriptions":{}}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2972:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2972:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2955:38:24"},{"assignments":[4738,null],"declarations":[{"constant":false,"id":4738,"mutability":"mutable","name":"success","nameLocation":"3010:7:24","nodeType":"VariableDeclaration","scope":4757,"src":"3005:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4737,"name":"bool","nodeType":"ElementaryTypeName","src":"3005:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":4749,"initialValue":{"arguments":[{"hexValue":"","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3063:2:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"expression":{"id":4741,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3031:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3031:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3023:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4739,"name":"address","nodeType":"ElementaryTypeName","src":"3023:8:24","stateMutability":"payable","typeDescriptions":{}}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3023:19:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"3023:24:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":4745,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4730,"src":"3055:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3023:39:24","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3023:43:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3004:62:24"},{"condition":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3081:8:24","subExpression":{"id":4750,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4738,"src":"3082:7:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4756,"nodeType":"IfStatement","src":"3077:78:24","trueBody":{"id":4755,"nodeType":"Block","src":"3091:64:24","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4752,"name":"randomIpfsNft_TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4523,"src":"3113:28:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3113:30:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4754,"nodeType":"RevertStatement","src":"3106:37:24"}]}}]},"functionSelector":"3ccfd60b","id":4758,"implemented":true,"kind":"function","modifiers":[{"id":4727,"kind":"modifierInvocation","modifierName":{"id":4726,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":1189,"src":"2934:9:24"},"nodeType":"ModifierInvocation","src":"2934:9:24"}],"name":"withdraw","nameLocation":"2916:8:24","nodeType":"FunctionDefinition","parameters":{"id":4725,"nodeType":"ParameterList","parameters":[],"src":"2924:2:24"},"returnParameters":{"id":4728,"nodeType":"ParameterList","parameters":[],"src":"2944:0:24"},"scope":4861,"src":"2907:255:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4818,"nodeType":"Block","src":"3248:411:24","statements":[{"assignments":[4767],"declarations":[{"constant":false,"id":4767,"mutability":"mutable","name":"cumulativeSum","nameLocation":"3267:13:24","nodeType":"VariableDeclaration","scope":4818,"src":"3259:21:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4766,"name":"uint256","nodeType":"ElementaryTypeName","src":"3259:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4769,"initialValue":{"hexValue":"30","id":4768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3283:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3259:25:24"},{"assignments":[4775],"declarations":[{"constant":false,"id":4775,"mutability":"mutable","name":"chanceArray","nameLocation":"3310:11:24","nodeType":"VariableDeclaration","scope":4818,"src":"3295:26:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4773,"name":"uint","nodeType":"ElementaryTypeName","src":"3295:4:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4774,"length":{"hexValue":"33","id":4772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3300:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3295:7:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"id":4778,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":4776,"name":"getChanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"3324:14:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_array$_t_uint256_$3_memory_ptr_$","typeString":"function () pure returns (uint256[3] memory)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3324:16:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"nodeType":"VariableDeclarationStatement","src":"3295:45:24"},{"body":{"id":4813,"nodeType":"Block","src":"3402:200:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4790,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"3421:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4791,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"3434:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3421:26:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4793,"name":"moddedRng","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"3451:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4794,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"3463:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":4795,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"3479:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4797,"indexExpression":{"id":4796,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3491:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3479:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:30:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3451:42:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3421:72:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4806,"nodeType":"IfStatement","src":"3417:128:24","trueBody":{"id":4805,"nodeType":"Block","src":"3495:50:24","statements":[{"expression":{"arguments":[{"id":4802,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3527:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4801,"name":"Breed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4552,"src":"3521:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Breed_$4552_$","typeString":"type(enum RandomIpfsNft.Breed)"}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3521:8:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},"functionReturnParameters":4765,"id":4804,"nodeType":"Return","src":"3514:15:24"}]}},{"expression":{"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4807,"name":"cumulativeSum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4767,"src":"3559:13:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"baseExpression":{"id":4808,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"3576:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4810,"indexExpression":{"id":4809,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3588:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3576:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3559:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4812,"nodeType":"ExpressionStatement","src":"3559:31:24"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4783,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3373:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4784,"name":"chanceArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4775,"src":"3377:11:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":4785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3377:18:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3373:22:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4814,"initializationExpression":{"assignments":[4780],"declarations":[{"constant":false,"id":4780,"mutability":"mutable","name":"i","nameLocation":"3366:1:24","nodeType":"VariableDeclaration","scope":4814,"src":"3358:9:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"3358:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4782,"initialValue":{"hexValue":"30","id":4781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3370:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3358:13:24"},"loopExpression":{"expression":{"id":4788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3397:3:24","subExpression":{"id":4787,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"3397:1:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4789,"nodeType":"ExpressionStatement","src":"3397:3:24"},"nodeType":"ForStatement","src":"3353:249:24"},{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4815,"name":"randomIpfsNft_RangeOutOfBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4519,"src":"3619:30:24","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3619:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4817,"nodeType":"RevertStatement","src":"3612:39:24"}]},"functionSelector":"a51cccf3","id":4819,"implemented":true,"kind":"function","modifiers":[],"name":"getBreedFromModdedRng","nameLocation":"3179:21:24","nodeType":"FunctionDefinition","parameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4760,"mutability":"mutable","name":"moddedRng","nameLocation":"3209:9:24","nodeType":"VariableDeclaration","scope":4819,"src":"3201:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3201:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3200:19:24"},"returnParameters":{"id":4765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4819,"src":"3241:5:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"},"typeName":{"id":4763,"nodeType":"UserDefinedTypeName","pathNode":{"id":4762,"name":"Breed","nodeType":"IdentifierPath","referencedDeclaration":4552,"src":"3241:5:24"},"referencedDeclaration":4552,"src":"3241:5:24","typeDescriptions":{"typeIdentifier":"t_enum$_Breed_$4552","typeString":"enum RandomIpfsNft.Breed"}},"visibility":"internal"}],"src":"3240:7:24"},"scope":4861,"src":"3170:489:24","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4831,"nodeType":"Block","src":"3733:52:24","statements":[{"expression":{"components":[{"hexValue":"3130","id":4826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3752:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"3330","id":4827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3756:2:24","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"id":4828,"name":"MAX_CHANCE_VALUE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4555,"src":"3760:16:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4829,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3751:26:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"functionReturnParameters":4825,"id":4830,"nodeType":"Return","src":"3744:33:24"}]},"functionSelector":"5dacf5f4","id":4832,"implemented":true,"kind":"function","modifiers":[],"name":"getChanceArray","nameLocation":"3676:14:24","nodeType":"FunctionDefinition","parameters":{"id":4820,"nodeType":"ParameterList","parameters":[],"src":"3690:2:24"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4832,"src":"3714:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":4821,"name":"uint256","nodeType":"ElementaryTypeName","src":"3714:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4823,"length":{"hexValue":"33","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3722:1:24","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"3714:10:24","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"}],"src":"3713:19:24"},"scope":4861,"src":"3667:118:24","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":4839,"nodeType":"Block","src":"3845:35:24","statements":[{"expression":{"id":4837,"name":"i_mintFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4559,"src":"3863:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4836,"id":4838,"nodeType":"Return","src":"3856:16:24"}]},"functionSelector":"7a5caab3","id":4840,"implemented":true,"kind":"function","modifiers":[],"name":"getMintFee","nameLocation":"3802:10:24","nodeType":"FunctionDefinition","parameters":{"id":4833,"nodeType":"ParameterList","parameters":[],"src":"3812:2:24"},"returnParameters":{"id":4836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4840,"src":"3836:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3836:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3835:9:24"},"scope":4861,"src":"3793:87:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4851,"nodeType":"Block","src":"3964:47:24","statements":[{"expression":{"baseExpression":{"id":4847,"name":"s_dogTokenUris","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4562,"src":"3982:14:24","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage","typeString":"string storage ref[] storage ref"}},"id":4849,"indexExpression":{"id":4848,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4842,"src":"3997:5:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3982:21:24","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4846,"id":4850,"nodeType":"Return","src":"3975:28:24"}]},"functionSelector":"3af25975","id":4852,"implemented":true,"kind":"function","modifiers":[],"name":"getDogTokenUris","nameLocation":"3897:15:24","nodeType":"FunctionDefinition","parameters":{"id":4843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4842,"mutability":"mutable","name":"index","nameLocation":"3921:5:24","nodeType":"VariableDeclaration","scope":4852,"src":"3913:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4841,"name":"uint256","nodeType":"ElementaryTypeName","src":"3913:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3912:15:24"},"returnParameters":{"id":4846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4852,"src":"3949:13:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4844,"name":"string","nodeType":"ElementaryTypeName","src":"3949:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3948:15:24"},"scope":4861,"src":"3888:123:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4859,"nodeType":"Block","src":"4076:40:24","statements":[{"expression":{"id":4857,"name":"s_tokenCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4557,"src":"4094:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4856,"id":4858,"nodeType":"Return","src":"4087:21:24"}]},"functionSelector":"6e02007d","id":4860,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenCounter","nameLocation":"4028:15:24","nodeType":"FunctionDefinition","parameters":{"id":4853,"nodeType":"ParameterList","parameters":[],"src":"4043:2:24"},"returnParameters":{"id":4856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4860,"src":"4067:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4854,"name":"uint256","nodeType":"ElementaryTypeName","src":"4067:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4066:9:24"},"scope":4861,"src":"4019:97:24","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4862,"src":"464:3655:24","usedErrors":[8,4519,4521,4523]}],"src":"34:4087:24"},"id":24},"contracts/test/VRFCoordinatorV2Mock.sol":{"ast":{"absolutePath":"contracts/test/VRFCoordinatorV2Mock.sol","exportedSymbols":{"LinkTokenInterface":[198],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[294],"VRFCoordinatorV2Mock":[1157]},"id":4865,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4863,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:25"},{"absolutePath":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","file":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol","id":4864,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4865,"sourceUnit":1158,"src":"60:70:25","symbolAliases":[],"unitAlias":""}],"src":"33:99:25"},"id":25}},"contracts":{"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).","kind":"dev","methods":{"constructor":{"params":{"_vrfCoordinator":"address of VRFCoordinator contract"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************","version":1}}},"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"description","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint80","name":"_roundId","type":"uint80"}],"name":"getRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567","description()":"7284e416","getRoundData(uint80)":"9a6fc8f5","latestRoundData()":"feaf968c","version()":"54fd4d50"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol":{"LinkTokenInterface":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"remaining","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"decimalPlaces","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"decreaseApproval","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"increaseApproval","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"tokenName","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"tokenSymbol","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"totalTokensIssued","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"transferAndCall","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseApproval(address,uint256)":"66188463","increaseApproval(address,uint256)":"d73dd623","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferAndCall(address,uint256,bytes)":"4000aea0","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"decimalPlaces\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseApproval\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"increaseApproval\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalTokensIssued\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":\"LinkTokenInterface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"details":"will revert if original owner of subId has not requested that msg.sender become the new owner.","params":{"subId":"- ID of the subscription"}},"addConsumer(uint64,address)":{"params":{"consumer":"- New consumer which can use the subscription","subId":"- ID of the subscription"}},"cancelSubscription(uint64,address)":{"params":{"subId":"- ID of the subscription","to":"- Where to send the remaining LINK to"}},"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"subId":"- A unique subscription id."}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}},"getSubscription(uint64)":{"params":{"subId":"- ID of the subscription"},"returns":{"balance":"- LINK balance of the subscription in juels.","consumers":"- list of consumer address which are able to use this subscription.","owner":"- owner of the subscription.","reqCount":"- number of requests for this subscription, determines fee tier."}},"removeConsumer(uint64,address)":{"params":{"consumer":"- Consumer to remove from the subscription","subId":"- ID of the subscription"}},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"params":{"callbackGasLimit":"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]","keyHash":"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.","minimumRequestConfirmations":"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].","numWords":"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.","subId":"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash."},"returns":{"requestId":"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords."}},"requestSubscriptionOwnerTransfer(uint64,address)":{"params":{"newOwner":"- proposed new owner of the subscription","subId":"- ID of the subscription"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"acceptSubscriptionOwnerTransfer(uint64)":{"notice":"Request subscription owner transfer."},"addConsumer(uint64,address)":{"notice":"Add a consumer to a VRF subscription."},"cancelSubscription(uint64,address)":{"notice":"Cancel a subscription"},"createSubscription()":{"notice":"Create a VRF subscription."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"},"getSubscription(uint64)":{"notice":"Get a VRF subscription."},"removeConsumer(uint64,address)":{"notice":"Remove a consumer from a VRF subscription."},"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":{"notice":"Request a set of random words."},"requestSubscriptionOwnerTransfer(uint64,address)":{"notice":"Request subscription owner transfer."}},"version":1}}},"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol":{"VRFCoordinatorV2Mock":{"abi":[{"inputs":[{"internalType":"uint96","name":"_baseFee","type":"uint96"},{"internalType":"uint96","name":"_gasPriceLink","type":"uint96"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientBalance","type":"error"},{"inputs":[],"name":"InvalidConsumer","type":"error"},{"inputs":[],"name":"InvalidRandomWords","type":"error"},{"inputs":[],"name":"InvalidSubscription","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"MustBeSubOwner","type":"error"},{"inputs":[],"name":"TooManyConsumers","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"consumer","type":"address"}],"name":"ConsumerRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"outputSeed","type":"uint256"},{"indexed":false,"internalType":"uint96","name":"payment","type":"uint96"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"RandomWordsFulfilled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"preSeed","type":"uint256"},{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"indexed":false,"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"indexed":false,"internalType":"uint32","name":"numWords","type":"uint32"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RandomWordsRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"SubscriptionCanceled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"address","name":"owner","type":"address"}],"name":"SubscriptionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint64","name":"subId","type":"uint64"},{"indexed":false,"internalType":"uint256","name":"oldBalance","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"newBalance","type":"uint256"}],"name":"SubscriptionFunded","type":"event"},{"inputs":[],"name":"BASE_FEE","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GAS_PRICE_LINK","outputs":[{"internalType":"uint96","name":"","type":"uint96"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_CONSUMERS","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"consumerIsAdded","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"fulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_requestId","type":"uint256"},{"internalType":"address","name":"_consumer","type":"address"},{"internalType":"uint256[]","name":"_words","type":"uint256[]"}],"name":"fulfillRandomWordsWithOverride","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint96","name":"_amount","type":"uint96"}],"name":"fundSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getConfig","outputs":[{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"maxGasLimit","type":"uint32"},{"internalType":"uint32","name":"stalenessSeconds","type":"uint32"},{"internalType":"uint32","name":"gasAfterPaymentCalculation","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFallbackWeiPerUnitLink","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFeeConfig","outputs":[{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier1","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier2","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier3","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier4","type":"uint32"},{"internalType":"uint32","name":"fulfillmentFlatFeeLinkPPMTier5","type":"uint32"},{"internalType":"uint24","name":"reqsForTier2","type":"uint24"},{"internalType":"uint24","name":"reqsForTier3","type":"uint24"},{"internalType":"uint24","name":"reqsForTier4","type":"uint24"},{"internalType":"uint24","name":"reqsForTier5","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"_keyHash","type":"bytes32"},{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"uint16","name":"_minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"_callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"_numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"_subId","type":"uint64"},{"internalType":"address","name":"_newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"pure","type":"function"}],"devdoc":{"kind":"dev","methods":{"createSubscription()":{"details":"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));","returns":{"_subId":"- A unique subscription id."}},"fulfillRandomWords(uint256,address)":{"details":"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.","params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill"}},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"params":{"_consumer":"the VRF randomness consumer to send the result to","_requestId":"the request to fulfill","_words":"user-provided random words"}},"fundSubscription(uint64,uint96)":{"params":{"_amount":"the amount to fund","_subId":"the subscription to fund"}},"getRequestConfig()":{"returns":{"_0":"minimumRequestConfirmations global min for request confirmations","_1":"maxGasLimit global max for request gas limit","_2":"s_provingKeyHashes list of registered key hashes"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_435":{"entryPoint":null,"id":435,"parameterSlots":2,"returnSlots":0},"abi_decode_t_uint96_fromMemory":{"entryPoint":224,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint96t_uint96_fromMemory":{"entryPoint":247,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":174,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":169,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":198,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1228:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:65:26","statements":[{"nodeType":"YulAssignment","src":"388:49:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:26:26","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:38:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:109:26"},{"body":{"nodeType":"YulBlock","src":"491:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"547:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"556:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"559:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"549:6:26"},"nodeType":"YulFunctionCall","src":"549:12:26"},"nodeType":"YulExpressionStatement","src":"549:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"514:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"538:5:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"521:16:26"},"nodeType":"YulFunctionCall","src":"521:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"511:2:26"},"nodeType":"YulFunctionCall","src":"511:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"504:6:26"},"nodeType":"YulFunctionCall","src":"504:42:26"},"nodeType":"YulIf","src":"501:62:26"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"484:5:26","type":""}],"src":"449:120:26"},{"body":{"nodeType":"YulBlock","src":"637:79:26","statements":[{"nodeType":"YulAssignment","src":"647:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"662:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"656:5:26"},"nodeType":"YulFunctionCall","src":"656:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"647:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"704:5:26"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"678:25:26"},"nodeType":"YulFunctionCall","src":"678:32:26"},"nodeType":"YulExpressionStatement","src":"678:32:26"}]},"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"615:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"623:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"631:5:26","type":""}],"src":"575:141:26"},{"body":{"nodeType":"YulBlock","src":"814:411:26","statements":[{"body":{"nodeType":"YulBlock","src":"860:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"862:77:26"},"nodeType":"YulFunctionCall","src":"862:79:26"},"nodeType":"YulExpressionStatement","src":"862:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"835:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"844:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"831:3:26"},"nodeType":"YulFunctionCall","src":"831:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"856:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"827:3:26"},"nodeType":"YulFunctionCall","src":"827:32:26"},"nodeType":"YulIf","src":"824:119:26"},{"nodeType":"YulBlock","src":"953:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"968:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"982:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"972:6:26","type":""}]},{"nodeType":"YulAssignment","src":"997:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1042:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1053:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1038:3:26"},"nodeType":"YulFunctionCall","src":"1038:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1062:7:26"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1007:30:26"},"nodeType":"YulFunctionCall","src":"1007:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"997:6:26"}]}]},{"nodeType":"YulBlock","src":"1090:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1105:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1119:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1109:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1135:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1180:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1191:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1176:3:26"},"nodeType":"YulFunctionCall","src":"1176:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1200:7:26"}],"functionName":{"name":"abi_decode_t_uint96_fromMemory","nodeType":"YulIdentifier","src":"1145:30:26"},"nodeType":"YulFunctionCall","src":"1145:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1135:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint96t_uint96_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"776:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"787:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"799:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"807:6:26","type":""}],"src":"722:503:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60e0604052606461ffff1660c09061ffff1660f01b8152506001805560646002553480156200002d57600080fd5b5060405162002de138038062002de18339818101604052810190620000539190620000f7565b816bffffffffffffffffffffffff166080816bffffffffffffffffffffffff1660a01b81525050806bffffffffffffffffffffffff1660a0816bffffffffffffffffffffffff1660a01b8152505050506200013e565b600080fd5b60006bffffffffffffffffffffffff82169050919050565b620000d181620000ae565b8114620000dd57600080fd5b50565b600081519050620000f181620000c6565b92915050565b60008060408385031215620001115762000110620000a9565b5b60006200012185828601620000e0565b92505060206200013485828601620000e0565b9150509250929050565b60805160a01c60a05160a01c60c05160f01c612c556200018c60003960008181610cb70152610e0201526000818161079f01526115240152600081816107e401526109f30152612c556000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c806382359740116100ad578063afc69b5311610071578063afc69b5314610317578063c3f909d414610333578063d7ae1d3014610354578063e82ad7d414610370578063ed5eb06d146103a05761012b565b806382359740146102705780639f87fad71461028c578063a21a23e4146102a8578063a410347f146102c6578063a47c7696146102e45761012b565b80635d3b1d30116100f45780635d3b1d30146101c45780635fbbc0d2146101f457806364d51a2a1461021a5780637341c10c14610238578063808974ff146102545761012b565b80620122911461013057806304c357cb1461015057806308e3898e1461016c578063356dac71146101885780633d18651e146101a6575b600080fd5b6101386103d0565b60405161014793929190611dd1565b60405180910390f35b61016a60048036038101906101659190611ec1565b610430565b005b61018660048036038101906101819190612090565b61046b565b005b6101906109e2565b60405161019d9190612118565b60405180910390f35b6101ae6109f1565b6040516101bb919061215a565b60405180910390f35b6101de60048036038101906101d991906121f9565b610a15565b6040516101eb9190612283565b60405180910390f35b6101fc610c76565b604051610211999897969594939291906122bc565b60405180910390f35b610222610cb5565b60405161022f9190612349565b60405180910390f35b610252600480360381019061024d9190611ec1565b610cd9565b005b61026e60048036038101906102699190612364565b610f6d565b005b61028a600480360381019061028591906123a4565b610fc5565b005b6102a660048036038101906102a19190611ec1565b611000565b005b6102b061136d565b6040516102bd91906123e0565b60405180910390f35b6102ce611522565b6040516102db919061215a565b60405180910390f35b6102fe60048036038101906102f991906123a4565b611546565b60405161030e94939291906124c8565b60405180910390f35b610331600480360381019061032c9190612540565b61174c565b005b61033b611917565b60405161034b9493929190612580565b60405180910390f35b61036e60048036038101906103699190611ec1565b611937565b005b61038a600480360381019061038591906123a4565b611b5a565b60405161039791906125e0565b60405180910390f35b6103ba60048036038101906103b59190611ec1565b611b97565b6040516103c791906125e0565b60405180910390f35b60008060606003621e8480600067ffffffffffffffff8111156103f6576103f5611f4d565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290612658565b60405180910390fd5b60005a905060006005600086815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df906126c4565b60405180910390fd5b6000600560008681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008351141561066057806040015163ffffffff1667ffffffffffffffff8111156105b6576105b5611f4d565b5b6040519080825280602002602001820160405280156105e45781602001602082028036833780820191505090505b50925060005b816040015163ffffffff1681101561065a57858160405160200161060f9291906126e4565b6040516020818303038152906040528051906020012060001c84828151811061063b5761063a61270d565b5b60200260200101818152505080806106529061276b565b9150506105ea565b506106a5565b806040015163ffffffff168351146106a4576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b87866040516024016106c3929190612872565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610754919061291c565b60006040518083038160008787f1925050503d8060008114610792576040519150601f19603f3d011682016040523d82523d6000602084013e610797565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a876107d89190612933565b6107e29190612967565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff1661081b91906129c1565b9050806bffffffffffffffffffffffff1660036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156108b9576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff1661090e9190612a17565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a83856040516109cf93929190612a4b565b60405180910390a2505050505050505050565b6000660e35fa931a0000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008433610a238282611b97565b610a59576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b0a576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000815480929190610b1f9061276b565b919050559050600060026000815480929190610b3a9061276b565b91905055905060405180606001604052808a67ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff168152506005600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d604051610c5e959493929190612a82565b60405180910390a48194505050505095945050505050565b6000806000806000806000806000620186a080620186a080620186a0600080600080985098509850985098509850985098509850909192939495969798565b7f000000000000000000000000000000000000000000000000000000000000000081565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d90576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0057806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401610df79190612ad5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff16600460008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805490501415610e88576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e928484611b97565b15610e9c57610f67565b600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc384604051610f5e9190612ad5565b60405180910390a25b50505050565b610fc18282600067ffffffffffffffff811115610f8d57610f8c611f4d565b5b604051908082528060200260200182016040528015610fbb5781602001602082028036833780820191505090505b5061046b565b5050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790612658565b60405180910390fd5b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b7576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112757806040517fd8a3fb5200000000000000000000000000000000000000000000000000000000815260040161111e9190612ad5565b60405180910390fd5b83836111338282611b97565b611169576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060005b8180549050811015611321578673ffffffffffffffffffffffffffffffffffffffff168282815481106111cd576111cc61270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130e57600082600184805490506112289190612933565b815481106112395761123861270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061127a5761127961270d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806112d3576112d2612af0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550611321565b80806113199061276b565b915050611197565b508667ffffffffffffffff167ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc8760405161135c9190612ad5565b60405180910390a250505050505050565b600080600081819054906101000a900467ffffffffffffffff168092919061139490612b1f565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf336040516115009190612ad5565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115fe576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008967ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208080548060200260200160405190810160405280929190818152602001828054801561173657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116ec575b5050505050905093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117fd576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166118959190612b50565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846118fc9190612b50565b60405161190a929190612bcd565b60405180910390a2505050565b6000806000806004622625a0610a8c618205935093509350935090919293565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5e57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611a559190612ad5565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16604051611adc929190612bf6565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90612658565b60405180910390fd5b600080600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bf7575b5050505050905060005b8151811015611cc0578373ffffffffffffffffffffffffffffffffffffffff16828281518110611c7e57611c7d61270d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611cad57600192505050611cc7565b8080611cb89061276b565b915050611c4b565b5060009150505b92915050565b600061ffff82169050919050565b611ce481611ccd565b82525050565b600063ffffffff82169050919050565b611d0381611cea565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611d4881611d35565b82525050565b6000611d5a8383611d3f565b60208301905092915050565b6000602082019050919050565b6000611d7e82611d09565b611d888185611d14565b9350611d9383611d25565b8060005b83811015611dc4578151611dab8882611d4e565b9750611db683611d66565b925050600181019050611d97565b5085935050505092915050565b6000606082019050611de66000830186611cdb565b611df36020830185611cfa565b8181036040830152611e058184611d73565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b611e4081611e23565b8114611e4b57600080fd5b50565b600081359050611e5d81611e37565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e8e82611e63565b9050919050565b611e9e81611e83565b8114611ea957600080fd5b50565b600081359050611ebb81611e95565b92915050565b60008060408385031215611ed857611ed7611e19565b5b6000611ee685828601611e4e565b9250506020611ef785828601611eac565b9150509250929050565b6000819050919050565b611f1481611f01565b8114611f1f57600080fd5b50565b600081359050611f3181611f0b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8582611f3c565b810181811067ffffffffffffffff82111715611fa457611fa3611f4d565b5b80604052505050565b6000611fb7611e0f565b9050611fc38282611f7c565b919050565b600067ffffffffffffffff821115611fe357611fe2611f4d565b5b602082029050602081019050919050565b600080fd5b600061200c61200784611fc8565b611fad565b9050808382526020820190506020840283018581111561202f5761202e611ff4565b5b835b8181101561205857806120448882611f22565b845260208401935050602081019050612031565b5050509392505050565b600082601f83011261207757612076611f37565b5b8135612087848260208601611ff9565b91505092915050565b6000806000606084860312156120a9576120a8611e19565b5b60006120b786828701611f22565b93505060206120c886828701611eac565b925050604084013567ffffffffffffffff8111156120e9576120e8611e1e565b5b6120f586828701612062565b9150509250925092565b6000819050919050565b612112816120ff565b82525050565b600060208201905061212d6000830184612109565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61215481612133565b82525050565b600060208201905061216f600083018461214b565b92915050565b61217e81611d35565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b6121aa81611ccd565b81146121b557600080fd5b50565b6000813590506121c7816121a1565b92915050565b6121d681611cea565b81146121e157600080fd5b50565b6000813590506121f3816121cd565b92915050565b600080600080600060a0868803121561221557612214611e19565b5b60006122238882890161218c565b955050602061223488828901611e4e565b9450506040612245888289016121b8565b9350506060612256888289016121e4565b9250506080612267888289016121e4565b9150509295509295909350565b61227d81611f01565b82525050565b60006020820190506122986000830184612274565b92915050565b600062ffffff82169050919050565b6122b68161229e565b82525050565b6000610120820190506122d2600083018c611cfa565b6122df602083018b611cfa565b6122ec604083018a611cfa565b6122f96060830189611cfa565b6123066080830188611cfa565b61231360a08301876122ad565b61232060c08301866122ad565b61232d60e08301856122ad565b61233b6101008301846122ad565b9a9950505050505050505050565b600060208201905061235e6000830184611cdb565b92915050565b6000806040838503121561237b5761237a611e19565b5b600061238985828601611f22565b925050602061239a85828601611eac565b9150509250929050565b6000602082840312156123ba576123b9611e19565b5b60006123c884828501611e4e565b91505092915050565b6123da81611e23565b82525050565b60006020820190506123f560008301846123d1565b92915050565b61240481611e83565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61243f81611e83565b82525050565b60006124518383612436565b60208301905092915050565b6000602082019050919050565b60006124758261240a565b61247f8185612415565b935061248a83612426565b8060005b838110156124bb5781516124a28882612445565b97506124ad8361245d565b92505060018101905061248e565b5085935050505092915050565b60006080820190506124dd600083018761214b565b6124ea60208301866123d1565b6124f760408301856123fb565b8181036060830152612509818461246a565b905095945050505050565b61251d81612133565b811461252857600080fd5b50565b60008135905061253a81612514565b92915050565b6000806040838503121561255757612556611e19565b5b600061256585828601611e4e565b92505060206125768582860161252b565b9150509250929050565b60006080820190506125956000830187611cdb565b6125a26020830186611cfa565b6125af6040830185611cfa565b6125bc6060830184611cfa565b95945050505050565b60008115159050919050565b6125da816125c5565b82525050565b60006020820190506125f560008301846125d1565b92915050565b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b6000612642600f836125fb565b915061264d8261260c565b602082019050919050565b6000602082019050818103600083015261267181612635565b9050919050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b60006126ae6013836125fb565b91506126b982612678565b602082019050919050565b600060208201905081810360008301526126dd816126a1565b9050919050565b60006040820190506126f96000830185612274565b6127066020830184612274565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061277682611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127a9576127a861273c565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127e981611f01565b82525050565b60006127fb83836127e0565b60208301905092915050565b6000602082019050919050565b600061281f826127b4565b61282981856127bf565b9350612834836127d0565b8060005b8381101561286557815161284c88826127ef565b975061285783612807565b925050600181019050612838565b5085935050505092915050565b60006040820190506128876000830185612274565b81810360208301526128998184612814565b90509392505050565b600081519050919050565b600081905092915050565b60005b838110156128d65780820151818401526020810190506128bb565b838111156128e5576000848401525b50505050565b60006128f6826128a2565b61290081856128ad565b93506129108185602086016128b8565b80840191505092915050565b600061292882846128eb565b915081905092915050565b600061293e82611f01565b915061294983611f01565b92508282101561295c5761295b61273c565b5b828203905092915050565b600061297282611f01565b915061297d83611f01565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129b6576129b561273c565b5b828202905092915050565b60006129cc82611f01565b91506129d783611f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a0c57612a0b61273c565b5b828201905092915050565b6000612a2282612133565b9150612a2d83612133565b925082821015612a4057612a3f61273c565b5b828203905092915050565b6000606082019050612a606000830186612274565b612a6d602083018561214b565b612a7a60408301846125d1565b949350505050565b600060a082019050612a976000830188612274565b612aa46020830187612274565b612ab16040830186611cdb565b612abe6060830185611cfa565b612acb6080830184611cfa565b9695505050505050565b6000602082019050612aea60008301846123fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612b2a82611e23565b915067ffffffffffffffff821415612b4557612b4461273c565b5b600182019050919050565b6000612b5b82612133565b9150612b6683612133565b9250826bffffffffffffffffffffffff03821115612b8757612b8661273c565b5b828201905092915050565b6000819050919050565b6000612bb7612bb2612bad84612133565b612b92565b611f01565b9050919050565b612bc781612b9c565b82525050565b6000604082019050612be26000830185612bbe565b612bef6020830184612bbe565b9392505050565b6000604082019050612c0b60008301856123fb565b612c186020830184612bbe565b939250505056fea26469706673582212206c9869b86eeddb970beee3853cfd65144c2d7b88be84beabe162f4d22dc5fde864736f6c63430008080033","opcodes":"PUSH1 0xE0 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH2 0xFFFF AND PUSH1 0xC0 SWAP1 PUSH2 0xFFFF AND PUSH1 0xF0 SHL DUP2 MSTORE POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x64 PUSH1 0x2 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2DE1 CODESIZE SUB DUP1 PUSH3 0x2DE1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x53 SWAP2 SWAP1 PUSH3 0xF7 JUMP JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 SHL DUP2 MSTORE POP POP POP POP PUSH3 0x13E JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD1 DUP2 PUSH3 0xAE JUMP JUMPDEST DUP2 EQ PUSH3 0xDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0xF1 DUP2 PUSH3 0xC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x111 JUMPI PUSH3 0x110 PUSH3 0xA9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x121 DUP6 DUP3 DUP7 ADD PUSH3 0xE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x134 DUP6 DUP3 DUP7 ADD PUSH3 0xE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 SHR PUSH1 0xA0 MLOAD PUSH1 0xA0 SHR PUSH1 0xC0 MLOAD PUSH1 0xF0 SHR PUSH2 0x2C55 PUSH3 0x18C PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xCB7 ADD MSTORE PUSH2 0xE02 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x79F ADD MSTORE PUSH2 0x1524 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7E4 ADD MSTORE PUSH2 0x9F3 ADD MSTORE PUSH2 0x2C55 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3A0 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x2E4 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x5D3B1D30 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x254 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1A6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1937 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3F5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x424 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60F SWAP3 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x652 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP PUSH2 0x6A5 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x797 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER PUSH2 0xA23 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3A SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xC5E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE00 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE92 DUP5 DUP5 PUSH2 0x1B97 JUMP JUMPDEST ISZERO PUSH2 0xE9C JUMPI PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFC1 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8C PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFBB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1133 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1321 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x2AF0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x1321 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1319 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1197 JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1736 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x16EC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A5E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1ADC SWAP3 SWAP2 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CC0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CB8 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E DUP3 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D88 DUP2 DUP6 PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D93 DUP4 PUSH2 0x1D25 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP2 MLOAD PUSH2 0x1DAB DUP9 DUP3 PUSH2 0x1D4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB6 DUP4 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D97 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E05 DUP2 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E40 DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBB DUP2 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1F3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC3 DUP3 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200C PUSH2 0x2007 DUP5 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2058 JUMPI DUP1 PUSH2 0x2044 DUP9 DUP3 PUSH2 0x1F22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2087 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E9 JUMPI PUSH2 0x20E8 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x20F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2112 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C7 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D6 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP2 EQ PUSH2 0x21E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F3 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2223 DUP9 DUP3 DUP10 ADD PUSH2 0x218C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2234 DUP9 DUP3 DUP10 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2245 DUP9 DUP3 DUP10 ADD PUSH2 0x21B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2256 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2267 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B6 DUP2 PUSH2 0x229E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x22D2 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22EC PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2306 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2313 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2320 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x232D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x233B PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x22AD JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237B JUMPI PUSH2 0x237A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2389 DUP6 DUP3 DUP7 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239A DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2404 DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243F DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2451 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x247F DUP2 DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP4 POP PUSH2 0x248A DUP4 PUSH2 0x2426 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24BB JUMPI DUP2 MLOAD PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST SWAP8 POP PUSH2 0x24AD DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x24EA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x24F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x251D DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2576 DUP6 DUP3 DUP7 ADD PUSH2 0x252B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2595 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x25A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DA DUP2 PUSH2 0x25C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 PUSH1 0xF DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2671 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x13 DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FB DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2829 DUP2 DUP6 PUSH2 0x27BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2834 DUP4 PUSH2 0x27D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2865 JUMPI DUP2 MLOAD PUSH2 0x284C DUP9 DUP3 PUSH2 0x27EF JUMP JUMPDEST SWAP8 POP PUSH2 0x2857 DUP4 PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2838 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2899 DUP2 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28B8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x29B5 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D7 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x2A7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A97 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AA4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AB1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x2ABE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2ACB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B45 JUMPI PUSH2 0x2B44 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B66 DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 PUSH2 0x2BB2 PUSH2 0x2BAD DUP5 PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2B92 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC7 DUP2 PUSH2 0x2B9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x2C18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x9869B86EEDDB970BEEE3853CFD PUSH6 0x144C2D7B88BE DUP5 0xBE 0xAB 0xE1 PUSH3 0xF4D22D 0xC5 REVERT 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"254:9107:4:-:0;;;435:3;395:43;;;;;;;;;;;1404:1;1378:27;;1433:3;1409:27;;1826:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1894:8;1883:19;;;;;;;;;;;;1925:13;1908:30;;;;;;;;;;;;1826:117;;254:9107;;88:117:26;197:1;194;187:12;334:109;370:7;410:26;403:5;399:38;388:49;;334:109;;;:::o;449:120::-;521:23;538:5;521:23;:::i;:::-;514:5;511:34;501:62;;559:1;556;549:12;501:62;449:120;:::o;575:141::-;631:5;662:6;656:13;647:22;;678:32;704:5;678:32;:::i;:::-;575:141;;;;:::o;722:503::-;799:6;807;856:2;844:9;835:7;831:23;827:32;824:119;;;862:79;;:::i;:::-;824:119;982:1;1007:63;1062:7;1053:6;1042:9;1038:22;1007:63;:::i;:::-;997:73;;953:127;1119:2;1145:63;1200:7;1191:6;1180:9;1176:22;1145:63;:::i;:::-;1135:73;;1090:128;722:503;;;;;:::o;254:9107:4:-;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BASE_FEE_303":{"entryPoint":2545,"id":303,"parameterSlots":0,"returnSlots":0},"@GAS_PRICE_LINK_305":{"entryPoint":5410,"id":305,"parameterSlots":0,"returnSlots":0},"@MAX_CONSUMERS_308":{"entryPoint":3253,"id":308,"parameterSlots":0,"returnSlots":0},"@acceptSubscriptionOwnerTransfer_1143":{"entryPoint":4037,"id":1143,"parameterSlots":1,"returnSlots":0},"@addConsumer_989":{"entryPoint":3289,"id":989,"parameterSlots":2,"returnSlots":0},"@cancelSubscription_892":{"entryPoint":6455,"id":892,"parameterSlots":2,"returnSlots":0},"@consumerIsAdded_478":{"entryPoint":7063,"id":478,"parameterSlots":2,"returnSlots":1},"@createSubscription_821":{"entryPoint":4973,"id":821,"parameterSlots":0,"returnSlots":1},"@fulfillRandomWordsWithOverride_678":{"entryPoint":1131,"id":678,"parameterSlots":3,"returnSlots":0},"@fulfillRandomWords_515":{"entryPoint":3949,"id":515,"parameterSlots":2,"returnSlots":0},"@fundSubscription_723":{"entryPoint":5964,"id":723,"parameterSlots":2,"returnSlots":0},"@getConfig_1078":{"entryPoint":6423,"id":1078,"parameterSlots":0,"returnSlots":4},"@getFallbackWeiPerUnitLink_1119":{"entryPoint":2530,"id":1119,"parameterSlots":0,"returnSlots":1},"@getFeeConfig_1111":{"entryPoint":3190,"id":1111,"parameterSlots":0,"returnSlots":9},"@getRequestConfig_947":{"entryPoint":976,"id":947,"parameterSlots":0,"returnSlots":3},"@getSubscription_865":{"entryPoint":5446,"id":865,"parameterSlots":1,"returnSlots":4},"@pendingRequestExists_1156":{"entryPoint":7002,"id":1156,"parameterSlots":1,"returnSlots":1},"@removeConsumer_1060":{"entryPoint":4096,"id":1060,"parameterSlots":2,"returnSlots":0},"@requestRandomWords_793":{"entryPoint":2581,"id":793,"parameterSlots":5,"returnSlots":1},"@requestSubscriptionOwnerTransfer_1132":{"entryPoint":1072,"id":1132,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8185,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8290,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":8588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint16":{"entryPoint":8632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32":{"entryPoint":8676,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64":{"entryPoint":7758,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint96":{"entryPoint":9515,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32":{"entryPoint":8697,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_address":{"entryPoint":9060,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8336,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint64":{"entryPoint":9124,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint64t_address":{"entryPoint":7873,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint64t_uint96":{"entryPoint":9536,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_address_to_t_address":{"entryPoint":9285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":7502,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10223,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":9270,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":9211,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":9322,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":7539,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9681,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":7487,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10475,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8457,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack":{"entryPoint":9781,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack":{"entryPoint":9889,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":7387,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint24_to_t_uint24_fromStack":{"entryPoint":8877,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10208,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8820,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":7418,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":9169,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint256_fromStack":{"entryPoint":11198,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint96_to_t_uint96_fromStack":{"entryPoint":8523,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10524,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10965,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":11254,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9696,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8472,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9816,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9924,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed":{"entryPoint":9033,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":7633,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":9600,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10354,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":9956,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":10882,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed":{"entryPoint":10827,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed":{"entryPoint":8892,"id":null,"parameterSlots":10,"returnSlots":1},"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed":{"entryPoint":9184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed":{"entryPoint":8538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":9416,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11213,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":8109,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7695,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":8136,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9254,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7461,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10192,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9226,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7433,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10164,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":10402,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9309,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":7526,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10247,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack":{"entryPoint":9237,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":7444,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10175,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10413,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9723,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10689,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint96":{"entryPoint":11088,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10599,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10547,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint96":{"entryPoint":10775,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7811,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9669,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7477,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":8447,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":7373,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7779,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint24":{"entryPoint":8862,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7937,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":7402,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":7715,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint96":{"entryPoint":8499,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint96_to_t_uint256":{"entryPoint":11164,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":10424,"id":null,"parameterSlots":3,"returnSlots":0},"finalize_allocation":{"entryPoint":8060,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11154,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":10091,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint64":{"entryPoint":11039,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10044,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10992,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":9997,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8013,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7991,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":8180,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7710,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7705,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7996,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9":{"entryPoint":9740,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0":{"entryPoint":9848,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7829,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":8565,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint16":{"entryPoint":8609,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7947,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":8653,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":7735,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint96":{"entryPoint":9492,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:28291:26","statements":[{"body":{"nodeType":"YulBlock","src":"51:45:26","statements":[{"nodeType":"YulAssignment","src":"61:29:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"76:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"83:6:26","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"72:3:26"},"nodeType":"YulFunctionCall","src":"72:18:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"61:7:26"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"43:7:26","type":""}],"src":"7:89:26"},{"body":{"nodeType":"YulBlock","src":"165:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"182:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"204:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"187:16:26"},"nodeType":"YulFunctionCall","src":"187:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"175:6:26"},"nodeType":"YulFunctionCall","src":"175:36:26"},"nodeType":"YulExpressionStatement","src":"175:36:26"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"153:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"160:3:26","type":""}],"src":"102:115:26"},{"body":{"nodeType":"YulBlock","src":"267:49:26","statements":[{"nodeType":"YulAssignment","src":"277:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"292:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"299:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"288:3:26"},"nodeType":"YulFunctionCall","src":"288:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"277:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"249:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"259:7:26","type":""}],"src":"223:93:26"},{"body":{"nodeType":"YulBlock","src":"385:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"402:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"424:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"407:16:26"},"nodeType":"YulFunctionCall","src":"407:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"395:6:26"},"nodeType":"YulFunctionCall","src":"395:36:26"},"nodeType":"YulExpressionStatement","src":"395:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"373:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"380:3:26","type":""}],"src":"322:115:26"},{"body":{"nodeType":"YulBlock","src":"517:40:26","statements":[{"nodeType":"YulAssignment","src":"528:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"544:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"538:5:26"},"nodeType":"YulFunctionCall","src":"538:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"528:6:26"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"500:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"510:6:26","type":""}],"src":"443:114:26"},{"body":{"nodeType":"YulBlock","src":"674:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"691:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"696:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"684:6:26"},"nodeType":"YulFunctionCall","src":"684:19:26"},"nodeType":"YulExpressionStatement","src":"684:19:26"},{"nodeType":"YulAssignment","src":"712:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"731:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"736:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:26"},"nodeType":"YulFunctionCall","src":"727:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"712:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"646:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"651:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"662:11:26","type":""}],"src":"563:184:26"},{"body":{"nodeType":"YulBlock","src":"825:60:26","statements":[{"nodeType":"YulAssignment","src":"835:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"843:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"835:4:26"}]},{"nodeType":"YulAssignment","src":"856:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"868:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"873:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"864:3:26"},"nodeType":"YulFunctionCall","src":"864:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"856:4:26"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"812:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"820:4:26","type":""}],"src":"753:132:26"},{"body":{"nodeType":"YulBlock","src":"936:32:26","statements":[{"nodeType":"YulAssignment","src":"946:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"957:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"946:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"918:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"928:7:26","type":""}],"src":"891:77:26"},{"body":{"nodeType":"YulBlock","src":"1029:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1046:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1069:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1051:17:26"},"nodeType":"YulFunctionCall","src":"1051:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1039:6:26"},"nodeType":"YulFunctionCall","src":"1039:37:26"},"nodeType":"YulExpressionStatement","src":"1039:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1017:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1024:3:26","type":""}],"src":"974:108:26"},{"body":{"nodeType":"YulBlock","src":"1168:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1212:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"1220:3:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1178:33:26"},"nodeType":"YulFunctionCall","src":"1178:46:26"},"nodeType":"YulExpressionStatement","src":"1178:46:26"},{"nodeType":"YulAssignment","src":"1233:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1251:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1256:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1247:3:26"},"nodeType":"YulFunctionCall","src":"1247:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"1233:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"1141:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1149:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"1157:10:26","type":""}],"src":"1088:179:26"},{"body":{"nodeType":"YulBlock","src":"1348:38:26","statements":[{"nodeType":"YulAssignment","src":"1358:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1370:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1375:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1366:3:26"},"nodeType":"YulFunctionCall","src":"1366:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"1358:4:26"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1335:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"1343:4:26","type":""}],"src":"1273:113:26"},{"body":{"nodeType":"YulBlock","src":"1546:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1556:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1618:5:26"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1570:47:26"},"nodeType":"YulFunctionCall","src":"1570:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"1560:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1633:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1714:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1719:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1640:73:26"},"nodeType":"YulFunctionCall","src":"1640:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1633:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"1735:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1800:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"1750:49:26"},"nodeType":"YulFunctionCall","src":"1750:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"1739:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1815:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"1829:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"1819:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1905:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1919:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"1946:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1940:5:26"},"nodeType":"YulFunctionCall","src":"1940:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"1923:13:26","type":""}]},{"nodeType":"YulAssignment","src":"1966:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"2017:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2032:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"1973:43:26"},"nodeType":"YulFunctionCall","src":"1973:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1966:3:26"}]},{"nodeType":"YulAssignment","src":"2049:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2112:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2059:52:26"},"nodeType":"YulFunctionCall","src":"2059:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"2049:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1867:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1870:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1864:2:26"},"nodeType":"YulFunctionCall","src":"1864:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1878:18:26","statements":[{"nodeType":"YulAssignment","src":"1880:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1889:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1892:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1885:3:26"},"nodeType":"YulFunctionCall","src":"1885:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1880:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1849:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1851:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1860:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1855:1:26","type":""}]}]},"src":"1845:284:26"},{"nodeType":"YulAssignment","src":"2138:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"2145:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2138:3:26"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1532:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1541:3:26","type":""}],"src":"1422:732:26"},{"body":{"nodeType":"YulBlock","src":"2360:385:26","statements":[{"nodeType":"YulAssignment","src":"2370:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2382:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2393:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2378:3:26"},"nodeType":"YulFunctionCall","src":"2378:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2370:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2448:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2461:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2472:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2457:3:26"},"nodeType":"YulFunctionCall","src":"2457:17:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"2406:41:26"},"nodeType":"YulFunctionCall","src":"2406:69:26"},"nodeType":"YulExpressionStatement","src":"2406:69:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2527:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2540:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2551:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2536:3:26"},"nodeType":"YulFunctionCall","src":"2536:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"2485:41:26"},"nodeType":"YulFunctionCall","src":"2485:70:26"},"nodeType":"YulExpressionStatement","src":"2485:70:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2576:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2587:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2572:3:26"},"nodeType":"YulFunctionCall","src":"2572:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2596:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2602:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2592:3:26"},"nodeType":"YulFunctionCall","src":"2592:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2565:6:26"},"nodeType":"YulFunctionCall","src":"2565:48:26"},"nodeType":"YulExpressionStatement","src":"2565:48:26"},{"nodeType":"YulAssignment","src":"2622:116:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2724:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2733:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2630:93:26"},"nodeType":"YulFunctionCall","src":"2630:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2622:4:26"}]}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2316:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2328:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2336:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2344:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2355:4:26","type":""}],"src":"2160:585:26"},{"body":{"nodeType":"YulBlock","src":"2791:35:26","statements":[{"nodeType":"YulAssignment","src":"2801:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2817:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2811:5:26"},"nodeType":"YulFunctionCall","src":"2811:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2801:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2784:6:26","type":""}],"src":"2751:75:26"},{"body":{"nodeType":"YulBlock","src":"2921:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2941:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2931:6:26"},"nodeType":"YulFunctionCall","src":"2931:12:26"},"nodeType":"YulExpressionStatement","src":"2931:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"2832:117:26"},{"body":{"nodeType":"YulBlock","src":"3044:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3061:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3064:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3054:6:26"},"nodeType":"YulFunctionCall","src":"3054:12:26"},"nodeType":"YulExpressionStatement","src":"3054:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"2955:117:26"},{"body":{"nodeType":"YulBlock","src":"3122:57:26","statements":[{"nodeType":"YulAssignment","src":"3132:41:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3147:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3154:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3143:3:26"},"nodeType":"YulFunctionCall","src":"3143:30:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3132:7:26"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3104:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3114:7:26","type":""}],"src":"3078:101:26"},{"body":{"nodeType":"YulBlock","src":"3227:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"3283:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3292:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3295:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3285:6:26"},"nodeType":"YulFunctionCall","src":"3285:12:26"},"nodeType":"YulExpressionStatement","src":"3285:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3250:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3274:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"3257:16:26"},"nodeType":"YulFunctionCall","src":"3257:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3247:2:26"},"nodeType":"YulFunctionCall","src":"3247:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3240:6:26"},"nodeType":"YulFunctionCall","src":"3240:42:26"},"nodeType":"YulIf","src":"3237:62:26"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3220:5:26","type":""}],"src":"3185:120:26"},{"body":{"nodeType":"YulBlock","src":"3362:86:26","statements":[{"nodeType":"YulAssignment","src":"3372:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3394:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3381:12:26"},"nodeType":"YulFunctionCall","src":"3381:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3372:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3436:5:26"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"3410:25:26"},"nodeType":"YulFunctionCall","src":"3410:32:26"},"nodeType":"YulExpressionStatement","src":"3410:32:26"}]},"name":"abi_decode_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3340:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3348:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3356:5:26","type":""}],"src":"3311:137:26"},{"body":{"nodeType":"YulBlock","src":"3499:81:26","statements":[{"nodeType":"YulAssignment","src":"3509:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3524:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3531:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3520:3:26"},"nodeType":"YulFunctionCall","src":"3520:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3509:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3481:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3491:7:26","type":""}],"src":"3454:126:26"},{"body":{"nodeType":"YulBlock","src":"3631:51:26","statements":[{"nodeType":"YulAssignment","src":"3641:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3670:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3652:17:26"},"nodeType":"YulFunctionCall","src":"3652:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3641:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3613:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3623:7:26","type":""}],"src":"3586:96:26"},{"body":{"nodeType":"YulBlock","src":"3731:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3788:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3797:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3800:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3790:6:26"},"nodeType":"YulFunctionCall","src":"3790:12:26"},"nodeType":"YulExpressionStatement","src":"3790:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3754:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3779:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3761:17:26"},"nodeType":"YulFunctionCall","src":"3761:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3751:2:26"},"nodeType":"YulFunctionCall","src":"3751:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3744:6:26"},"nodeType":"YulFunctionCall","src":"3744:43:26"},"nodeType":"YulIf","src":"3741:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3724:5:26","type":""}],"src":"3688:122:26"},{"body":{"nodeType":"YulBlock","src":"3868:87:26","statements":[{"nodeType":"YulAssignment","src":"3878:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3900:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3887:12:26"},"nodeType":"YulFunctionCall","src":"3887:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3878:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3943:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3916:26:26"},"nodeType":"YulFunctionCall","src":"3916:33:26"},"nodeType":"YulExpressionStatement","src":"3916:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3846:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3854:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3862:5:26","type":""}],"src":"3816:139:26"},{"body":{"nodeType":"YulBlock","src":"4043:390:26","statements":[{"body":{"nodeType":"YulBlock","src":"4089:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4091:77:26"},"nodeType":"YulFunctionCall","src":"4091:79:26"},"nodeType":"YulExpressionStatement","src":"4091:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4064:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4060:3:26"},"nodeType":"YulFunctionCall","src":"4060:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4085:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4056:3:26"},"nodeType":"YulFunctionCall","src":"4056:32:26"},"nodeType":"YulIf","src":"4053:119:26"},{"nodeType":"YulBlock","src":"4182:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4197:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4211:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4201:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4226:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4260:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4271:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4256:3:26"},"nodeType":"YulFunctionCall","src":"4256:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4280:7:26"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"4236:19:26"},"nodeType":"YulFunctionCall","src":"4236:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4226:6:26"}]}]},{"nodeType":"YulBlock","src":"4308:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4323:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4337:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4327:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4353:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4388:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4399:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4384:3:26"},"nodeType":"YulFunctionCall","src":"4384:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4408:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4363:20:26"},"nodeType":"YulFunctionCall","src":"4363:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4353:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint64t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4016:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4028:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4036:6:26","type":""}],"src":"3961:472:26"},{"body":{"nodeType":"YulBlock","src":"4484:32:26","statements":[{"nodeType":"YulAssignment","src":"4494:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"4505:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4494:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4466:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4476:7:26","type":""}],"src":"4439:77:26"},{"body":{"nodeType":"YulBlock","src":"4565:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4622:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4631:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4634:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4624:6:26"},"nodeType":"YulFunctionCall","src":"4624:12:26"},"nodeType":"YulExpressionStatement","src":"4624:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4588:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4613:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4595:17:26"},"nodeType":"YulFunctionCall","src":"4595:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4585:2:26"},"nodeType":"YulFunctionCall","src":"4585:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4578:6:26"},"nodeType":"YulFunctionCall","src":"4578:43:26"},"nodeType":"YulIf","src":"4575:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4558:5:26","type":""}],"src":"4522:122:26"},{"body":{"nodeType":"YulBlock","src":"4702:87:26","statements":[{"nodeType":"YulAssignment","src":"4712:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4734:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4721:12:26"},"nodeType":"YulFunctionCall","src":"4721:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4712:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4777:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"4750:26:26"},"nodeType":"YulFunctionCall","src":"4750:33:26"},"nodeType":"YulExpressionStatement","src":"4750:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4680:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4688:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4696:5:26","type":""}],"src":"4650:139:26"},{"body":{"nodeType":"YulBlock","src":"4884:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4901:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4904:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4894:6:26"},"nodeType":"YulFunctionCall","src":"4894:12:26"},"nodeType":"YulExpressionStatement","src":"4894:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4795:117:26"},{"body":{"nodeType":"YulBlock","src":"4966:54:26","statements":[{"nodeType":"YulAssignment","src":"4976:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4994:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"5001:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4990:3:26"},"nodeType":"YulFunctionCall","src":"4990:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5010:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5006:3:26"},"nodeType":"YulFunctionCall","src":"5006:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4986:3:26"},"nodeType":"YulFunctionCall","src":"4986:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4976:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4949:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4959:6:26","type":""}],"src":"4918:102:26"},{"body":{"nodeType":"YulBlock","src":"5054:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5071:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5074:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5064:6:26"},"nodeType":"YulFunctionCall","src":"5064:88:26"},"nodeType":"YulExpressionStatement","src":"5064:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5168:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5171:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5161:6:26"},"nodeType":"YulFunctionCall","src":"5161:15:26"},"nodeType":"YulExpressionStatement","src":"5161:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5192:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5195:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5185:6:26"},"nodeType":"YulFunctionCall","src":"5185:15:26"},"nodeType":"YulExpressionStatement","src":"5185:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5026:180:26"},{"body":{"nodeType":"YulBlock","src":"5255:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5265:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5287:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5317:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5295:21:26"},"nodeType":"YulFunctionCall","src":"5295:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5283:3:26"},"nodeType":"YulFunctionCall","src":"5283:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5269:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5434:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5436:16:26"},"nodeType":"YulFunctionCall","src":"5436:18:26"},"nodeType":"YulExpressionStatement","src":"5436:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5377:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"5389:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5374:2:26"},"nodeType":"YulFunctionCall","src":"5374:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5413:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5425:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5410:2:26"},"nodeType":"YulFunctionCall","src":"5410:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5371:2:26"},"nodeType":"YulFunctionCall","src":"5371:62:26"},"nodeType":"YulIf","src":"5368:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5472:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5476:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5465:6:26"},"nodeType":"YulFunctionCall","src":"5465:22:26"},"nodeType":"YulExpressionStatement","src":"5465:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5241:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"5249:4:26","type":""}],"src":"5212:281:26"},{"body":{"nodeType":"YulBlock","src":"5540:88:26","statements":[{"nodeType":"YulAssignment","src":"5550:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5560:18:26"},"nodeType":"YulFunctionCall","src":"5560:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5550:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5609:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"5617:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5589:19:26"},"nodeType":"YulFunctionCall","src":"5589:33:26"},"nodeType":"YulExpressionStatement","src":"5589:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5524:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5533:6:26","type":""}],"src":"5499:129:26"},{"body":{"nodeType":"YulBlock","src":"5716:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"5821:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5823:16:26"},"nodeType":"YulFunctionCall","src":"5823:18:26"},"nodeType":"YulExpressionStatement","src":"5823:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5793:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5801:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5790:2:26"},"nodeType":"YulFunctionCall","src":"5790:30:26"},"nodeType":"YulIf","src":"5787:56:26"},{"nodeType":"YulAssignment","src":"5853:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5865:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5873:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5861:3:26"},"nodeType":"YulFunctionCall","src":"5861:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5853:4:26"}]},{"nodeType":"YulAssignment","src":"5915:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5927:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5933:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5923:3:26"},"nodeType":"YulFunctionCall","src":"5923:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5915:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5700:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5711:4:26","type":""}],"src":"5634:311:26"},{"body":{"nodeType":"YulBlock","src":"6040:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6057:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6060:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6050:6:26"},"nodeType":"YulFunctionCall","src":"6050:12:26"},"nodeType":"YulExpressionStatement","src":"6050:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5951:117:26"},{"body":{"nodeType":"YulBlock","src":"6193:608:26","statements":[{"nodeType":"YulAssignment","src":"6203:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6285:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6228:56:26"},"nodeType":"YulFunctionCall","src":"6228:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6212:15:26"},"nodeType":"YulFunctionCall","src":"6212:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6203:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"6302:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"6313:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6306:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6335:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"6342:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6328:6:26"},"nodeType":"YulFunctionCall","src":"6328:21:26"},"nodeType":"YulExpressionStatement","src":"6328:21:26"},{"nodeType":"YulAssignment","src":"6358:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6369:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6376:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6365:3:26"},"nodeType":"YulFunctionCall","src":"6365:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6358:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"6391:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6409:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6421:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6429:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6417:3:26"},"nodeType":"YulFunctionCall","src":"6417:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6405:3:26"},"nodeType":"YulFunctionCall","src":"6405:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6395:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6463:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6477:77:26"},"nodeType":"YulFunctionCall","src":"6477:79:26"},"nodeType":"YulExpressionStatement","src":"6477:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6450:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"6458:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6447:2:26"},"nodeType":"YulFunctionCall","src":"6447:15:26"},"nodeType":"YulIf","src":"6444:122:26"},{"body":{"nodeType":"YulBlock","src":"6651:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6666:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"6684:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6670:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6708:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6734:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"6746:3:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6713:20:26"},"nodeType":"YulFunctionCall","src":"6713:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6701:6:26"},"nodeType":"YulFunctionCall","src":"6701:50:26"},"nodeType":"YulExpressionStatement","src":"6701:50:26"},{"nodeType":"YulAssignment","src":"6764:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6775:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6780:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6771:3:26"},"nodeType":"YulFunctionCall","src":"6771:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6764:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6604:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6609:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6601:2:26"},"nodeType":"YulFunctionCall","src":"6601:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6617:25:26","statements":[{"nodeType":"YulAssignment","src":"6619:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6630:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6635:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6626:3:26"},"nodeType":"YulFunctionCall","src":"6626:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6619:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"6579:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6581:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"6592:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6585:3:26","type":""}]}]},"src":"6575:220:26"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6163:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6171:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6179:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6187:5:26","type":""}],"src":"6091:710:26"},{"body":{"nodeType":"YulBlock","src":"6901:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"6950:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6952:77:26"},"nodeType":"YulFunctionCall","src":"6952:79:26"},"nodeType":"YulExpressionStatement","src":"6952:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6929:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6937:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6925:3:26"},"nodeType":"YulFunctionCall","src":"6925:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"6944:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6921:3:26"},"nodeType":"YulFunctionCall","src":"6921:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6914:6:26"},"nodeType":"YulFunctionCall","src":"6914:35:26"},"nodeType":"YulIf","src":"6911:122:26"},{"nodeType":"YulVariableDeclaration","src":"7042:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7069:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7056:12:26"},"nodeType":"YulFunctionCall","src":"7056:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7046:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7085:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7161:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7169:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7157:3:26"},"nodeType":"YulFunctionCall","src":"7157:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"7176:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"7184:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7094:62:26"},"nodeType":"YulFunctionCall","src":"7094:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7085:5:26"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6879:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6887:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6895:5:26","type":""}],"src":"6824:370:26"},{"body":{"nodeType":"YulBlock","src":"7325:704:26","statements":[{"body":{"nodeType":"YulBlock","src":"7371:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7373:77:26"},"nodeType":"YulFunctionCall","src":"7373:79:26"},"nodeType":"YulExpressionStatement","src":"7373:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7346:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7355:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7342:3:26"},"nodeType":"YulFunctionCall","src":"7342:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7367:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7338:3:26"},"nodeType":"YulFunctionCall","src":"7338:32:26"},"nodeType":"YulIf","src":"7335:119:26"},{"nodeType":"YulBlock","src":"7464:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7479:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7493:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7483:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7508:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7543:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7554:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7539:3:26"},"nodeType":"YulFunctionCall","src":"7539:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7563:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7518:20:26"},"nodeType":"YulFunctionCall","src":"7518:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7508:6:26"}]}]},{"nodeType":"YulBlock","src":"7591:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7606:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7620:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7610:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7636:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7671:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7682:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7667:3:26"},"nodeType":"YulFunctionCall","src":"7667:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7691:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7646:20:26"},"nodeType":"YulFunctionCall","src":"7646:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7636:6:26"}]}]},{"nodeType":"YulBlock","src":"7719:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7734:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7776:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:26"},"nodeType":"YulFunctionCall","src":"7761:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7748:12:26"},"nodeType":"YulFunctionCall","src":"7748:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7738:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7827:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7829:77:26"},"nodeType":"YulFunctionCall","src":"7829:79:26"},"nodeType":"YulExpressionStatement","src":"7829:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7799:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7807:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7796:2:26"},"nodeType":"YulFunctionCall","src":"7796:30:26"},"nodeType":"YulIf","src":"7793:117:26"},{"nodeType":"YulAssignment","src":"7924:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7995:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7980:3:26"},"nodeType":"YulFunctionCall","src":"7980:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8004:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7934:45:26"},"nodeType":"YulFunctionCall","src":"7934:78:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7924:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7279:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7290:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7302:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7310:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7318:6:26","type":""}],"src":"7200:829:26"},{"body":{"nodeType":"YulBlock","src":"8079:32:26","statements":[{"nodeType":"YulAssignment","src":"8089:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"8100:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8089:7:26"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8061:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8071:7:26","type":""}],"src":"8035:76:26"},{"body":{"nodeType":"YulBlock","src":"8180:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8197:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8219:5:26"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"8202:16:26"},"nodeType":"YulFunctionCall","src":"8202:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8190:6:26"},"nodeType":"YulFunctionCall","src":"8190:36:26"},"nodeType":"YulExpressionStatement","src":"8190:36:26"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8168:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8175:3:26","type":""}],"src":"8117:115:26"},{"body":{"nodeType":"YulBlock","src":"8334:122:26","statements":[{"nodeType":"YulAssignment","src":"8344:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8356:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8367:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8352:3:26"},"nodeType":"YulFunctionCall","src":"8352:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8344:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8422:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8435:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8446:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8431:3:26"},"nodeType":"YulFunctionCall","src":"8431:17:26"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"8380:41:26"},"nodeType":"YulFunctionCall","src":"8380:69:26"},"nodeType":"YulExpressionStatement","src":"8380:69:26"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8306:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8318:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8329:4:26","type":""}],"src":"8238:218:26"},{"body":{"nodeType":"YulBlock","src":"8506:65:26","statements":[{"nodeType":"YulAssignment","src":"8516:49:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8531:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8538:26:26","type":"","value":"0xffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8527:3:26"},"nodeType":"YulFunctionCall","src":"8527:38:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"8516:7:26"}]}]},"name":"cleanup_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8488:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"8498:7:26","type":""}],"src":"8462:109:26"},{"body":{"nodeType":"YulBlock","src":"8640:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8657:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8679:5:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"8662:16:26"},"nodeType":"YulFunctionCall","src":"8662:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8650:6:26"},"nodeType":"YulFunctionCall","src":"8650:36:26"},"nodeType":"YulExpressionStatement","src":"8650:36:26"}]},"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8628:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8635:3:26","type":""}],"src":"8577:115:26"},{"body":{"nodeType":"YulBlock","src":"8794:122:26","statements":[{"nodeType":"YulAssignment","src":"8804:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8816:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8827:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8812:3:26"},"nodeType":"YulFunctionCall","src":"8812:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8804:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8882:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8895:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8906:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8891:3:26"},"nodeType":"YulFunctionCall","src":"8891:17:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"8840:41:26"},"nodeType":"YulFunctionCall","src":"8840:69:26"},"nodeType":"YulExpressionStatement","src":"8840:69:26"}]},"name":"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8766:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8778:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8789:4:26","type":""}],"src":"8698:218:26"},{"body":{"nodeType":"YulBlock","src":"8965:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"9022:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9031:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9034:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9024:6:26"},"nodeType":"YulFunctionCall","src":"9024:12:26"},"nodeType":"YulExpressionStatement","src":"9024:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8988:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9013:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"8995:17:26"},"nodeType":"YulFunctionCall","src":"8995:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8985:2:26"},"nodeType":"YulFunctionCall","src":"8985:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8978:6:26"},"nodeType":"YulFunctionCall","src":"8978:43:26"},"nodeType":"YulIf","src":"8975:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8958:5:26","type":""}],"src":"8922:122:26"},{"body":{"nodeType":"YulBlock","src":"9102:87:26","statements":[{"nodeType":"YulAssignment","src":"9112:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9134:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9121:12:26"},"nodeType":"YulFunctionCall","src":"9121:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9112:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9177:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"9150:26:26"},"nodeType":"YulFunctionCall","src":"9150:33:26"},"nodeType":"YulExpressionStatement","src":"9150:33:26"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9080:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9088:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9096:5:26","type":""}],"src":"9050:139:26"},{"body":{"nodeType":"YulBlock","src":"9237:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"9293:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9302:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9305:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9295:6:26"},"nodeType":"YulFunctionCall","src":"9295:12:26"},"nodeType":"YulExpressionStatement","src":"9295:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9260:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9284:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"9267:16:26"},"nodeType":"YulFunctionCall","src":"9267:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9257:2:26"},"nodeType":"YulFunctionCall","src":"9257:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9250:6:26"},"nodeType":"YulFunctionCall","src":"9250:42:26"},"nodeType":"YulIf","src":"9247:62:26"}]},"name":"validator_revert_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9230:5:26","type":""}],"src":"9195:120:26"},{"body":{"nodeType":"YulBlock","src":"9372:86:26","statements":[{"nodeType":"YulAssignment","src":"9382:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9404:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9391:12:26"},"nodeType":"YulFunctionCall","src":"9391:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9382:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9446:5:26"}],"functionName":{"name":"validator_revert_t_uint16","nodeType":"YulIdentifier","src":"9420:25:26"},"nodeType":"YulFunctionCall","src":"9420:32:26"},"nodeType":"YulExpressionStatement","src":"9420:32:26"}]},"name":"abi_decode_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9350:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9358:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9366:5:26","type":""}],"src":"9321:137:26"},{"body":{"nodeType":"YulBlock","src":"9506:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"9562:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9571:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9574:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9564:6:26"},"nodeType":"YulFunctionCall","src":"9564:12:26"},"nodeType":"YulExpressionStatement","src":"9564:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9529:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9553:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"9536:16:26"},"nodeType":"YulFunctionCall","src":"9536:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9526:2:26"},"nodeType":"YulFunctionCall","src":"9526:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9519:6:26"},"nodeType":"YulFunctionCall","src":"9519:42:26"},"nodeType":"YulIf","src":"9516:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9499:5:26","type":""}],"src":"9464:120:26"},{"body":{"nodeType":"YulBlock","src":"9641:86:26","statements":[{"nodeType":"YulAssignment","src":"9651:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9673:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9660:12:26"},"nodeType":"YulFunctionCall","src":"9660:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9651:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9715:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"9689:25:26"},"nodeType":"YulFunctionCall","src":"9689:32:26"},"nodeType":"YulExpressionStatement","src":"9689:32:26"}]},"name":"abi_decode_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9619:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9627:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9635:5:26","type":""}],"src":"9590:137:26"},{"body":{"nodeType":"YulBlock","src":"9863:773:26","statements":[{"body":{"nodeType":"YulBlock","src":"9910:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9912:77:26"},"nodeType":"YulFunctionCall","src":"9912:79:26"},"nodeType":"YulExpressionStatement","src":"9912:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9884:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9893:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9880:3:26"},"nodeType":"YulFunctionCall","src":"9880:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9905:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9876:3:26"},"nodeType":"YulFunctionCall","src":"9876:33:26"},"nodeType":"YulIf","src":"9873:120:26"},{"nodeType":"YulBlock","src":"10003:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10018:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10032:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10022:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10047:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10082:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10093:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10078:3:26"},"nodeType":"YulFunctionCall","src":"10078:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10102:7:26"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"10057:20:26"},"nodeType":"YulFunctionCall","src":"10057:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10047:6:26"}]}]},{"nodeType":"YulBlock","src":"10130:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10145:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10159:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10149:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10175:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10209:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10220:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10205:3:26"},"nodeType":"YulFunctionCall","src":"10205:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10229:7:26"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"10185:19:26"},"nodeType":"YulFunctionCall","src":"10185:52:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10175:6:26"}]}]},{"nodeType":"YulBlock","src":"10257:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10272:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10286:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10276:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10302:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10336:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10347:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10332:3:26"},"nodeType":"YulFunctionCall","src":"10332:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10356:7:26"}],"functionName":{"name":"abi_decode_t_uint16","nodeType":"YulIdentifier","src":"10312:19:26"},"nodeType":"YulFunctionCall","src":"10312:52:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10302:6:26"}]}]},{"nodeType":"YulBlock","src":"10384:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10399:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10413:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10403:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10429:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:26"},"nodeType":"YulFunctionCall","src":"10459:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:26"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10439:19:26"},"nodeType":"YulFunctionCall","src":"10439:52:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10429:6:26"}]}]},{"nodeType":"YulBlock","src":"10511:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10526:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10540:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10530:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10557:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10591:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10602:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10587:3:26"},"nodeType":"YulFunctionCall","src":"10587:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10611:7:26"}],"functionName":{"name":"abi_decode_t_uint32","nodeType":"YulIdentifier","src":"10567:19:26"},"nodeType":"YulFunctionCall","src":"10567:52:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10557:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9801:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9812:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9824:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9832:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9840:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9848:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9856:6:26","type":""}],"src":"9733:903:26"},{"body":{"nodeType":"YulBlock","src":"10707:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10724:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10747:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10729:17:26"},"nodeType":"YulFunctionCall","src":"10729:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10717:6:26"},"nodeType":"YulFunctionCall","src":"10717:37:26"},"nodeType":"YulExpressionStatement","src":"10717:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10695:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10702:3:26","type":""}],"src":"10642:118:26"},{"body":{"nodeType":"YulBlock","src":"10864:124:26","statements":[{"nodeType":"YulAssignment","src":"10874:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10886:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10897:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10882:3:26"},"nodeType":"YulFunctionCall","src":"10882:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10874:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10954:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10967:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10978:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10963:3:26"},"nodeType":"YulFunctionCall","src":"10963:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10910:43:26"},"nodeType":"YulFunctionCall","src":"10910:71:26"},"nodeType":"YulExpressionStatement","src":"10910:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10836:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10848:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10859:4:26","type":""}],"src":"10766:222:26"},{"body":{"nodeType":"YulBlock","src":"11038:47:26","statements":[{"nodeType":"YulAssignment","src":"11048:31:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11063:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"11070:8:26","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11059:3:26"},"nodeType":"YulFunctionCall","src":"11059:20:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"11048:7:26"}]}]},"name":"cleanup_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11020:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"11030:7:26","type":""}],"src":"10994:91:26"},{"body":{"nodeType":"YulBlock","src":"11154:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11171:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11193:5:26"}],"functionName":{"name":"cleanup_t_uint24","nodeType":"YulIdentifier","src":"11176:16:26"},"nodeType":"YulFunctionCall","src":"11176:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11164:6:26"},"nodeType":"YulFunctionCall","src":"11164:36:26"},"nodeType":"YulExpressionStatement","src":"11164:36:26"}]},"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11142:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11149:3:26","type":""}],"src":"11091:115:26"},{"body":{"nodeType":"YulBlock","src":"11516:768:26","statements":[{"nodeType":"YulAssignment","src":"11526:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11538:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11549:3:26","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11534:3:26"},"nodeType":"YulFunctionCall","src":"11534:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11526:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11605:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11618:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11629:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11614:3:26"},"nodeType":"YulFunctionCall","src":"11614:17:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11563:41:26"},"nodeType":"YulFunctionCall","src":"11563:69:26"},"nodeType":"YulExpressionStatement","src":"11563:69:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11684:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11697:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11708:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11693:3:26"},"nodeType":"YulFunctionCall","src":"11693:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11642:41:26"},"nodeType":"YulFunctionCall","src":"11642:70:26"},"nodeType":"YulExpressionStatement","src":"11642:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"11764:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11777:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11788:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11773:3:26"},"nodeType":"YulFunctionCall","src":"11773:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11722:41:26"},"nodeType":"YulFunctionCall","src":"11722:70:26"},"nodeType":"YulExpressionStatement","src":"11722:70:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"11844:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11857:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11868:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11853:3:26"},"nodeType":"YulFunctionCall","src":"11853:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11802:41:26"},"nodeType":"YulFunctionCall","src":"11802:70:26"},"nodeType":"YulExpressionStatement","src":"11802:70:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"11924:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11937:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11948:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11933:3:26"},"nodeType":"YulFunctionCall","src":"11933:19:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"11882:41:26"},"nodeType":"YulFunctionCall","src":"11882:71:26"},"nodeType":"YulExpressionStatement","src":"11882:71:26"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"12005:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12018:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12029:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12014:3:26"},"nodeType":"YulFunctionCall","src":"12014:19:26"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"11963:41:26"},"nodeType":"YulFunctionCall","src":"11963:71:26"},"nodeType":"YulExpressionStatement","src":"11963:71:26"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"12086:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12099:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12110:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12095:3:26"},"nodeType":"YulFunctionCall","src":"12095:19:26"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12044:41:26"},"nodeType":"YulFunctionCall","src":"12044:71:26"},"nodeType":"YulExpressionStatement","src":"12044:71:26"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"12167:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12180:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12191:3:26","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12176:3:26"},"nodeType":"YulFunctionCall","src":"12176:19:26"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12125:41:26"},"nodeType":"YulFunctionCall","src":"12125:71:26"},"nodeType":"YulExpressionStatement","src":"12125:71:26"},{"expression":{"arguments":[{"name":"value8","nodeType":"YulIdentifier","src":"12248:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12261:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12272:3:26","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12257:3:26"},"nodeType":"YulFunctionCall","src":"12257:19:26"}],"functionName":{"name":"abi_encode_t_uint24_to_t_uint24_fromStack","nodeType":"YulIdentifier","src":"12206:41:26"},"nodeType":"YulFunctionCall","src":"12206:71:26"},"nodeType":"YulExpressionStatement","src":"12206:71:26"}]},"name":"abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11424:9:26","type":""},{"name":"value8","nodeType":"YulTypedName","src":"11436:6:26","type":""},{"name":"value7","nodeType":"YulTypedName","src":"11444:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"11452:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"11460:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"11468:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11476:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11484:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11492:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11500:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11511:4:26","type":""}],"src":"11212:1072:26"},{"body":{"nodeType":"YulBlock","src":"12386:122:26","statements":[{"nodeType":"YulAssignment","src":"12396:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12408:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12419:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12404:3:26"},"nodeType":"YulFunctionCall","src":"12404:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12396:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12474:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12487:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12498:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12483:3:26"},"nodeType":"YulFunctionCall","src":"12483:17:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"12432:41:26"},"nodeType":"YulFunctionCall","src":"12432:69:26"},"nodeType":"YulExpressionStatement","src":"12432:69:26"}]},"name":"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12358:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12370:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12381:4:26","type":""}],"src":"12290:218:26"},{"body":{"nodeType":"YulBlock","src":"12597:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"12643:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12645:77:26"},"nodeType":"YulFunctionCall","src":"12645:79:26"},"nodeType":"YulExpressionStatement","src":"12645:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12618:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12627:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12614:3:26"},"nodeType":"YulFunctionCall","src":"12614:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"12639:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12610:3:26"},"nodeType":"YulFunctionCall","src":"12610:32:26"},"nodeType":"YulIf","src":"12607:119:26"},{"nodeType":"YulBlock","src":"12736:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12751:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12765:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12755:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12780:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12815:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12826:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12811:3:26"},"nodeType":"YulFunctionCall","src":"12811:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12835:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12790:20:26"},"nodeType":"YulFunctionCall","src":"12790:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12780:6:26"}]}]},{"nodeType":"YulBlock","src":"12863:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12878:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12892:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12882:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12908:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12943:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12954:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12939:3:26"},"nodeType":"YulFunctionCall","src":"12939:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12963:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12918:20:26"},"nodeType":"YulFunctionCall","src":"12918:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12908:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12559:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12570:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12582:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12590:6:26","type":""}],"src":"12514:474:26"},{"body":{"nodeType":"YulBlock","src":"13059:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"13105:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13107:77:26"},"nodeType":"YulFunctionCall","src":"13107:79:26"},"nodeType":"YulExpressionStatement","src":"13107:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13080:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13089:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13076:3:26"},"nodeType":"YulFunctionCall","src":"13076:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13101:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13072:3:26"},"nodeType":"YulFunctionCall","src":"13072:32:26"},"nodeType":"YulIf","src":"13069:119:26"},{"nodeType":"YulBlock","src":"13198:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13213:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13227:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13217:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13242:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13276:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13287:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13272:3:26"},"nodeType":"YulFunctionCall","src":"13272:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13296:7:26"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"13252:19:26"},"nodeType":"YulFunctionCall","src":"13252:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13242:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13029:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13040:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13052:6:26","type":""}],"src":"12994:327:26"},{"body":{"nodeType":"YulBlock","src":"13390:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13407:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13429:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"13412:16:26"},"nodeType":"YulFunctionCall","src":"13412:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13400:6:26"},"nodeType":"YulFunctionCall","src":"13400:36:26"},"nodeType":"YulExpressionStatement","src":"13400:36:26"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13378:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13385:3:26","type":""}],"src":"13327:115:26"},{"body":{"nodeType":"YulBlock","src":"13544:122:26","statements":[{"nodeType":"YulAssignment","src":"13554:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13566:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13577:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13562:3:26"},"nodeType":"YulFunctionCall","src":"13562:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13554:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13632:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13645:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13656:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13641:3:26"},"nodeType":"YulFunctionCall","src":"13641:17:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"13590:41:26"},"nodeType":"YulFunctionCall","src":"13590:69:26"},"nodeType":"YulExpressionStatement","src":"13590:69:26"}]},"name":"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13516:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13528:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13539:4:26","type":""}],"src":"13448:218:26"},{"body":{"nodeType":"YulBlock","src":"13737:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13754:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13777:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"13759:17:26"},"nodeType":"YulFunctionCall","src":"13759:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13747:6:26"},"nodeType":"YulFunctionCall","src":"13747:37:26"},"nodeType":"YulExpressionStatement","src":"13747:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13725:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13732:3:26","type":""}],"src":"13672:118:26"},{"body":{"nodeType":"YulBlock","src":"13870:40:26","statements":[{"nodeType":"YulAssignment","src":"13881:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13897:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13891:5:26"},"nodeType":"YulFunctionCall","src":"13891:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13881:6:26"}]}]},"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13853:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13863:6:26","type":""}],"src":"13796:114:26"},{"body":{"nodeType":"YulBlock","src":"14027:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14044:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14049:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14037:6:26"},"nodeType":"YulFunctionCall","src":"14037:19:26"},"nodeType":"YulExpressionStatement","src":"14037:19:26"},{"nodeType":"YulAssignment","src":"14065:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14084:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14089:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14080:3:26"},"nodeType":"YulFunctionCall","src":"14080:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14065:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13999:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"14004:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14015:11:26","type":""}],"src":"13916:184:26"},{"body":{"nodeType":"YulBlock","src":"14178:60:26","statements":[{"nodeType":"YulAssignment","src":"14188:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"14196:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14188:4:26"}]},{"nodeType":"YulAssignment","src":"14209:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14221:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14226:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14217:3:26"},"nodeType":"YulFunctionCall","src":"14217:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"14209:4:26"}]}]},"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14165:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"14173:4:26","type":""}],"src":"14106:132:26"},{"body":{"nodeType":"YulBlock","src":"14299:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14316:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14339:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"14321:17:26"},"nodeType":"YulFunctionCall","src":"14321:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14309:6:26"},"nodeType":"YulFunctionCall","src":"14309:37:26"},"nodeType":"YulExpressionStatement","src":"14309:37:26"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14287:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14294:3:26","type":""}],"src":"14244:108:26"},{"body":{"nodeType":"YulBlock","src":"14438:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14482:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"14490:3:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"14448:33:26"},"nodeType":"YulFunctionCall","src":"14448:46:26"},"nodeType":"YulExpressionStatement","src":"14448:46:26"},{"nodeType":"YulAssignment","src":"14503:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14521:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14526:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14517:3:26"},"nodeType":"YulFunctionCall","src":"14517:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14503:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14411:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14419:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14427:10:26","type":""}],"src":"14358:179:26"},{"body":{"nodeType":"YulBlock","src":"14618:38:26","statements":[{"nodeType":"YulAssignment","src":"14628:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14640:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14645:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14636:3:26"},"nodeType":"YulFunctionCall","src":"14636:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14628:4:26"}]}]},"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14605:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14613:4:26","type":""}],"src":"14543:113:26"},{"body":{"nodeType":"YulBlock","src":"14816:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14826:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14888:5:26"}],"functionName":{"name":"array_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14840:47:26"},"nodeType":"YulFunctionCall","src":"14840:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14830:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14903:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14984:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"14989:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14910:73:26"},"nodeType":"YulFunctionCall","src":"14910:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14903:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"15005:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15070:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15020:49:26"},"nodeType":"YulFunctionCall","src":"15020:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15009:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15085:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15099:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15089:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"15175:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15189:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15216:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15210:5:26"},"nodeType":"YulFunctionCall","src":"15210:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15193:13:26","type":""}]},{"nodeType":"YulAssignment","src":"15236:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15287:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"15302:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_address_to_t_address","nodeType":"YulIdentifier","src":"15243:43:26"},"nodeType":"YulFunctionCall","src":"15243:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15236:3:26"}]},{"nodeType":"YulAssignment","src":"15319:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15382:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15329:52:26"},"nodeType":"YulFunctionCall","src":"15329:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15319:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15137:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"15140:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15134:2:26"},"nodeType":"YulFunctionCall","src":"15134:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15148:18:26","statements":[{"nodeType":"YulAssignment","src":"15150:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15159:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"15162:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15155:3:26"},"nodeType":"YulFunctionCall","src":"15155:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15150:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"15119:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15121:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15130:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15125:1:26","type":""}]}]},"src":"15115:284:26"},{"nodeType":"YulAssignment","src":"15408:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"15415:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15408:3:26"}]}]},"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14795:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14802:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14811:3:26","type":""}],"src":"14692:732:26"},{"body":{"nodeType":"YulBlock","src":"15658:468:26","statements":[{"nodeType":"YulAssignment","src":"15668:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15680:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15691:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15676:3:26"},"nodeType":"YulFunctionCall","src":"15676:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15668:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15747:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15760:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15771:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15756:3:26"},"nodeType":"YulFunctionCall","src":"15756:17:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"15705:41:26"},"nodeType":"YulFunctionCall","src":"15705:69:26"},"nodeType":"YulExpressionStatement","src":"15705:69:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15826:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15839:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15850:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15835:3:26"},"nodeType":"YulFunctionCall","src":"15835:18:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"15784:41:26"},"nodeType":"YulFunctionCall","src":"15784:70:26"},"nodeType":"YulExpressionStatement","src":"15784:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"15908:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15921:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15932:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15917:3:26"},"nodeType":"YulFunctionCall","src":"15917:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15864:43:26"},"nodeType":"YulFunctionCall","src":"15864:72:26"},"nodeType":"YulExpressionStatement","src":"15864:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15957:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15968:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15953:3:26"},"nodeType":"YulFunctionCall","src":"15953:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15977:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15983:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15973:3:26"},"nodeType":"YulFunctionCall","src":"15973:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15946:6:26"},"nodeType":"YulFunctionCall","src":"15946:48:26"},"nodeType":"YulExpressionStatement","src":"15946:48:26"},{"nodeType":"YulAssignment","src":"16003:116:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16105:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"16114:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16011:93:26"},"nodeType":"YulFunctionCall","src":"16011:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16003:4:26"}]}]},"name":"abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15606:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15618:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15626:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15634:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15642:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15653:4:26","type":""}],"src":"15430:696:26"},{"body":{"nodeType":"YulBlock","src":"16174:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"16230:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16239:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16242:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16232:6:26"},"nodeType":"YulFunctionCall","src":"16232:12:26"},"nodeType":"YulExpressionStatement","src":"16232:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16197:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16221:5:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"16204:16:26"},"nodeType":"YulFunctionCall","src":"16204:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"16194:2:26"},"nodeType":"YulFunctionCall","src":"16194:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"16187:6:26"},"nodeType":"YulFunctionCall","src":"16187:42:26"},"nodeType":"YulIf","src":"16184:62:26"}]},"name":"validator_revert_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16167:5:26","type":""}],"src":"16132:120:26"},{"body":{"nodeType":"YulBlock","src":"16309:86:26","statements":[{"nodeType":"YulAssignment","src":"16319:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16341:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16328:12:26"},"nodeType":"YulFunctionCall","src":"16328:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"16319:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16383:5:26"}],"functionName":{"name":"validator_revert_t_uint96","nodeType":"YulIdentifier","src":"16357:25:26"},"nodeType":"YulFunctionCall","src":"16357:32:26"},"nodeType":"YulExpressionStatement","src":"16357:32:26"}]},"name":"abi_decode_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"16287:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"16295:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"16303:5:26","type":""}],"src":"16258:137:26"},{"body":{"nodeType":"YulBlock","src":"16482:389:26","statements":[{"body":{"nodeType":"YulBlock","src":"16528:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"16530:77:26"},"nodeType":"YulFunctionCall","src":"16530:79:26"},"nodeType":"YulExpressionStatement","src":"16530:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"16503:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16512:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16499:3:26"},"nodeType":"YulFunctionCall","src":"16499:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"16524:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"16495:3:26"},"nodeType":"YulFunctionCall","src":"16495:32:26"},"nodeType":"YulIf","src":"16492:119:26"},{"nodeType":"YulBlock","src":"16621:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16636:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16650:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16640:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16665:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16699:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16710:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16695:3:26"},"nodeType":"YulFunctionCall","src":"16695:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16719:7:26"}],"functionName":{"name":"abi_decode_t_uint64","nodeType":"YulIdentifier","src":"16675:19:26"},"nodeType":"YulFunctionCall","src":"16675:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16665:6:26"}]}]},{"nodeType":"YulBlock","src":"16747:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16762:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"16776:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16766:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16792:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16826:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"16837:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16822:3:26"},"nodeType":"YulFunctionCall","src":"16822:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16846:7:26"}],"functionName":{"name":"abi_decode_t_uint96","nodeType":"YulIdentifier","src":"16802:19:26"},"nodeType":"YulFunctionCall","src":"16802:52:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16792:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint64t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16444:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"16455:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"16467:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16475:6:26","type":""}],"src":"16401:470:26"},{"body":{"nodeType":"YulBlock","src":"17051:363:26","statements":[{"nodeType":"YulAssignment","src":"17061:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17073:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17084:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17069:3:26"},"nodeType":"YulFunctionCall","src":"17069:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17061:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17140:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17153:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17164:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17149:3:26"},"nodeType":"YulFunctionCall","src":"17149:17:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"17098:41:26"},"nodeType":"YulFunctionCall","src":"17098:69:26"},"nodeType":"YulExpressionStatement","src":"17098:69:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17219:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17232:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17243:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17228:3:26"},"nodeType":"YulFunctionCall","src":"17228:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17177:41:26"},"nodeType":"YulFunctionCall","src":"17177:70:26"},"nodeType":"YulExpressionStatement","src":"17177:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"17299:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17312:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17323:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17308:3:26"},"nodeType":"YulFunctionCall","src":"17308:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17257:41:26"},"nodeType":"YulFunctionCall","src":"17257:70:26"},"nodeType":"YulExpressionStatement","src":"17257:70:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"17379:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17392:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17403:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17388:3:26"},"nodeType":"YulFunctionCall","src":"17388:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"17337:41:26"},"nodeType":"YulFunctionCall","src":"17337:70:26"},"nodeType":"YulExpressionStatement","src":"17337:70:26"}]},"name":"abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16999:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17011:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17019:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17027:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17035:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17046:4:26","type":""}],"src":"16877:537:26"},{"body":{"nodeType":"YulBlock","src":"17462:48:26","statements":[{"nodeType":"YulAssignment","src":"17472:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17497:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17490:6:26"},"nodeType":"YulFunctionCall","src":"17490:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17483:6:26"},"nodeType":"YulFunctionCall","src":"17483:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"17472:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17444:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"17454:7:26","type":""}],"src":"17420:90:26"},{"body":{"nodeType":"YulBlock","src":"17575:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17592:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17612:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"17597:14:26"},"nodeType":"YulFunctionCall","src":"17597:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17585:6:26"},"nodeType":"YulFunctionCall","src":"17585:34:26"},"nodeType":"YulExpressionStatement","src":"17585:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17563:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17570:3:26","type":""}],"src":"17516:109:26"},{"body":{"nodeType":"YulBlock","src":"17723:118:26","statements":[{"nodeType":"YulAssignment","src":"17733:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17745:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17756:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17741:3:26"},"nodeType":"YulFunctionCall","src":"17741:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17733:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17807:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17820:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17831:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17816:3:26"},"nodeType":"YulFunctionCall","src":"17816:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"17769:37:26"},"nodeType":"YulFunctionCall","src":"17769:65:26"},"nodeType":"YulExpressionStatement","src":"17769:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17695:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17707:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17718:4:26","type":""}],"src":"17631:210:26"},{"body":{"nodeType":"YulBlock","src":"17943:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17960:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"17965:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17953:6:26"},"nodeType":"YulFunctionCall","src":"17953:19:26"},"nodeType":"YulExpressionStatement","src":"17953:19:26"},{"nodeType":"YulAssignment","src":"17981:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18000:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18005:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17996:3:26"},"nodeType":"YulFunctionCall","src":"17996:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17981:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17915:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"17920:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17931:11:26","type":""}],"src":"17847:169:26"},{"body":{"nodeType":"YulBlock","src":"18128:59:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18150:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18158:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18146:3:26"},"nodeType":"YulFunctionCall","src":"18146:14:26"},{"hexValue":"6e6f7420696d706c656d656e746564","kind":"string","nodeType":"YulLiteral","src":"18162:17:26","type":"","value":"not implemented"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18139:6:26"},"nodeType":"YulFunctionCall","src":"18139:41:26"},"nodeType":"YulExpressionStatement","src":"18139:41:26"}]},"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18120:6:26","type":""}],"src":"18022:165:26"},{"body":{"nodeType":"YulBlock","src":"18339:220:26","statements":[{"nodeType":"YulAssignment","src":"18349:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18415:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18420:2:26","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18356:58:26"},"nodeType":"YulFunctionCall","src":"18356:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18349:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18521:3:26"}],"functionName":{"name":"store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9","nodeType":"YulIdentifier","src":"18432:88:26"},"nodeType":"YulFunctionCall","src":"18432:93:26"},"nodeType":"YulExpressionStatement","src":"18432:93:26"},{"nodeType":"YulAssignment","src":"18534:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18545:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18550:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18541:3:26"},"nodeType":"YulFunctionCall","src":"18541:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18534:3:26"}]}]},"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18327:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18335:3:26","type":""}],"src":"18193:366:26"},{"body":{"nodeType":"YulBlock","src":"18736:248:26","statements":[{"nodeType":"YulAssignment","src":"18746:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18758:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18769:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18754:3:26"},"nodeType":"YulFunctionCall","src":"18754:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18746:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18793:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18804:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18789:3:26"},"nodeType":"YulFunctionCall","src":"18789:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18812:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"18818:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18808:3:26"},"nodeType":"YulFunctionCall","src":"18808:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18782:6:26"},"nodeType":"YulFunctionCall","src":"18782:47:26"},"nodeType":"YulExpressionStatement","src":"18782:47:26"},{"nodeType":"YulAssignment","src":"18838:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18972:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18846:124:26"},"nodeType":"YulFunctionCall","src":"18846:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18838:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18716:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18731:4:26","type":""}],"src":"18565:419:26"},{"body":{"nodeType":"YulBlock","src":"19096:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19118:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19126:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19114:3:26"},"nodeType":"YulFunctionCall","src":"19114:14:26"},{"hexValue":"6e6f6e6578697374656e742072657175657374","kind":"string","nodeType":"YulLiteral","src":"19130:21:26","type":"","value":"nonexistent request"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19107:6:26"},"nodeType":"YulFunctionCall","src":"19107:45:26"},"nodeType":"YulExpressionStatement","src":"19107:45:26"}]},"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19088:6:26","type":""}],"src":"18990:169:26"},{"body":{"nodeType":"YulBlock","src":"19311:220:26","statements":[{"nodeType":"YulAssignment","src":"19321:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19387:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19392:2:26","type":"","value":"19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19328:58:26"},"nodeType":"YulFunctionCall","src":"19328:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19321:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19493:3:26"}],"functionName":{"name":"store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0","nodeType":"YulIdentifier","src":"19404:88:26"},"nodeType":"YulFunctionCall","src":"19404:93:26"},"nodeType":"YulExpressionStatement","src":"19404:93:26"},{"nodeType":"YulAssignment","src":"19506:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19517:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19522:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19513:3:26"},"nodeType":"YulFunctionCall","src":"19513:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19506:3:26"}]}]},"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19299:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19307:3:26","type":""}],"src":"19165:366:26"},{"body":{"nodeType":"YulBlock","src":"19708:248:26","statements":[{"nodeType":"YulAssignment","src":"19718:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19730:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19741:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19726:3:26"},"nodeType":"YulFunctionCall","src":"19726:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19718:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19765:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19776:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19761:3:26"},"nodeType":"YulFunctionCall","src":"19761:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19784:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19790:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19780:3:26"},"nodeType":"YulFunctionCall","src":"19780:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19754:6:26"},"nodeType":"YulFunctionCall","src":"19754:47:26"},"nodeType":"YulExpressionStatement","src":"19754:47:26"},{"nodeType":"YulAssignment","src":"19810:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19944:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19818:124:26"},"nodeType":"YulFunctionCall","src":"19818:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19810:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19688:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19703:4:26","type":""}],"src":"19537:419:26"},{"body":{"nodeType":"YulBlock","src":"20088:206:26","statements":[{"nodeType":"YulAssignment","src":"20098:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20110:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20121:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20106:3:26"},"nodeType":"YulFunctionCall","src":"20106:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20098:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"20178:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20191:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20202:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20187:3:26"},"nodeType":"YulFunctionCall","src":"20187:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20134:43:26"},"nodeType":"YulFunctionCall","src":"20134:71:26"},"nodeType":"YulExpressionStatement","src":"20134:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20259:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20272:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20283:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20268:3:26"},"nodeType":"YulFunctionCall","src":"20268:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20215:43:26"},"nodeType":"YulFunctionCall","src":"20215:72:26"},"nodeType":"YulExpressionStatement","src":"20215:72:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20052:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20064:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20072:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20083:4:26","type":""}],"src":"19962:332:26"},{"body":{"nodeType":"YulBlock","src":"20328:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20345:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20348:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20338:6:26"},"nodeType":"YulFunctionCall","src":"20338:88:26"},"nodeType":"YulExpressionStatement","src":"20338:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20442:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20445:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20435:6:26"},"nodeType":"YulFunctionCall","src":"20435:15:26"},"nodeType":"YulExpressionStatement","src":"20435:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20466:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20469:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20459:6:26"},"nodeType":"YulFunctionCall","src":"20459:15:26"},"nodeType":"YulExpressionStatement","src":"20459:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"20300:180:26"},{"body":{"nodeType":"YulBlock","src":"20514:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20531:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20534:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20524:6:26"},"nodeType":"YulFunctionCall","src":"20524:88:26"},"nodeType":"YulExpressionStatement","src":"20524:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20628:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20631:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20621:6:26"},"nodeType":"YulFunctionCall","src":"20621:15:26"},"nodeType":"YulExpressionStatement","src":"20621:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20652:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20655:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20645:6:26"},"nodeType":"YulFunctionCall","src":"20645:15:26"},"nodeType":"YulExpressionStatement","src":"20645:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20486:180:26"},{"body":{"nodeType":"YulBlock","src":"20715:190:26","statements":[{"nodeType":"YulAssignment","src":"20725:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20752:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20734:17:26"},"nodeType":"YulFunctionCall","src":"20734:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20725:5:26"}]},{"body":{"nodeType":"YulBlock","src":"20848:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"20850:16:26"},"nodeType":"YulFunctionCall","src":"20850:18:26"},"nodeType":"YulExpressionStatement","src":"20850:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20773:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"20780:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20770:2:26"},"nodeType":"YulFunctionCall","src":"20770:77:26"},"nodeType":"YulIf","src":"20767:103:26"},{"nodeType":"YulAssignment","src":"20879:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20890:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"20897:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20886:3:26"},"nodeType":"YulFunctionCall","src":"20886:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"20879:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20701:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20711:3:26","type":""}],"src":"20672:233:26"},{"body":{"nodeType":"YulBlock","src":"20985:40:26","statements":[{"nodeType":"YulAssignment","src":"20996:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21012:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21006:5:26"},"nodeType":"YulFunctionCall","src":"21006:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20996:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20968:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20978:6:26","type":""}],"src":"20911:114:26"},{"body":{"nodeType":"YulBlock","src":"21142:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21159:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21164:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21152:6:26"},"nodeType":"YulFunctionCall","src":"21152:19:26"},"nodeType":"YulExpressionStatement","src":"21152:19:26"},{"nodeType":"YulAssignment","src":"21180:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21199:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21204:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21195:3:26"},"nodeType":"YulFunctionCall","src":"21195:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21180:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21114:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"21119:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21130:11:26","type":""}],"src":"21031:184:26"},{"body":{"nodeType":"YulBlock","src":"21293:60:26","statements":[{"nodeType":"YulAssignment","src":"21303:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"21311:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21303:4:26"}]},{"nodeType":"YulAssignment","src":"21324:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21336:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21341:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21332:3:26"},"nodeType":"YulFunctionCall","src":"21332:14:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"21324:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21280:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"21288:4:26","type":""}],"src":"21221:132:26"},{"body":{"nodeType":"YulBlock","src":"21414:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21431:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21454:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"21436:17:26"},"nodeType":"YulFunctionCall","src":"21436:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21424:6:26"},"nodeType":"YulFunctionCall","src":"21424:37:26"},"nodeType":"YulExpressionStatement","src":"21424:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21402:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21409:3:26","type":""}],"src":"21359:108:26"},{"body":{"nodeType":"YulBlock","src":"21553:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21597:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"21605:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21563:33:26"},"nodeType":"YulFunctionCall","src":"21563:46:26"},"nodeType":"YulExpressionStatement","src":"21563:46:26"},{"nodeType":"YulAssignment","src":"21618:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21636:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21641:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21632:3:26"},"nodeType":"YulFunctionCall","src":"21632:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"21618:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"21526:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21534:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"21542:10:26","type":""}],"src":"21473:179:26"},{"body":{"nodeType":"YulBlock","src":"21733:38:26","statements":[{"nodeType":"YulAssignment","src":"21743:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21755:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21760:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21751:3:26"},"nodeType":"YulFunctionCall","src":"21751:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"21743:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21720:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"21728:4:26","type":""}],"src":"21658:113:26"},{"body":{"nodeType":"YulBlock","src":"21931:608:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21941:68:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22003:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21955:47:26"},"nodeType":"YulFunctionCall","src":"21955:54:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21945:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22018:93:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22099:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"22104:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22025:73:26"},"nodeType":"YulFunctionCall","src":"22025:86:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22018:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"22120:71:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22185:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22135:49:26"},"nodeType":"YulFunctionCall","src":"22135:56:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22124:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22200:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22214:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22204:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"22290:224:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22304:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22331:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22325:5:26"},"nodeType":"YulFunctionCall","src":"22325:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22308:13:26","type":""}]},{"nodeType":"YulAssignment","src":"22351:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22402:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"22417:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22358:43:26"},"nodeType":"YulFunctionCall","src":"22358:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22351:3:26"}]},{"nodeType":"YulAssignment","src":"22434:70:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22497:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22444:52:26"},"nodeType":"YulFunctionCall","src":"22444:60:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22434:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22252:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"22255:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22249:2:26"},"nodeType":"YulFunctionCall","src":"22249:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22263:18:26","statements":[{"nodeType":"YulAssignment","src":"22265:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22274:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"22277:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22270:3:26"},"nodeType":"YulFunctionCall","src":"22270:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22265:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"22234:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22236:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22245:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22240:1:26","type":""}]}]},"src":"22230:284:26"},{"nodeType":"YulAssignment","src":"22523:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"22530:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22523:3:26"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21910:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21917:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21926:3:26","type":""}],"src":"21807:732:26"},{"body":{"nodeType":"YulBlock","src":"22721:307:26","statements":[{"nodeType":"YulAssignment","src":"22731:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22743:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22754:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22739:3:26"},"nodeType":"YulFunctionCall","src":"22739:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22731:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22811:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22824:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22835:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22820:3:26"},"nodeType":"YulFunctionCall","src":"22820:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22767:43:26"},"nodeType":"YulFunctionCall","src":"22767:71:26"},"nodeType":"YulExpressionStatement","src":"22767:71:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22859:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22870:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22855:3:26"},"nodeType":"YulFunctionCall","src":"22855:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22879:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22885:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22875:3:26"},"nodeType":"YulFunctionCall","src":"22875:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22848:6:26"},"nodeType":"YulFunctionCall","src":"22848:48:26"},"nodeType":"YulExpressionStatement","src":"22848:48:26"},{"nodeType":"YulAssignment","src":"22905:116:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"23007:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"23016:4:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22913:93:26"},"nodeType":"YulFunctionCall","src":"22913:108:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22905:4:26"}]}]},"name":"abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22685:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22697:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22705:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22716:4:26","type":""}],"src":"22545:483:26"},{"body":{"nodeType":"YulBlock","src":"23092:40:26","statements":[{"nodeType":"YulAssignment","src":"23103:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23119:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23113:5:26"},"nodeType":"YulFunctionCall","src":"23113:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"23103:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23075:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"23085:6:26","type":""}],"src":"23034:98:26"},{"body":{"nodeType":"YulBlock","src":"23251:34:26","statements":[{"nodeType":"YulAssignment","src":"23261:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"23276:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"23261:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23223:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"23228:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"23239:11:26","type":""}],"src":"23138:147:26"},{"body":{"nodeType":"YulBlock","src":"23340:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23350:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23359:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"23354:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"23419:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23444:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"23449:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23440:3:26"},"nodeType":"YulFunctionCall","src":"23440:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"23463:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"23468:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23459:3:26"},"nodeType":"YulFunctionCall","src":"23459:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23453:5:26"},"nodeType":"YulFunctionCall","src":"23453:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23433:6:26"},"nodeType":"YulFunctionCall","src":"23433:39:26"},"nodeType":"YulExpressionStatement","src":"23433:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23380:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"23383:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23377:2:26"},"nodeType":"YulFunctionCall","src":"23377:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"23391:19:26","statements":[{"nodeType":"YulAssignment","src":"23393:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23402:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"23405:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23398:3:26"},"nodeType":"YulFunctionCall","src":"23398:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"23393:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"23373:3:26","statements":[]},"src":"23369:113:26"},{"body":{"nodeType":"YulBlock","src":"23516:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"23566:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"23571:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23562:3:26"},"nodeType":"YulFunctionCall","src":"23562:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"23580:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23555:6:26"},"nodeType":"YulFunctionCall","src":"23555:27:26"},"nodeType":"YulExpressionStatement","src":"23555:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"23497:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"23500:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23494:2:26"},"nodeType":"YulFunctionCall","src":"23494:13:26"},"nodeType":"YulIf","src":"23491:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"23322:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"23327:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"23332:6:26","type":""}],"src":"23291:307:26"},{"body":{"nodeType":"YulBlock","src":"23712:265:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23722:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23768:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"23736:31:26"},"nodeType":"YulFunctionCall","src":"23736:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"23726:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23783:95:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23866:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"23871:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23790:75:26"},"nodeType":"YulFunctionCall","src":"23790:88:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23783:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23913:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23920:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23909:3:26"},"nodeType":"YulFunctionCall","src":"23909:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"23927:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"23932:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"23887:21:26"},"nodeType":"YulFunctionCall","src":"23887:52:26"},"nodeType":"YulExpressionStatement","src":"23887:52:26"},{"nodeType":"YulAssignment","src":"23948:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23959:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"23964:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23955:3:26"},"nodeType":"YulFunctionCall","src":"23955:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23948:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23693:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23700:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23708:3:26","type":""}],"src":"23604:373:26"},{"body":{"nodeType":"YulBlock","src":"24117:137:26","statements":[{"nodeType":"YulAssignment","src":"24128:100:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24215:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"24224:3:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24135:79:26"},"nodeType":"YulFunctionCall","src":"24135:93:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24128:3:26"}]},{"nodeType":"YulAssignment","src":"24238:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"24245:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24238:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24096:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24102:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24113:3:26","type":""}],"src":"23983:271:26"},{"body":{"nodeType":"YulBlock","src":"24305:146:26","statements":[{"nodeType":"YulAssignment","src":"24315:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24338:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24320:17:26"},"nodeType":"YulFunctionCall","src":"24320:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24315:1:26"}]},{"nodeType":"YulAssignment","src":"24349:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24372:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24354:17:26"},"nodeType":"YulFunctionCall","src":"24354:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24349:1:26"}]},{"body":{"nodeType":"YulBlock","src":"24396:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24398:16:26"},"nodeType":"YulFunctionCall","src":"24398:18:26"},"nodeType":"YulExpressionStatement","src":"24398:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24390:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"24393:1:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24387:2:26"},"nodeType":"YulFunctionCall","src":"24387:8:26"},"nodeType":"YulIf","src":"24384:34:26"},{"nodeType":"YulAssignment","src":"24428:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24440:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"24443:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24436:3:26"},"nodeType":"YulFunctionCall","src":"24436:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"24428:4:26"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24291:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"24294:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"24300:4:26","type":""}],"src":"24260:191:26"},{"body":{"nodeType":"YulBlock","src":"24505:300:26","statements":[{"nodeType":"YulAssignment","src":"24515:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24538:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24520:17:26"},"nodeType":"YulFunctionCall","src":"24520:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24515:1:26"}]},{"nodeType":"YulAssignment","src":"24549:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24572:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24554:17:26"},"nodeType":"YulFunctionCall","src":"24554:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24549:1:26"}]},{"body":{"nodeType":"YulBlock","src":"24747:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24749:16:26"},"nodeType":"YulFunctionCall","src":"24749:18:26"},"nodeType":"YulExpressionStatement","src":"24749:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24659:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24652:6:26"},"nodeType":"YulFunctionCall","src":"24652:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24645:6:26"},"nodeType":"YulFunctionCall","src":"24645:17:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24667:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24674:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"24742:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24670:3:26"},"nodeType":"YulFunctionCall","src":"24670:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24664:2:26"},"nodeType":"YulFunctionCall","src":"24664:81:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24641:3:26"},"nodeType":"YulFunctionCall","src":"24641:105:26"},"nodeType":"YulIf","src":"24638:131:26"},{"nodeType":"YulAssignment","src":"24779:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24794:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"24797:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24790:3:26"},"nodeType":"YulFunctionCall","src":"24790:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24779:7:26"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24488:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"24491:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"24497:7:26","type":""}],"src":"24457:348:26"},{"body":{"nodeType":"YulBlock","src":"24855:261:26","statements":[{"nodeType":"YulAssignment","src":"24865:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24888:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24870:17:26"},"nodeType":"YulFunctionCall","src":"24870:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"24865:1:26"}]},{"nodeType":"YulAssignment","src":"24899:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24922:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"24904:17:26"},"nodeType":"YulFunctionCall","src":"24904:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"24899:1:26"}]},{"body":{"nodeType":"YulBlock","src":"25062:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25064:16:26"},"nodeType":"YulFunctionCall","src":"25064:18:26"},"nodeType":"YulExpressionStatement","src":"25064:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24983:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24990:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"25058:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24986:3:26"},"nodeType":"YulFunctionCall","src":"24986:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24980:2:26"},"nodeType":"YulFunctionCall","src":"24980:81:26"},"nodeType":"YulIf","src":"24977:107:26"},{"nodeType":"YulAssignment","src":"25094:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25105:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"25108:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25101:3:26"},"nodeType":"YulFunctionCall","src":"25101:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"25094:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"24842:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"24845:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"24851:3:26","type":""}],"src":"24811:305:26"},{"body":{"nodeType":"YulBlock","src":"25166:144:26","statements":[{"nodeType":"YulAssignment","src":"25176:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25198:1:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25181:16:26"},"nodeType":"YulFunctionCall","src":"25181:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"25176:1:26"}]},{"nodeType":"YulAssignment","src":"25209:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"25231:1:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"25214:16:26"},"nodeType":"YulFunctionCall","src":"25214:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"25209:1:26"}]},{"body":{"nodeType":"YulBlock","src":"25255:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25257:16:26"},"nodeType":"YulFunctionCall","src":"25257:18:26"},"nodeType":"YulExpressionStatement","src":"25257:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25249:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"25252:1:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"25246:2:26"},"nodeType":"YulFunctionCall","src":"25246:8:26"},"nodeType":"YulIf","src":"25243:34:26"},{"nodeType":"YulAssignment","src":"25287:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"25299:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"25302:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25295:3:26"},"nodeType":"YulFunctionCall","src":"25295:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"25287:4:26"}]}]},"name":"checked_sub_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"25152:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"25155:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"25161:4:26","type":""}],"src":"25122:188:26"},{"body":{"nodeType":"YulBlock","src":"25462:280:26","statements":[{"nodeType":"YulAssignment","src":"25472:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25484:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25495:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25480:3:26"},"nodeType":"YulFunctionCall","src":"25480:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25472:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25552:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25565:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25576:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25561:3:26"},"nodeType":"YulFunctionCall","src":"25561:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25508:43:26"},"nodeType":"YulFunctionCall","src":"25508:71:26"},"nodeType":"YulExpressionStatement","src":"25508:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"25631:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25644:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25655:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25640:3:26"},"nodeType":"YulFunctionCall","src":"25640:18:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint96_fromStack","nodeType":"YulIdentifier","src":"25589:41:26"},"nodeType":"YulFunctionCall","src":"25589:70:26"},"nodeType":"YulExpressionStatement","src":"25589:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25707:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25720:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25731:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25716:3:26"},"nodeType":"YulFunctionCall","src":"25716:18:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"25669:37:26"},"nodeType":"YulFunctionCall","src":"25669:66:26"},"nodeType":"YulExpressionStatement","src":"25669:66:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25418:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25430:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25438:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25446:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25457:4:26","type":""}],"src":"25316:426:26"},{"body":{"nodeType":"YulBlock","src":"25952:448:26","statements":[{"nodeType":"YulAssignment","src":"25962:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25974:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25985:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25970:3:26"},"nodeType":"YulFunctionCall","src":"25970:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25962:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26043:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26056:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26067:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26052:3:26"},"nodeType":"YulFunctionCall","src":"26052:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25999:43:26"},"nodeType":"YulFunctionCall","src":"25999:71:26"},"nodeType":"YulExpressionStatement","src":"25999:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26124:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26137:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26148:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26133:3:26"},"nodeType":"YulFunctionCall","src":"26133:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26080:43:26"},"nodeType":"YulFunctionCall","src":"26080:72:26"},"nodeType":"YulExpressionStatement","src":"26080:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"26204:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26217:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26228:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26213:3:26"},"nodeType":"YulFunctionCall","src":"26213:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"26162:41:26"},"nodeType":"YulFunctionCall","src":"26162:70:26"},"nodeType":"YulExpressionStatement","src":"26162:70:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"26284:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26297:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26308:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26293:3:26"},"nodeType":"YulFunctionCall","src":"26293:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26242:41:26"},"nodeType":"YulFunctionCall","src":"26242:70:26"},"nodeType":"YulExpressionStatement","src":"26242:70:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"26364:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26377:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26388:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26373:3:26"},"nodeType":"YulFunctionCall","src":"26373:19:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"26322:41:26"},"nodeType":"YulFunctionCall","src":"26322:71:26"},"nodeType":"YulExpressionStatement","src":"26322:71:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25892:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"25904:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"25912:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"25920:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25928:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25936:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25947:4:26","type":""}],"src":"25748:652:26"},{"body":{"nodeType":"YulBlock","src":"26504:124:26","statements":[{"nodeType":"YulAssignment","src":"26514:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26526:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26537:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26522:3:26"},"nodeType":"YulFunctionCall","src":"26522:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26514:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26594:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26607:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"26618:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26603:3:26"},"nodeType":"YulFunctionCall","src":"26603:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"26550:43:26"},"nodeType":"YulFunctionCall","src":"26550:71:26"},"nodeType":"YulExpressionStatement","src":"26550:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26476:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26488:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26499:4:26","type":""}],"src":"26406:222:26"},{"body":{"nodeType":"YulBlock","src":"26662:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26679:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26682:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26672:6:26"},"nodeType":"YulFunctionCall","src":"26672:88:26"},"nodeType":"YulExpressionStatement","src":"26672:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26776:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26779:4:26","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26769:6:26"},"nodeType":"YulFunctionCall","src":"26769:15:26"},"nodeType":"YulExpressionStatement","src":"26769:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26800:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26803:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26793:6:26"},"nodeType":"YulFunctionCall","src":"26793:15:26"},"nodeType":"YulExpressionStatement","src":"26793:15:26"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"26634:180:26"},{"body":{"nodeType":"YulBlock","src":"26862:141:26","statements":[{"nodeType":"YulAssignment","src":"26872:32:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26898:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"26881:16:26"},"nodeType":"YulFunctionCall","src":"26881:23:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26872:5:26"}]},{"body":{"nodeType":"YulBlock","src":"26946:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"26948:16:26"},"nodeType":"YulFunctionCall","src":"26948:18:26"},"nodeType":"YulExpressionStatement","src":"26948:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26919:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"26926:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26916:2:26"},"nodeType":"YulFunctionCall","src":"26916:29:26"},"nodeType":"YulIf","src":"26913:55:26"},{"nodeType":"YulAssignment","src":"26977:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26988:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"26995:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26984:3:26"},"nodeType":"YulFunctionCall","src":"26984:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26977:3:26"}]}]},"name":"increment_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26848:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26858:3:26","type":""}],"src":"26820:183:26"},{"body":{"nodeType":"YulBlock","src":"27052:219:26","statements":[{"nodeType":"YulAssignment","src":"27062:24:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27084:1:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27067:16:26"},"nodeType":"YulFunctionCall","src":"27067:19:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27062:1:26"}]},{"nodeType":"YulAssignment","src":"27095:24:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27117:1:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27100:16:26"},"nodeType":"YulFunctionCall","src":"27100:19:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27095:1:26"}]},{"body":{"nodeType":"YulBlock","src":"27217:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27219:16:26"},"nodeType":"YulFunctionCall","src":"27219:18:26"},"nodeType":"YulExpressionStatement","src":"27219:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27178:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27185:26:26","type":"","value":"0xffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"27213:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27181:3:26"},"nodeType":"YulFunctionCall","src":"27181:34:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27175:2:26"},"nodeType":"YulFunctionCall","src":"27175:41:26"},"nodeType":"YulIf","src":"27172:67:26"},{"nodeType":"YulAssignment","src":"27249:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27260:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"27263:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27256:3:26"},"nodeType":"YulFunctionCall","src":"27256:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"27249:3:26"}]}]},"name":"checked_add_t_uint96","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27039:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"27042:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"27048:3:26","type":""}],"src":"27009:262:26"},{"body":{"nodeType":"YulBlock","src":"27309:28:26","statements":[{"nodeType":"YulAssignment","src":"27319:12:26","value":{"name":"value","nodeType":"YulIdentifier","src":"27326:5:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27319:3:26"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27295:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"27305:3:26","type":""}],"src":"27277:60:26"},{"body":{"nodeType":"YulBlock","src":"27402:81:26","statements":[{"nodeType":"YulAssignment","src":"27412:65:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27469:5:26"}],"functionName":{"name":"cleanup_t_uint96","nodeType":"YulIdentifier","src":"27452:16:26"},"nodeType":"YulFunctionCall","src":"27452:23:26"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"27443:8:26"},"nodeType":"YulFunctionCall","src":"27443:33:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27425:17:26"},"nodeType":"YulFunctionCall","src":"27425:52:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"27412:9:26"}]}]},"name":"convert_t_uint96_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27382:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"27392:9:26","type":""}],"src":"27343:140:26"},{"body":{"nodeType":"YulBlock","src":"27553:65:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27570:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27605:5:26"}],"functionName":{"name":"convert_t_uint96_to_t_uint256","nodeType":"YulIdentifier","src":"27575:29:26"},"nodeType":"YulFunctionCall","src":"27575:36:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27563:6:26"},"nodeType":"YulFunctionCall","src":"27563:49:26"},"nodeType":"YulExpressionStatement","src":"27563:49:26"}]},"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27541:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27548:3:26","type":""}],"src":"27489:129:26"},{"body":{"nodeType":"YulBlock","src":"27748:204:26","statements":[{"nodeType":"YulAssignment","src":"27758:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27770:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27781:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27766:3:26"},"nodeType":"YulFunctionCall","src":"27766:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27758:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"27837:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27850:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27861:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27846:3:26"},"nodeType":"YulFunctionCall","src":"27846:17:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27794:42:26"},"nodeType":"YulFunctionCall","src":"27794:70:26"},"nodeType":"YulExpressionStatement","src":"27794:70:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27917:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27930:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27941:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27926:3:26"},"nodeType":"YulFunctionCall","src":"27926:18:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"27874:42:26"},"nodeType":"YulFunctionCall","src":"27874:71:26"},"nodeType":"YulExpressionStatement","src":"27874:71:26"}]},"name":"abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27712:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27724:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27732:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27743:4:26","type":""}],"src":"27624:328:26"},{"body":{"nodeType":"YulBlock","src":"28083:205:26","statements":[{"nodeType":"YulAssignment","src":"28093:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28105:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28116:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28101:3:26"},"nodeType":"YulFunctionCall","src":"28101:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28093:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28173:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28186:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28197:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28182:3:26"},"nodeType":"YulFunctionCall","src":"28182:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28129:43:26"},"nodeType":"YulFunctionCall","src":"28129:71:26"},"nodeType":"YulExpressionStatement","src":"28129:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28253:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28266:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28277:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28262:3:26"},"nodeType":"YulFunctionCall","src":"28262:18:26"}],"functionName":{"name":"abi_encode_t_uint96_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"28210:42:26"},"nodeType":"YulFunctionCall","src":"28210:71:26"},"nodeType":"YulExpressionStatement","src":"28210:71:26"}]},"name":"abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28047:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28059:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28067:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28078:4:26","type":""}],"src":"27958:330:26"}]},"contents":"{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__to_t_uint16_t_uint32_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value2,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint64t_uint16t_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__to_t_uint32_t_uint32_t_uint32_t_uint32_t_uint32_t_uint24_t_uint24_t_uint24_t_uint24__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint64(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_uint96_t_uint64_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint64t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_uint32_t_uint32_t_uint32__to_t_uint16_t_uint32_t_uint32_t_uint32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"not implemented\")\n\n    }\n\n    function abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32d075b43bd38f25ee5981ec20d2adc90449bf9822d065b5dee1ff7a3dcb82b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"nonexistent request\")\n\n    }\n\n    function abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3ef79182ce6d98492afe1a096e15a790f2acf5883840b8ae9a09f74be7e958f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__to_t_uint256_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint96_t_bool__to_t_uint256_t_uint96_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__to_t_uint256_t_uint256_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint64(value) -> ret {\n        value := cleanup_t_uint64(value)\n        if eq(value, 0xffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_uint96__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"303":[{"length":32,"start":2020},{"length":32,"start":2547}],"305":[{"length":32,"start":1951},{"length":32,"start":5412}],"308":[{"length":32,"start":3255},{"length":32,"start":3586}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061012b5760003560e01c806382359740116100ad578063afc69b5311610071578063afc69b5314610317578063c3f909d414610333578063d7ae1d3014610354578063e82ad7d414610370578063ed5eb06d146103a05761012b565b806382359740146102705780639f87fad71461028c578063a21a23e4146102a8578063a410347f146102c6578063a47c7696146102e45761012b565b80635d3b1d30116100f45780635d3b1d30146101c45780635fbbc0d2146101f457806364d51a2a1461021a5780637341c10c14610238578063808974ff146102545761012b565b80620122911461013057806304c357cb1461015057806308e3898e1461016c578063356dac71146101885780633d18651e146101a6575b600080fd5b6101386103d0565b60405161014793929190611dd1565b60405180910390f35b61016a60048036038101906101659190611ec1565b610430565b005b61018660048036038101906101819190612090565b61046b565b005b6101906109e2565b60405161019d9190612118565b60405180910390f35b6101ae6109f1565b6040516101bb919061215a565b60405180910390f35b6101de60048036038101906101d991906121f9565b610a15565b6040516101eb9190612283565b60405180910390f35b6101fc610c76565b604051610211999897969594939291906122bc565b60405180910390f35b610222610cb5565b60405161022f9190612349565b60405180910390f35b610252600480360381019061024d9190611ec1565b610cd9565b005b61026e60048036038101906102699190612364565b610f6d565b005b61028a600480360381019061028591906123a4565b610fc5565b005b6102a660048036038101906102a19190611ec1565b611000565b005b6102b061136d565b6040516102bd91906123e0565b60405180910390f35b6102ce611522565b6040516102db919061215a565b60405180910390f35b6102fe60048036038101906102f991906123a4565b611546565b60405161030e94939291906124c8565b60405180910390f35b610331600480360381019061032c9190612540565b61174c565b005b61033b611917565b60405161034b9493929190612580565b60405180910390f35b61036e60048036038101906103699190611ec1565b611937565b005b61038a600480360381019061038591906123a4565b611b5a565b60405161039791906125e0565b60405180910390f35b6103ba60048036038101906103b59190611ec1565b611b97565b6040516103c791906125e0565b60405180910390f35b60008060606003621e8480600067ffffffffffffffff8111156103f6576103f5611f4d565b5b6040519080825280602002602001820160405280156104245781602001602082028036833780820191505090505b50925092509250909192565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046290612658565b60405180910390fd5b60005a905060006005600086815260200190815260200160002060000160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1614156104e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104df906126c4565b60405180910390fd5b6000600560008681526020019081526020016000206040518060600160405290816000820160009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016000820160089054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160008201600c9054906101000a900463ffffffff1663ffffffff1663ffffffff1681525050905060008351141561066057806040015163ffffffff1667ffffffffffffffff8111156105b6576105b5611f4d565b5b6040519080825280602002602001820160405280156105e45781602001602082028036833780820191505090505b50925060005b816040015163ffffffff1681101561065a57858160405160200161060f9291906126e4565b6040516020818303038152906040528051906020012060001c84828151811061063b5761063a61270d565b5b60200260200101818152505080806106529061276b565b9150506105ea565b506106a5565b806040015163ffffffff168351146106a4576040517f3f3df5b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b600080631fe543e360e01b87866040516024016106c3929190612872565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050905060008673ffffffffffffffffffffffffffffffffffffffff16846020015163ffffffff1683604051610754919061291c565b60006040518083038160008787f1925050503d8060008114610792576040519150601f19603f3d011682016040523d82523d6000602084013e610797565b606091505b5050905060007f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff165a876107d89190612933565b6107e29190612967565b7f00000000000000000000000000000000000000000000000000000000000000006bffffffffffffffffffffffff1661081b91906129c1565b9050806bffffffffffffffffffffffff1660036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1610156108b9576040517ff4d678b800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060036000876000015167ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff1661090e9190612a17565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550600560008a8152602001908152602001600020600080820160006101000a81549067ffffffffffffffff02191690556000820160086101000a81549063ffffffff021916905560008201600c6101000a81549063ffffffff02191690555050887f7dffc5ae5ee4e2e4df1651cf6ad329a73cebdb728f37ea0187b9b17e036756e48a83856040516109cf93929190612a4b565b60405180910390a2505050505050505050565b6000660e35fa931a0000905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008433610a238282611b97565b610a59576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360008967ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b0a576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060016000815480929190610b1f9061276b565b919050559050600060026000815480929190610b3a9061276b565b91905055905060405180606001604052808a67ffffffffffffffff1681526020018863ffffffff1681526020018763ffffffff168152506005600084815260200190815260200160002060008201518160000160006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060208201518160000160086101000a81548163ffffffff021916908363ffffffff160217905550604082015181600001600c6101000a81548163ffffffff021916908363ffffffff1602179055509050503373ffffffffffffffffffffffffffffffffffffffff168967ffffffffffffffff168b7f63373d1c4696214b898952999c9aaec57dac1ee2723cec59bea6888f489a977285858d8d8d604051610c5e959493929190612a82565b60405180910390a48194505050505095945050505050565b6000806000806000806000806000620186a080620186a080620186a0600080600080985098509850985098509850985098509850909192939495969798565b7f000000000000000000000000000000000000000000000000000000000000000081565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d90576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e0057806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401610df79190612ad5565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000061ffff16600460008667ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805490501415610e88576040517f05a48e0f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610e928484611b97565b15610e9c57610f67565b600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508367ffffffffffffffff167f752ead9f4536ec1319ee3a5a604e1d65eded22e0924251552ba14ae4faa1bbc384604051610f5e9190612ad5565b60405180910390a25b50505050565b610fc18282600067ffffffffffffffff811115610f8d57610f8c611f4d565b5b604051908082528060200260200182016040528015610fbb5781602001602082028036833780820191505090505b5061046b565b5050565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff790612658565b60405180910390fd5b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110b7576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112757806040517fd8a3fb5200000000000000000000000000000000000000000000000000000000815260040161111e9190612ad5565b60405180910390fd5b83836111338282611b97565b611169576040517f71e8313700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600460008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020905060005b8180549050811015611321578673ffffffffffffffffffffffffffffffffffffffff168282815481106111cd576111cc61270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561130e57600082600184805490506112289190612933565b815481106112395761123861270d565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508083838154811061127a5761127961270d565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828054806112d3576112d2612af0565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055905550611321565b80806113199061276b565b915050611197565b508667ffffffffffffffff167ff9bc9d5b5733d904409def43a5ecc888dbdac9a95687780d8fd489d3bb3813fc8760405161135c9190612ad5565b60405180910390a250505050505050565b600080600081819054906101000a900467ffffffffffffffff168092919061139490612b1f565b91906101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055505060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200160006bffffffffffffffffffffffff16815250600360008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff1667ffffffffffffffff167f464722b4166576d3dcbba877b999bc35cf911f4eaf434b7eba68fa113951d0bf336040516115009190612ad5565b60405180910390a260008054906101000a900467ffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060006060600073ffffffffffffffffffffffffffffffffffffffff16600360008767ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156115fe576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600360008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166000600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600460008967ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000208080548060200260200160405190810160405280929190818152602001828054801561173657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116116ec575b5050505050905093509350935093509193509193565b600073ffffffffffffffffffffffffffffffffffffffff16600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156117fd576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600360008467ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16905081600360008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160148282829054906101000a90046bffffffffffffffffffffffff166118959190612b50565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508267ffffffffffffffff167fd39ec07f4e209f627a4c427971473820dc129761ba28de8906bd56f57101d4f88284846118fc9190612b50565b60405161190a929190612bcd565b60405180910390a2505050565b6000806000806004622625a0610a8c618205935093509350935090919293565b816000600360008367ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156119ee576040517f1f6a65b600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a5e57806040517fd8a3fb52000000000000000000000000000000000000000000000000000000008152600401611a559190612ad5565b60405180910390fd5b8367ffffffffffffffff167fe8ed5b475a5b5987aa9165e8731bb78043f39eee32ec5a1169a89e27fcd4981584600360008867ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff16604051611adc929190612bf6565b60405180910390a2600360008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505050505050565b60006040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8e90612658565b60405180910390fd5b600080600460008567ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611c4157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611bf7575b5050505050905060005b8151811015611cc0578373ffffffffffffffffffffffffffffffffffffffff16828281518110611c7e57611c7d61270d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff161415611cad57600192505050611cc7565b8080611cb89061276b565b915050611c4b565b5060009150505b92915050565b600061ffff82169050919050565b611ce481611ccd565b82525050565b600063ffffffff82169050919050565b611d0381611cea565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b611d4881611d35565b82525050565b6000611d5a8383611d3f565b60208301905092915050565b6000602082019050919050565b6000611d7e82611d09565b611d888185611d14565b9350611d9383611d25565b8060005b83811015611dc4578151611dab8882611d4e565b9750611db683611d66565b925050600181019050611d97565b5085935050505092915050565b6000606082019050611de66000830186611cdb565b611df36020830185611cfa565b8181036040830152611e058184611d73565b9050949350505050565b6000604051905090565b600080fd5b600080fd5b600067ffffffffffffffff82169050919050565b611e4081611e23565b8114611e4b57600080fd5b50565b600081359050611e5d81611e37565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611e8e82611e63565b9050919050565b611e9e81611e83565b8114611ea957600080fd5b50565b600081359050611ebb81611e95565b92915050565b60008060408385031215611ed857611ed7611e19565b5b6000611ee685828601611e4e565b9250506020611ef785828601611eac565b9150509250929050565b6000819050919050565b611f1481611f01565b8114611f1f57600080fd5b50565b600081359050611f3181611f0b565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f8582611f3c565b810181811067ffffffffffffffff82111715611fa457611fa3611f4d565b5b80604052505050565b6000611fb7611e0f565b9050611fc38282611f7c565b919050565b600067ffffffffffffffff821115611fe357611fe2611f4d565b5b602082029050602081019050919050565b600080fd5b600061200c61200784611fc8565b611fad565b9050808382526020820190506020840283018581111561202f5761202e611ff4565b5b835b8181101561205857806120448882611f22565b845260208401935050602081019050612031565b5050509392505050565b600082601f83011261207757612076611f37565b5b8135612087848260208601611ff9565b91505092915050565b6000806000606084860312156120a9576120a8611e19565b5b60006120b786828701611f22565b93505060206120c886828701611eac565b925050604084013567ffffffffffffffff8111156120e9576120e8611e1e565b5b6120f586828701612062565b9150509250925092565b6000819050919050565b612112816120ff565b82525050565b600060208201905061212d6000830184612109565b92915050565b60006bffffffffffffffffffffffff82169050919050565b61215481612133565b82525050565b600060208201905061216f600083018461214b565b92915050565b61217e81611d35565b811461218957600080fd5b50565b60008135905061219b81612175565b92915050565b6121aa81611ccd565b81146121b557600080fd5b50565b6000813590506121c7816121a1565b92915050565b6121d681611cea565b81146121e157600080fd5b50565b6000813590506121f3816121cd565b92915050565b600080600080600060a0868803121561221557612214611e19565b5b60006122238882890161218c565b955050602061223488828901611e4e565b9450506040612245888289016121b8565b9350506060612256888289016121e4565b9250506080612267888289016121e4565b9150509295509295909350565b61227d81611f01565b82525050565b60006020820190506122986000830184612274565b92915050565b600062ffffff82169050919050565b6122b68161229e565b82525050565b6000610120820190506122d2600083018c611cfa565b6122df602083018b611cfa565b6122ec604083018a611cfa565b6122f96060830189611cfa565b6123066080830188611cfa565b61231360a08301876122ad565b61232060c08301866122ad565b61232d60e08301856122ad565b61233b6101008301846122ad565b9a9950505050505050505050565b600060208201905061235e6000830184611cdb565b92915050565b6000806040838503121561237b5761237a611e19565b5b600061238985828601611f22565b925050602061239a85828601611eac565b9150509250929050565b6000602082840312156123ba576123b9611e19565b5b60006123c884828501611e4e565b91505092915050565b6123da81611e23565b82525050565b60006020820190506123f560008301846123d1565b92915050565b61240481611e83565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61243f81611e83565b82525050565b60006124518383612436565b60208301905092915050565b6000602082019050919050565b60006124758261240a565b61247f8185612415565b935061248a83612426565b8060005b838110156124bb5781516124a28882612445565b97506124ad8361245d565b92505060018101905061248e565b5085935050505092915050565b60006080820190506124dd600083018761214b565b6124ea60208301866123d1565b6124f760408301856123fb565b8181036060830152612509818461246a565b905095945050505050565b61251d81612133565b811461252857600080fd5b50565b60008135905061253a81612514565b92915050565b6000806040838503121561255757612556611e19565b5b600061256585828601611e4e565b92505060206125768582860161252b565b9150509250929050565b60006080820190506125956000830187611cdb565b6125a26020830186611cfa565b6125af6040830185611cfa565b6125bc6060830184611cfa565b95945050505050565b60008115159050919050565b6125da816125c5565b82525050565b60006020820190506125f560008301846125d1565b92915050565b600082825260208201905092915050565b7f6e6f7420696d706c656d656e7465640000000000000000000000000000000000600082015250565b6000612642600f836125fb565b915061264d8261260c565b602082019050919050565b6000602082019050818103600083015261267181612635565b9050919050565b7f6e6f6e6578697374656e74207265717565737400000000000000000000000000600082015250565b60006126ae6013836125fb565b91506126b982612678565b602082019050919050565b600060208201905081810360008301526126dd816126a1565b9050919050565b60006040820190506126f96000830185612274565b6127066020830184612274565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061277682611f01565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156127a9576127a861273c565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127e981611f01565b82525050565b60006127fb83836127e0565b60208301905092915050565b6000602082019050919050565b600061281f826127b4565b61282981856127bf565b9350612834836127d0565b8060005b8381101561286557815161284c88826127ef565b975061285783612807565b925050600181019050612838565b5085935050505092915050565b60006040820190506128876000830185612274565b81810360208301526128998184612814565b90509392505050565b600081519050919050565b600081905092915050565b60005b838110156128d65780820151818401526020810190506128bb565b838111156128e5576000848401525b50505050565b60006128f6826128a2565b61290081856128ad565b93506129108185602086016128b8565b80840191505092915050565b600061292882846128eb565b915081905092915050565b600061293e82611f01565b915061294983611f01565b92508282101561295c5761295b61273c565b5b828203905092915050565b600061297282611f01565b915061297d83611f01565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156129b6576129b561273c565b5b828202905092915050565b60006129cc82611f01565b91506129d783611f01565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612a0c57612a0b61273c565b5b828201905092915050565b6000612a2282612133565b9150612a2d83612133565b925082821015612a4057612a3f61273c565b5b828203905092915050565b6000606082019050612a606000830186612274565b612a6d602083018561214b565b612a7a60408301846125d1565b949350505050565b600060a082019050612a976000830188612274565b612aa46020830187612274565b612ab16040830186611cdb565b612abe6060830185611cfa565b612acb6080830184611cfa565b9695505050505050565b6000602082019050612aea60008301846123fb565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6000612b2a82611e23565b915067ffffffffffffffff821415612b4557612b4461273c565b5b600182019050919050565b6000612b5b82612133565b9150612b6683612133565b9250826bffffffffffffffffffffffff03821115612b8757612b8661273c565b5b828201905092915050565b6000819050919050565b6000612bb7612bb2612bad84612133565b612b92565b611f01565b9050919050565b612bc781612b9c565b82525050565b6000604082019050612be26000830185612bbe565b612bef6020830184612bbe565b9392505050565b6000604082019050612c0b60008301856123fb565b612c186020830184612bbe565b939250505056fea26469706673582212206c9869b86eeddb970beee3853cfd65144c2d7b88be84beabe162f4d22dc5fde864736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82359740 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xAFC69B53 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xAFC69B53 EQ PUSH2 0x317 JUMPI DUP1 PUSH4 0xC3F909D4 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0xD7AE1D30 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xE82AD7D4 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xED5EB06D EQ PUSH2 0x3A0 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x82359740 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x9F87FAD7 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0xA21A23E4 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xA410347F EQ PUSH2 0x2C6 JUMPI DUP1 PUSH4 0xA47C7696 EQ PUSH2 0x2E4 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH4 0x5D3B1D30 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5D3B1D30 EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x5FBBC0D2 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x64D51A2A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x7341C10C EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x808974FF EQ PUSH2 0x254 JUMPI PUSH2 0x12B JUMP JUMPDEST DUP1 PUSH3 0x12291 EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0x4C357CB EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x8E3898E EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x356DAC71 EQ PUSH2 0x188 JUMPI DUP1 PUSH4 0x3D18651E EQ PUSH2 0x1A6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x3D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x147 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x165 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2090 JUMP JUMPDEST PUSH2 0x46B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x190 PUSH2 0x9E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x2118 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1AE PUSH2 0x9F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH2 0xA15 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x2283 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FC PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH2 0xCB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2349 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x252 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0xCD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2364 JUMP JUMPDEST PUSH2 0xF6D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x285 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0xFC5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1000 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B0 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0x23E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CE PUSH2 0x1522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DB SWAP2 SWAP1 PUSH2 0x215A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F9 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x24C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x2540 JUMP JUMPDEST PUSH2 0x174C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH2 0x1917 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2580 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1937 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x23A4 JUMP JUMPDEST PUSH2 0x1B5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1EC1 JUMP JUMPDEST PUSH2 0x1B97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x25E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x60 PUSH1 0x3 PUSH3 0x1E8480 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F6 JUMPI PUSH2 0x3F5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x424 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP SWAP3 POP SWAP3 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x462 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4DF SWAP1 PUSH2 0x26C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x0 DUP4 MLOAD EQ ISZERO PUSH2 0x660 JUMPI DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5B6 JUMPI PUSH2 0x5B5 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5E4 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP2 LT ISZERO PUSH2 0x65A JUMPI DUP6 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x60F SWAP3 SWAP2 SWAP1 PUSH2 0x26E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 DUP1 PUSH2 0x652 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x5EA JUMP JUMPDEST POP PUSH2 0x6A5 JUMP JUMPDEST DUP1 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 MLOAD EQ PUSH2 0x6A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3F3DF5B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 DUP1 PUSH4 0x1FE543E3 PUSH1 0xE0 SHL DUP8 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x6C3 SWAP3 SWAP2 SWAP1 PUSH2 0x2872 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x20 ADD MLOAD PUSH4 0xFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x291C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x797 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GAS DUP8 PUSH2 0x7D8 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST PUSH2 0x7E2 SWAP2 SWAP1 PUSH2 0x2967 JUMP JUMPDEST PUSH32 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x81B SWAP2 SWAP1 PUSH2 0x29C1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x8B9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF4D678B800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH1 0x0 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x2A17 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP DUP9 PUSH32 0x7DFFC5AE5EE4E2E4DF1651CF6AD329A73CEBDB728F37EA0187B9B17E036756E4 DUP11 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x9CF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A4B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH7 0xE35FA931A0000 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP5 CALLER PUSH2 0xA23 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB0A JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB1F SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB3A SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP12 PUSH32 0x63373D1C4696214B898952999C9AAEC57DAC1EE2723CEC59BEA6888F489A9772 DUP6 DUP6 DUP14 DUP14 DUP14 PUSH1 0x40 MLOAD PUSH2 0xC5E SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A82 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP2 SWAP5 POP POP POP POP POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 DUP1 PUSH3 0x186A0 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP9 POP SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 SWAP9 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE00 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF7 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH2 0xFFFF AND PUSH1 0x4 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP EQ ISZERO PUSH2 0xE88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5A48E0F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE92 DUP5 DUP5 PUSH2 0x1B97 JUMP JUMPDEST ISZERO PUSH2 0xE9C JUMPI PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x752EAD9F4536EC1319EE3A5A604E1D65EDED22E0924251552BA14AE4FAA1BBC3 DUP5 PUSH1 0x40 MLOAD PUSH2 0xF5E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xFC1 DUP3 DUP3 PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF8D JUMPI PUSH2 0xF8C PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xFBB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP PUSH2 0x46B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF7 SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x10B7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1127 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111E SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x1133 DUP3 DUP3 PUSH2 0x1B97 JUMP JUMPDEST PUSH2 0x1169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x71E8313700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x1321 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11CD JUMPI PUSH2 0x11CC PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x130E JUMPI PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 DUP1 SLOAD SWAP1 POP PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x2933 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1239 JUMPI PUSH2 0x1238 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP1 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x127A JUMPI PUSH2 0x1279 PUSH2 0x270D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP1 SLOAD DUP1 PUSH2 0x12D3 JUMPI PUSH2 0x12D2 PUSH2 0x2AF0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE POP PUSH2 0x1321 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1319 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1197 JUMP JUMPDEST POP DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xF9BC9D5B5733D904409DEF43A5ECC888DBDAC9A95687780D8FD489D3BB3813FC DUP8 PUSH1 0x40 MLOAD PUSH2 0x135C SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP2 DUP2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1394 SWAP1 PUSH2 0x2B1F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0x464722B4166576D3DCBBA877B999BC35CF911F4EAF434B7EBA68FA113951D0BF CALLER PUSH1 0x40 MLOAD PUSH2 0x1500 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP8 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x15FE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 PUSH1 0x0 DUP10 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1736 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x16EC JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1895 SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xD39EC07F4E209F627A4C427971473820DC129761BA28DE8906BD56F57101D4F8 DUP3 DUP5 DUP5 PUSH2 0x18FC SWAP2 SWAP1 PUSH2 0x2B50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190A SWAP3 SWAP2 SWAP1 PUSH2 0x2BCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x4 PUSH3 0x2625A0 PUSH2 0xA8C PUSH2 0x8205 SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x19EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F6A65B600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A5E JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xD8A3FB5200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x2AD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH32 0xE8ED5B475A5B5987AA9165E8731BB78043F39EEE32EC5A1169A89E27FCD49815 DUP5 PUSH1 0x3 PUSH1 0x0 DUP9 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x1ADC SWAP3 SWAP2 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x0 DUP3 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8E SWAP1 PUSH2 0x2658 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1C41 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1BF7 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1CC0 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1C7E JUMPI PUSH2 0x1C7D PUSH2 0x270D JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1CAD JUMPI PUSH1 0x1 SWAP3 POP POP POP PUSH2 0x1CC7 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1CB8 SWAP1 PUSH2 0x276B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C4B JUMP JUMPDEST POP PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CE4 DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D03 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D48 DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP4 DUP4 PUSH2 0x1D3F JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D7E DUP3 PUSH2 0x1D09 JUMP JUMPDEST PUSH2 0x1D88 DUP2 DUP6 PUSH2 0x1D14 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D93 DUP4 PUSH2 0x1D25 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1DC4 JUMPI DUP2 MLOAD PUSH2 0x1DAB DUP9 DUP3 PUSH2 0x1D4E JUMP JUMPDEST SWAP8 POP PUSH2 0x1DB6 DUP4 PUSH2 0x1D66 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1D97 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1DE6 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x1DF3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x1E05 DUP2 DUP5 PUSH2 0x1D73 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E40 DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E5D DUP2 PUSH2 0x1E37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E DUP3 PUSH2 0x1E63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E9E DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EBB DUP2 PUSH2 0x1E95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1EF7 DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F14 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F31 DUP2 PUSH2 0x1F0B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1F85 DUP3 PUSH2 0x1F3C JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1FA4 JUMPI PUSH2 0x1FA3 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB7 PUSH2 0x1E0F JUMP JUMPDEST SWAP1 POP PUSH2 0x1FC3 DUP3 DUP3 PUSH2 0x1F7C JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FE3 JUMPI PUSH2 0x1FE2 PUSH2 0x1F4D JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x200C PUSH2 0x2007 DUP5 PUSH2 0x1FC8 JUMP JUMPDEST PUSH2 0x1FAD JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x202F JUMPI PUSH2 0x202E PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2058 JUMPI DUP1 PUSH2 0x2044 DUP9 DUP3 PUSH2 0x1F22 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2031 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1F37 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2087 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1FF9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x20A9 JUMPI PUSH2 0x20A8 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20B7 DUP7 DUP3 DUP8 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x20C8 DUP7 DUP3 DUP8 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E9 JUMPI PUSH2 0x20E8 PUSH2 0x1E1E JUMP JUMPDEST JUMPDEST PUSH2 0x20F5 DUP7 DUP3 DUP8 ADD PUSH2 0x2062 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2112 DUP2 PUSH2 0x20FF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x212D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2109 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2154 DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x216F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x214B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1D35 JUMP JUMPDEST DUP2 EQ PUSH2 0x2189 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x219B DUP2 PUSH2 0x2175 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21AA DUP2 PUSH2 0x1CCD JUMP JUMPDEST DUP2 EQ PUSH2 0x21B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21C7 DUP2 PUSH2 0x21A1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x21D6 DUP2 PUSH2 0x1CEA JUMP JUMPDEST DUP2 EQ PUSH2 0x21E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21F3 DUP2 PUSH2 0x21CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2215 JUMPI PUSH2 0x2214 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2223 DUP9 DUP3 DUP10 ADD PUSH2 0x218C JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2234 DUP9 DUP3 DUP10 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2245 DUP9 DUP3 DUP10 ADD PUSH2 0x21B8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2256 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2267 DUP9 DUP3 DUP10 ADD PUSH2 0x21E4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x227D DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2298 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22B6 DUP2 PUSH2 0x229E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x22D2 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22DF PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22EC PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2306 PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2313 PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x2320 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x232D PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x22AD JUMP JUMPDEST PUSH2 0x233B PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x22AD JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x235E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x237B JUMPI PUSH2 0x237A PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2389 DUP6 DUP3 DUP7 ADD PUSH2 0x1F22 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x239A DUP6 DUP3 DUP7 ADD PUSH2 0x1EAC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23BA JUMPI PUSH2 0x23B9 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23C8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23DA DUP2 PUSH2 0x1E23 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x23F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2404 DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243F DUP2 PUSH2 0x1E83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2451 DUP4 DUP4 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2475 DUP3 PUSH2 0x240A JUMP JUMPDEST PUSH2 0x247F DUP2 DUP6 PUSH2 0x2415 JUMP JUMPDEST SWAP4 POP PUSH2 0x248A DUP4 PUSH2 0x2426 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24BB JUMPI DUP2 MLOAD PUSH2 0x24A2 DUP9 DUP3 PUSH2 0x2445 JUMP JUMPDEST SWAP8 POP PUSH2 0x24AD DUP4 PUSH2 0x245D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x248E JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x24DD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x24EA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x23D1 JUMP JUMPDEST PUSH2 0x24F7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2509 DUP2 DUP5 PUSH2 0x246A JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x251D DUP2 PUSH2 0x2133 JUMP JUMPDEST DUP2 EQ PUSH2 0x2528 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x253A DUP2 PUSH2 0x2514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2557 JUMPI PUSH2 0x2556 PUSH2 0x1E19 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2565 DUP6 DUP3 DUP7 ADD PUSH2 0x1E4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2576 DUP6 DUP3 DUP7 ADD PUSH2 0x252B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2595 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x25A2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25AF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x25BC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25DA DUP2 PUSH2 0x25C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420696D706C656D656E7465640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2642 PUSH1 0xF DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x264D DUP3 PUSH2 0x260C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2671 DUP2 PUSH2 0x2635 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F6E6578697374656E74207265717565737400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x26AE PUSH1 0x13 DUP4 PUSH2 0x25FB JUMP JUMPDEST SWAP2 POP PUSH2 0x26B9 DUP3 PUSH2 0x2678 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x26DD DUP2 PUSH2 0x26A1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x26F9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2706 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2274 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2776 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x27A9 JUMPI PUSH2 0x27A8 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27E9 DUP2 PUSH2 0x1F01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27FB DUP4 DUP4 PUSH2 0x27E0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x281F DUP3 PUSH2 0x27B4 JUMP JUMPDEST PUSH2 0x2829 DUP2 DUP6 PUSH2 0x27BF JUMP JUMPDEST SWAP4 POP PUSH2 0x2834 DUP4 PUSH2 0x27D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2865 JUMPI DUP2 MLOAD PUSH2 0x284C DUP9 DUP3 PUSH2 0x27EF JUMP JUMPDEST SWAP8 POP PUSH2 0x2857 DUP4 PUSH2 0x2807 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2838 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2887 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2274 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x2899 DUP2 DUP5 PUSH2 0x2814 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x28D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28BB JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x28E5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F6 DUP3 PUSH2 0x28A2 JUMP JUMPDEST PUSH2 0x2900 DUP2 DUP6 PUSH2 0x28AD JUMP JUMPDEST SWAP4 POP PUSH2 0x2910 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28B8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2928 DUP3 DUP5 PUSH2 0x28EB JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x293E DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x2949 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x295C JUMPI PUSH2 0x295B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2972 DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x297D DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x29B6 JUMPI PUSH2 0x29B5 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29CC DUP3 PUSH2 0x1F01 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D7 DUP4 PUSH2 0x1F01 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2A0C JUMPI PUSH2 0x2A0B PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A22 DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A2D DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2A60 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2A6D PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x214B JUMP JUMPDEST PUSH2 0x2A7A PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x25D1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2A97 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AA4 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x2AB1 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1CDB JUMP JUMPDEST PUSH2 0x2ABE PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1CFA JUMP JUMPDEST PUSH2 0x2ACB PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1CFA JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AEA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2B2A DUP3 PUSH2 0x1E23 JUMP JUMPDEST SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x2B45 JUMPI PUSH2 0x2B44 PUSH2 0x273C JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B5B DUP3 PUSH2 0x2133 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B66 DUP4 PUSH2 0x2133 JUMP JUMPDEST SWAP3 POP DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x2B87 JUMPI PUSH2 0x2B86 PUSH2 0x273C JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BB7 PUSH2 0x2BB2 PUSH2 0x2BAD DUP5 PUSH2 0x2133 JUMP JUMPDEST PUSH2 0x2B92 JUMP JUMPDEST PUSH2 0x1F01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BC7 DUP2 PUSH2 0x2B9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BE2 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2BBE JUMP JUMPDEST PUSH2 0x2BEF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2C0B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23FB JUMP JUMPDEST PUSH2 0x2C18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BBE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH13 0x9869B86EEDDB970BEEE3853CFD PUSH6 0x144C2D7B88BE DUP5 0xBE 0xAB 0xE1 PUSH3 0xF4D22D 0xC5 REVERT 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"254:9107:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6986:184;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;8985:135;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3391:1142;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8864:117;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;317:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5081:756;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8270:590;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;395:43;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7174:345;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2953:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9124:115;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7523:489;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5841:269;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;353:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6114:399;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;4735:342;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8016:250;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6517:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9243:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1947:290;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6986:184;7069:6;7083;7097:16;7136:1;7139:7;7162:1;7148:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7128:37;;;;;;6986:184;;;:::o;8985:135::-;9090:25;;;;;;;;;;:::i;:::-;;;;;;;;3391:1142;3524:16;3543:9;3524:28;;3594:1;3562:10;:22;3573:10;3562:22;;;;;;;;;;;:28;;;;;;;;;;;;:33;;;3558:83;;;3605:29;;;;;;;;;;:::i;:::-;;;;;;;;3558:83;3646:18;3667:10;:22;3678:10;3667:22;;;;;;;;;;;3646:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3717:1;3700:6;:13;:18;3696:284;;;3751:3;:12;;;3737:27;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3728:36;;3777:9;3772:119;3796:3;:12;;;3792:16;;:1;:16;3772:119;;;3866:10;3878:1;3855:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3845:36;;;;;;3837:45;;3825:6;3832:1;3825:9;;;;;;;;:::i;:::-;;;;;;;:57;;;;;3810:3;;;;;:::i;:::-;;;;3772:119;;;;3696:284;;;3924:3;:12;;;3907:29;;:6;:13;:29;3903:77;;3953:20;;;;;;;;;;;;;;3903:77;3696:284;3986:19;4011:20;4057:32;;;4091:10;4103:6;4034:76;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4011:99;;4117:12;4135:9;:14;;4155:3;:20;;;4135:50;;4177:7;4135:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4116:69;;;4192:14;4253;4228:39;;4240:9;4229:8;:20;;;;:::i;:::-;4228:39;;;;:::i;:::-;4216:8;:52;;;;;;:::i;:::-;4192:77;;4316:7;4279:44;;:15;:26;4295:3;:9;;;4279:26;;;;;;;;;;;;;;;:34;;;;;;;;;;;;:44;;;4275:93;;;4340:21;;;;;;;;;;;;;;4275:93;4411:7;4373:15;:26;4389:3;:9;;;4373:26;;;;;;;;;;;;;;;:34;;;:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;4432:10;:22;4443:10;4432:22;;;;;;;;;;;;4424:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4487:10;4466:62;4499:10;4511:7;4520;4466:62;;;;;;;;:::i;:::-;;;;;;;;3518:1015;;;;;;3391:1142;;;:::o;8864:117::-;8924:6;8945:16;8938:23;;8864:117;:::o;317:32::-;;;:::o;5081:756::-;5312:7;5283:6;5291:10;2313:34;2329:6;2337:9;2313:15;:34::i;:::-;2308:80;;2364:17;;;;;;;;;;;;;;2308:80;5372:1:::1;5331:43;;:15;:23;5347:6;5331:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;5327:92;;;5391:21;;;;;;;;;;;;;;5327:92;5425:17;5445:15;;:17;;;;;;;;;:::i;:::-;;;;;5425:37;;5468:15;5486:13;;:15;;;;;;;;;:::i;:::-;;;;;5468:33;;5532:82;;;;;;;;5548:6;5532:82;;;;;;5574:17;5532:82;;;;;;5603:9;5532:82;;;;::::0;5508:10:::1;:21;5519:9;5508:21;;;;;;;;;;;:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5794:10;5626:184;;5702:6;5626:184;;5654:8;5626:184;5670:9;5687:7;5716:28;5752:17;5777:9;5626:184;;;;;;;;;;:::i;:::-;;;;;;;;5823:9;5816:16;;;;5081:756:::0;;;;;;;;;:::o;8270:590::-;8336:37;8381;8426;8471;8516;8561:19;8588;8615;8642;8691:6;8717;8743;8769;8795;8821:1;8830;8839;8848;8676:179;;;;;;;;;;;;;;;;;;8270:590;;;;;;;;;:::o;395:43::-;;;:::o;7174:345::-;7260:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;7308:13:::1;7278:43;;:11;:19;7290:6;7278:19;;;;;;;;;;;;;;;:26;;;;:43;7274:89;;;7338:18;;;;;;;;;;;;;;7274:89;7373:34;7389:6;7397:9;7373:15;:34::i;:::-;7369:61;;;7417:7;;7369:61;7436:11;:19;7448:6;7436:19;;;;;;;;;;;;;;;7461:9;7436:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7496:6;7482:32;;;7504:9;7482:32;;;;;;:::i;:::-;;;;;;;;6976:1;6773:209:::0;7174:345;;;:::o;2953:158::-;3035:71;3066:10;3078:9;3103:1;3089:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3035:30;:71::i;:::-;2953:158;;:::o;9124:115::-;9209:25;;;;;;;;;;:::i;:::-;;;;;;;;7523:489;7624:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;7654:6:::1;7662:9;2313:34;2329:6;2337:9;2313:15;:34::i;:::-;2308:80;;2364:17;;;;;;;;;;;;;;2308:80;7681:27:::2;7711:11;:19;7723:6;7711:19;;;;;;;;;;;;;;;7681:49;;7741:9;7736:226;7760:9;:16;;;;7756:1;:20;7736:226;;;7811:9;7795:25;;:9;7805:1;7795:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:25;;;7791:165;;;7832:12;7847:9;7876:1;7857:9;:16;;;;:20;;;;:::i;:::-;7847:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7832:46;;7903:4;7888:9;7898:1;7888:12;;;;;;;;:::i;:::-;;;;;;;;;;:19;;;;;;;;;;;;;;;;;;7917:9;:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;7942:5;;;7791:165;7778:3;;;;;:::i;:::-;;;;7736:226;;;;7989:6;7973:34;;;7997:9;7973:34;;;;;;:::i;:::-;;;;;;;;7675:337;6976:1:::1;;6773:209:::0;7523:489;;;:::o;5841:269::-;5898:13;5919:14;;:16;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;5975:45;;;;;;;;5996:10;5975:45;;;;;;6017:1;5975:45;;;;;5941:15;:31;5957:14;;;;;;;;;;;5941:31;;;;;;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6051:14;;;;;;;;;;6031:47;;;6067:10;6031:47;;;;;;:::i;:::-;;;;;;;;6091:14;;;;;;;;;;6084:21;;5841:269;:::o;353:38::-;;;:::o;6114:399::-;6209:14;6231:15;6254:13;6275:26;6361:1;6320:43;;:15;:23;6336:6;6320:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;6316:92;;;6380:21;;;;;;;;;;;;;;6316:92;6421:15;:23;6437:6;6421:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6454:1;6457:15;:23;6473:6;6457:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6488:11;:19;6500:6;6488:19;;;;;;;;;;;;;;;6413:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6114:399;;;;;:::o;4735:342::-;4850:1;4809:43;;:15;:23;4825:6;4809:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;:43;;;4805:92;;;4869:21;;;;;;;;;;;;;;4805:92;4902:17;4922:15;:23;4938:6;4922:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;4902:51;;4994:7;4959:15;:23;4975:6;4959:23;;;;;;;;;;;;;;;:31;;;:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;5031:6;5012:60;;;5039:10;5064:7;5051:10;:20;;;;:::i;:::-;5012:60;;;;;;;:::i;:::-;;;;;;;;4799:278;4735:342;;:::o;8016:250::-;8079:34;8121:18;8147:23;8178:33;8234:1;8237:9;8248:5;8255;8226:35;;;;;;;;8016:250;;;;:::o;6517:215::-;6604:6;6779:13;6795:15;:23;6811:6;6795:23;;;;;;;;;;;;;;;:29;;;;;;;;;;;;6779:45;;6851:1;6834:19;;:5;:19;;;6830:68;;;6870:21;;;;;;;;;;;;;;6830:68;6921:5;6907:19;;:10;:19;;;6903:68;;6958:5;6943:21;;;;;;;;;;;:::i;:::-;;;;;;;;6903:68;6644:6:::1;6623:66;;;6652:3;6657:15;:23;6673:6;6657:23;;;;;;;;;;;;;;;:31;;;;;;;;;;;;6623:66;;;;;;;:::i;:::-;;;;;;;;6703:15;:23;6719:6;6703:23;;;;;;;;;;;;;;;;6695:32:::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6773:209:::0;6517:215;;;:::o;9243:116::-;9317:4;9329:25;;;;;;;;;;:::i;:::-;;;;;;;;1947:290;2027:4;2039:26;2068:11;:19;2080:6;2068:19;;;;;;;;;;;;;;;2039:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2098:9;2093:122;2117:9;:16;2113:1;:20;2093:122;;;2168:9;2152:25;;:9;2162:1;2152:12;;;;;;;;:::i;:::-;;;;;;;;:25;;;2148:61;;;2196:4;2189:11;;;;;;2148:61;2135:3;;;;;:::i;:::-;;;;2093:122;;;;2227:5;2220:12;;;1947:290;;;;;:::o;7:89:26:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:93::-;259:7;299:10;292:5;288:22;277:33;;223:93;;;:::o;322:115::-;407:23;424:5;407:23;:::i;:::-;402:3;395:36;322:115;;:::o;443:114::-;510:6;544:5;538:12;528:22;;443:114;;;:::o;563:184::-;662:11;696:6;691:3;684:19;736:4;731:3;727:14;712:29;;563:184;;;;:::o;753:132::-;820:4;843:3;835:11;;873:4;868:3;864:14;856:22;;753:132;;;:::o;891:77::-;928:7;957:5;946:16;;891:77;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:179::-;1157:10;1178:46;1220:3;1212:6;1178:46;:::i;:::-;1256:4;1251:3;1247:14;1233:28;;1088:179;;;;:::o;1273:113::-;1343:4;1375;1370:3;1366:14;1358:22;;1273:113;;;:::o;1422:732::-;1541:3;1570:54;1618:5;1570:54;:::i;:::-;1640:86;1719:6;1714:3;1640:86;:::i;:::-;1633:93;;1750:56;1800:5;1750:56;:::i;:::-;1829:7;1860:1;1845:284;1870:6;1867:1;1864:13;1845:284;;;1946:6;1940:13;1973:63;2032:3;2017:13;1973:63;:::i;:::-;1966:70;;2059:60;2112:6;2059:60;:::i;:::-;2049:70;;1905:224;1892:1;1889;1885:9;1880:14;;1845:284;;;1849:14;2145:3;2138:10;;1546:608;;;1422:732;;;;:::o;2160:585::-;2355:4;2393:2;2382:9;2378:18;2370:26;;2406:69;2472:1;2461:9;2457:17;2448:6;2406:69;:::i;:::-;2485:70;2551:2;2540:9;2536:18;2527:6;2485:70;:::i;:::-;2602:9;2596:4;2592:20;2587:2;2576:9;2572:18;2565:48;2630:108;2733:4;2724:6;2630:108;:::i;:::-;2622:116;;2160:585;;;;;;:::o;2751:75::-;2784:6;2817:2;2811:9;2801:19;;2751:75;:::o;2832:117::-;2941:1;2938;2931:12;2955:117;3064:1;3061;3054:12;3078:101;3114:7;3154:18;3147:5;3143:30;3132:41;;3078:101;;;:::o;3185:120::-;3257:23;3274:5;3257:23;:::i;:::-;3250:5;3247:34;3237:62;;3295:1;3292;3285:12;3237:62;3185:120;:::o;3311:137::-;3356:5;3394:6;3381:20;3372:29;;3410:32;3436:5;3410:32;:::i;:::-;3311:137;;;;:::o;3454:126::-;3491:7;3531:42;3524:5;3520:54;3509:65;;3454:126;;;:::o;3586:96::-;3623:7;3652:24;3670:5;3652:24;:::i;:::-;3641:35;;3586:96;;;:::o;3688:122::-;3761:24;3779:5;3761:24;:::i;:::-;3754:5;3751:35;3741:63;;3800:1;3797;3790:12;3741:63;3688:122;:::o;3816:139::-;3862:5;3900:6;3887:20;3878:29;;3916:33;3943:5;3916:33;:::i;:::-;3816:139;;;;:::o;3961:472::-;4028:6;4036;4085:2;4073:9;4064:7;4060:23;4056:32;4053:119;;;4091:79;;:::i;:::-;4053:119;4211:1;4236:52;4280:7;4271:6;4260:9;4256:22;4236:52;:::i;:::-;4226:62;;4182:116;4337:2;4363:53;4408:7;4399:6;4388:9;4384:22;4363:53;:::i;:::-;4353:63;;4308:118;3961:472;;;;;:::o;4439:77::-;4476:7;4505:5;4494:16;;4439:77;;;:::o;4522:122::-;4595:24;4613:5;4595:24;:::i;:::-;4588:5;4585:35;4575:63;;4634:1;4631;4624:12;4575:63;4522:122;:::o;4650:139::-;4696:5;4734:6;4721:20;4712:29;;4750:33;4777:5;4750:33;:::i;:::-;4650:139;;;;:::o;4795:117::-;4904:1;4901;4894:12;4918:102;4959:6;5010:2;5006:7;5001:2;4994:5;4990:14;4986:28;4976:38;;4918:102;;;:::o;5026:180::-;5074:77;5071:1;5064:88;5171:4;5168:1;5161:15;5195:4;5192:1;5185:15;5212:281;5295:27;5317:4;5295:27;:::i;:::-;5287:6;5283:40;5425:6;5413:10;5410:22;5389:18;5377:10;5374:34;5371:62;5368:88;;;5436:18;;:::i;:::-;5368:88;5476:10;5472:2;5465:22;5255:238;5212:281;;:::o;5499:129::-;5533:6;5560:20;;:::i;:::-;5550:30;;5589:33;5617:4;5609:6;5589:33;:::i;:::-;5499:129;;;:::o;5634:311::-;5711:4;5801:18;5793:6;5790:30;5787:56;;;5823:18;;:::i;:::-;5787:56;5873:4;5865:6;5861:17;5853:25;;5933:4;5927;5923:15;5915:23;;5634:311;;;:::o;5951:117::-;6060:1;6057;6050:12;6091:710;6187:5;6212:81;6228:64;6285:6;6228:64;:::i;:::-;6212:81;:::i;:::-;6203:90;;6313:5;6342:6;6335:5;6328:21;6376:4;6369:5;6365:16;6358:23;;6429:4;6421:6;6417:17;6409:6;6405:30;6458:3;6450:6;6447:15;6444:122;;;6477:79;;:::i;:::-;6444:122;6592:6;6575:220;6609:6;6604:3;6601:15;6575:220;;;6684:3;6713:37;6746:3;6734:10;6713:37;:::i;:::-;6708:3;6701:50;6780:4;6775:3;6771:14;6764:21;;6651:144;6635:4;6630:3;6626:14;6619:21;;6575:220;;;6579:21;6193:608;;6091:710;;;;;:::o;6824:370::-;6895:5;6944:3;6937:4;6929:6;6925:17;6921:27;6911:122;;6952:79;;:::i;:::-;6911:122;7069:6;7056:20;7094:94;7184:3;7176:6;7169:4;7161:6;7157:17;7094:94;:::i;:::-;7085:103;;6901:293;6824:370;;;;:::o;7200:829::-;7302:6;7310;7318;7367:2;7355:9;7346:7;7342:23;7338:32;7335:119;;;7373:79;;:::i;:::-;7335:119;7493:1;7518:53;7563:7;7554:6;7543:9;7539:22;7518:53;:::i;:::-;7508:63;;7464:117;7620:2;7646:53;7691:7;7682:6;7671:9;7667:22;7646:53;:::i;:::-;7636:63;;7591:118;7776:2;7765:9;7761:18;7748:32;7807:18;7799:6;7796:30;7793:117;;;7829:79;;:::i;:::-;7793:117;7934:78;8004:7;7995:6;7984:9;7980:22;7934:78;:::i;:::-;7924:88;;7719:303;7200:829;;;;;:::o;8035:76::-;8071:7;8100:5;8089:16;;8035:76;;;:::o;8117:115::-;8202:23;8219:5;8202:23;:::i;:::-;8197:3;8190:36;8117:115;;:::o;8238:218::-;8329:4;8367:2;8356:9;8352:18;8344:26;;8380:69;8446:1;8435:9;8431:17;8422:6;8380:69;:::i;:::-;8238:218;;;;:::o;8462:109::-;8498:7;8538:26;8531:5;8527:38;8516:49;;8462:109;;;:::o;8577:115::-;8662:23;8679:5;8662:23;:::i;:::-;8657:3;8650:36;8577:115;;:::o;8698:218::-;8789:4;8827:2;8816:9;8812:18;8804:26;;8840:69;8906:1;8895:9;8891:17;8882:6;8840:69;:::i;:::-;8698:218;;;;:::o;8922:122::-;8995:24;9013:5;8995:24;:::i;:::-;8988:5;8985:35;8975:63;;9034:1;9031;9024:12;8975:63;8922:122;:::o;9050:139::-;9096:5;9134:6;9121:20;9112:29;;9150:33;9177:5;9150:33;:::i;:::-;9050:139;;;;:::o;9195:120::-;9267:23;9284:5;9267:23;:::i;:::-;9260:5;9257:34;9247:62;;9305:1;9302;9295:12;9247:62;9195:120;:::o;9321:137::-;9366:5;9404:6;9391:20;9382:29;;9420:32;9446:5;9420:32;:::i;:::-;9321:137;;;;:::o;9464:120::-;9536:23;9553:5;9536:23;:::i;:::-;9529:5;9526:34;9516:62;;9574:1;9571;9564:12;9516:62;9464:120;:::o;9590:137::-;9635:5;9673:6;9660:20;9651:29;;9689:32;9715:5;9689:32;:::i;:::-;9590:137;;;;:::o;9733:903::-;9824:6;9832;9840;9848;9856;9905:3;9893:9;9884:7;9880:23;9876:33;9873:120;;;9912:79;;:::i;:::-;9873:120;10032:1;10057:53;10102:7;10093:6;10082:9;10078:22;10057:53;:::i;:::-;10047:63;;10003:117;10159:2;10185:52;10229:7;10220:6;10209:9;10205:22;10185:52;:::i;:::-;10175:62;;10130:117;10286:2;10312:52;10356:7;10347:6;10336:9;10332:22;10312:52;:::i;:::-;10302:62;;10257:117;10413:2;10439:52;10483:7;10474:6;10463:9;10459:22;10439:52;:::i;:::-;10429:62;;10384:117;10540:3;10567:52;10611:7;10602:6;10591:9;10587:22;10567:52;:::i;:::-;10557:62;;10511:118;9733:903;;;;;;;;:::o;10642:118::-;10729:24;10747:5;10729:24;:::i;:::-;10724:3;10717:37;10642:118;;:::o;10766:222::-;10859:4;10897:2;10886:9;10882:18;10874:26;;10910:71;10978:1;10967:9;10963:17;10954:6;10910:71;:::i;:::-;10766:222;;;;:::o;10994:91::-;11030:7;11070:8;11063:5;11059:20;11048:31;;10994:91;;;:::o;11091:115::-;11176:23;11193:5;11176:23;:::i;:::-;11171:3;11164:36;11091:115;;:::o;11212:1072::-;11511:4;11549:3;11538:9;11534:19;11526:27;;11563:69;11629:1;11618:9;11614:17;11605:6;11563:69;:::i;:::-;11642:70;11708:2;11697:9;11693:18;11684:6;11642:70;:::i;:::-;11722;11788:2;11777:9;11773:18;11764:6;11722:70;:::i;:::-;11802;11868:2;11857:9;11853:18;11844:6;11802:70;:::i;:::-;11882:71;11948:3;11937:9;11933:19;11924:6;11882:71;:::i;:::-;11963;12029:3;12018:9;12014:19;12005:6;11963:71;:::i;:::-;12044;12110:3;12099:9;12095:19;12086:6;12044:71;:::i;:::-;12125;12191:3;12180:9;12176:19;12167:6;12125:71;:::i;:::-;12206;12272:3;12261:9;12257:19;12248:6;12206:71;:::i;:::-;11212:1072;;;;;;;;;;;;:::o;12290:218::-;12381:4;12419:2;12408:9;12404:18;12396:26;;12432:69;12498:1;12487:9;12483:17;12474:6;12432:69;:::i;:::-;12290:218;;;;:::o;12514:474::-;12582:6;12590;12639:2;12627:9;12618:7;12614:23;12610:32;12607:119;;;12645:79;;:::i;:::-;12607:119;12765:1;12790:53;12835:7;12826:6;12815:9;12811:22;12790:53;:::i;:::-;12780:63;;12736:117;12892:2;12918:53;12963:7;12954:6;12943:9;12939:22;12918:53;:::i;:::-;12908:63;;12863:118;12514:474;;;;;:::o;12994:327::-;13052:6;13101:2;13089:9;13080:7;13076:23;13072:32;13069:119;;;13107:79;;:::i;:::-;13069:119;13227:1;13252:52;13296:7;13287:6;13276:9;13272:22;13252:52;:::i;:::-;13242:62;;13198:116;12994:327;;;;:::o;13327:115::-;13412:23;13429:5;13412:23;:::i;:::-;13407:3;13400:36;13327:115;;:::o;13448:218::-;13539:4;13577:2;13566:9;13562:18;13554:26;;13590:69;13656:1;13645:9;13641:17;13632:6;13590:69;:::i;:::-;13448:218;;;;:::o;13672:118::-;13759:24;13777:5;13759:24;:::i;:::-;13754:3;13747:37;13672:118;;:::o;13796:114::-;13863:6;13897:5;13891:12;13881:22;;13796:114;;;:::o;13916:184::-;14015:11;14049:6;14044:3;14037:19;14089:4;14084:3;14080:14;14065:29;;13916:184;;;;:::o;14106:132::-;14173:4;14196:3;14188:11;;14226:4;14221:3;14217:14;14209:22;;14106:132;;;:::o;14244:108::-;14321:24;14339:5;14321:24;:::i;:::-;14316:3;14309:37;14244:108;;:::o;14358:179::-;14427:10;14448:46;14490:3;14482:6;14448:46;:::i;:::-;14526:4;14521:3;14517:14;14503:28;;14358:179;;;;:::o;14543:113::-;14613:4;14645;14640:3;14636:14;14628:22;;14543:113;;;:::o;14692:732::-;14811:3;14840:54;14888:5;14840:54;:::i;:::-;14910:86;14989:6;14984:3;14910:86;:::i;:::-;14903:93;;15020:56;15070:5;15020:56;:::i;:::-;15099:7;15130:1;15115:284;15140:6;15137:1;15134:13;15115:284;;;15216:6;15210:13;15243:63;15302:3;15287:13;15243:63;:::i;:::-;15236:70;;15329:60;15382:6;15329:60;:::i;:::-;15319:70;;15175:224;15162:1;15159;15155:9;15150:14;;15115:284;;;15119:14;15415:3;15408:10;;14816:608;;;14692:732;;;;:::o;15430:696::-;15653:4;15691:3;15680:9;15676:19;15668:27;;15705:69;15771:1;15760:9;15756:17;15747:6;15705:69;:::i;:::-;15784:70;15850:2;15839:9;15835:18;15826:6;15784:70;:::i;:::-;15864:72;15932:2;15921:9;15917:18;15908:6;15864:72;:::i;:::-;15983:9;15977:4;15973:20;15968:2;15957:9;15953:18;15946:48;16011:108;16114:4;16105:6;16011:108;:::i;:::-;16003:116;;15430:696;;;;;;;:::o;16132:120::-;16204:23;16221:5;16204:23;:::i;:::-;16197:5;16194:34;16184:62;;16242:1;16239;16232:12;16184:62;16132:120;:::o;16258:137::-;16303:5;16341:6;16328:20;16319:29;;16357:32;16383:5;16357:32;:::i;:::-;16258:137;;;;:::o;16401:470::-;16467:6;16475;16524:2;16512:9;16503:7;16499:23;16495:32;16492:119;;;16530:79;;:::i;:::-;16492:119;16650:1;16675:52;16719:7;16710:6;16699:9;16695:22;16675:52;:::i;:::-;16665:62;;16621:116;16776:2;16802:52;16846:7;16837:6;16826:9;16822:22;16802:52;:::i;:::-;16792:62;;16747:117;16401:470;;;;;:::o;16877:537::-;17046:4;17084:3;17073:9;17069:19;17061:27;;17098:69;17164:1;17153:9;17149:17;17140:6;17098:69;:::i;:::-;17177:70;17243:2;17232:9;17228:18;17219:6;17177:70;:::i;:::-;17257;17323:2;17312:9;17308:18;17299:6;17257:70;:::i;:::-;17337;17403:2;17392:9;17388:18;17379:6;17337:70;:::i;:::-;16877:537;;;;;;;:::o;17420:90::-;17454:7;17497:5;17490:13;17483:21;17472:32;;17420:90;;;:::o;17516:109::-;17597:21;17612:5;17597:21;:::i;:::-;17592:3;17585:34;17516:109;;:::o;17631:210::-;17718:4;17756:2;17745:9;17741:18;17733:26;;17769:65;17831:1;17820:9;17816:17;17807:6;17769:65;:::i;:::-;17631:210;;;;:::o;17847:169::-;17931:11;17965:6;17960:3;17953:19;18005:4;18000:3;17996:14;17981:29;;17847:169;;;;:::o;18022:165::-;18162:17;18158:1;18150:6;18146:14;18139:41;18022:165;:::o;18193:366::-;18335:3;18356:67;18420:2;18415:3;18356:67;:::i;:::-;18349:74;;18432:93;18521:3;18432:93;:::i;:::-;18550:2;18545:3;18541:12;18534:19;;18193:366;;;:::o;18565:419::-;18731:4;18769:2;18758:9;18754:18;18746:26;;18818:9;18812:4;18808:20;18804:1;18793:9;18789:17;18782:47;18846:131;18972:4;18846:131;:::i;:::-;18838:139;;18565:419;;;:::o;18990:169::-;19130:21;19126:1;19118:6;19114:14;19107:45;18990:169;:::o;19165:366::-;19307:3;19328:67;19392:2;19387:3;19328:67;:::i;:::-;19321:74;;19404:93;19493:3;19404:93;:::i;:::-;19522:2;19517:3;19513:12;19506:19;;19165:366;;;:::o;19537:419::-;19703:4;19741:2;19730:9;19726:18;19718:26;;19790:9;19784:4;19780:20;19776:1;19765:9;19761:17;19754:47;19818:131;19944:4;19818:131;:::i;:::-;19810:139;;19537:419;;;:::o;19962:332::-;20083:4;20121:2;20110:9;20106:18;20098:26;;20134:71;20202:1;20191:9;20187:17;20178:6;20134:71;:::i;:::-;20215:72;20283:2;20272:9;20268:18;20259:6;20215:72;:::i;:::-;19962:332;;;;;:::o;20300:180::-;20348:77;20345:1;20338:88;20445:4;20442:1;20435:15;20469:4;20466:1;20459:15;20486:180;20534:77;20531:1;20524:88;20631:4;20628:1;20621:15;20655:4;20652:1;20645:15;20672:233;20711:3;20734:24;20752:5;20734:24;:::i;:::-;20725:33;;20780:66;20773:5;20770:77;20767:103;;;20850:18;;:::i;:::-;20767:103;20897:1;20890:5;20886:13;20879:20;;20672:233;;;:::o;20911:114::-;20978:6;21012:5;21006:12;20996:22;;20911:114;;;:::o;21031:184::-;21130:11;21164:6;21159:3;21152:19;21204:4;21199:3;21195:14;21180:29;;21031:184;;;;:::o;21221:132::-;21288:4;21311:3;21303:11;;21341:4;21336:3;21332:14;21324:22;;21221:132;;;:::o;21359:108::-;21436:24;21454:5;21436:24;:::i;:::-;21431:3;21424:37;21359:108;;:::o;21473:179::-;21542:10;21563:46;21605:3;21597:6;21563:46;:::i;:::-;21641:4;21636:3;21632:14;21618:28;;21473:179;;;;:::o;21658:113::-;21728:4;21760;21755:3;21751:14;21743:22;;21658:113;;;:::o;21807:732::-;21926:3;21955:54;22003:5;21955:54;:::i;:::-;22025:86;22104:6;22099:3;22025:86;:::i;:::-;22018:93;;22135:56;22185:5;22135:56;:::i;:::-;22214:7;22245:1;22230:284;22255:6;22252:1;22249:13;22230:284;;;22331:6;22325:13;22358:63;22417:3;22402:13;22358:63;:::i;:::-;22351:70;;22444:60;22497:6;22444:60;:::i;:::-;22434:70;;22290:224;22277:1;22274;22270:9;22265:14;;22230:284;;;22234:14;22530:3;22523:10;;21931:608;;;21807:732;;;;:::o;22545:483::-;22716:4;22754:2;22743:9;22739:18;22731:26;;22767:71;22835:1;22824:9;22820:17;22811:6;22767:71;:::i;:::-;22885:9;22879:4;22875:20;22870:2;22859:9;22855:18;22848:48;22913:108;23016:4;23007:6;22913:108;:::i;:::-;22905:116;;22545:483;;;;;:::o;23034:98::-;23085:6;23119:5;23113:12;23103:22;;23034:98;;;:::o;23138:147::-;23239:11;23276:3;23261:18;;23138:147;;;;:::o;23291:307::-;23359:1;23369:113;23383:6;23380:1;23377:13;23369:113;;;23468:1;23463:3;23459:11;23453:18;23449:1;23444:3;23440:11;23433:39;23405:2;23402:1;23398:10;23393:15;;23369:113;;;23500:6;23497:1;23494:13;23491:101;;;23580:1;23571:6;23566:3;23562:16;23555:27;23491:101;23340:258;23291:307;;;:::o;23604:373::-;23708:3;23736:38;23768:5;23736:38;:::i;:::-;23790:88;23871:6;23866:3;23790:88;:::i;:::-;23783:95;;23887:52;23932:6;23927:3;23920:4;23913:5;23909:16;23887:52;:::i;:::-;23964:6;23959:3;23955:16;23948:23;;23712:265;23604:373;;;;:::o;23983:271::-;24113:3;24135:93;24224:3;24215:6;24135:93;:::i;:::-;24128:100;;24245:3;24238:10;;23983:271;;;;:::o;24260:191::-;24300:4;24320:20;24338:1;24320:20;:::i;:::-;24315:25;;24354:20;24372:1;24354:20;:::i;:::-;24349:25;;24393:1;24390;24387:8;24384:34;;;24398:18;;:::i;:::-;24384:34;24443:1;24440;24436:9;24428:17;;24260:191;;;;:::o;24457:348::-;24497:7;24520:20;24538:1;24520:20;:::i;:::-;24515:25;;24554:20;24572:1;24554:20;:::i;:::-;24549:25;;24742:1;24674:66;24670:74;24667:1;24664:81;24659:1;24652:9;24645:17;24641:105;24638:131;;;24749:18;;:::i;:::-;24638:131;24797:1;24794;24790:9;24779:20;;24457:348;;;;:::o;24811:305::-;24851:3;24870:20;24888:1;24870:20;:::i;:::-;24865:25;;24904:20;24922:1;24904:20;:::i;:::-;24899:25;;25058:1;24990:66;24986:74;24983:1;24980:81;24977:107;;;25064:18;;:::i;:::-;24977:107;25108:1;25105;25101:9;25094:16;;24811:305;;;;:::o;25122:188::-;25161:4;25181:19;25198:1;25181:19;:::i;:::-;25176:24;;25214:19;25231:1;25214:19;:::i;:::-;25209:24;;25252:1;25249;25246:8;25243:34;;;25257:18;;:::i;:::-;25243:34;25302:1;25299;25295:9;25287:17;;25122:188;;;;:::o;25316:426::-;25457:4;25495:2;25484:9;25480:18;25472:26;;25508:71;25576:1;25565:9;25561:17;25552:6;25508:71;:::i;:::-;25589:70;25655:2;25644:9;25640:18;25631:6;25589:70;:::i;:::-;25669:66;25731:2;25720:9;25716:18;25707:6;25669:66;:::i;:::-;25316:426;;;;;;:::o;25748:652::-;25947:4;25985:3;25974:9;25970:19;25962:27;;25999:71;26067:1;26056:9;26052:17;26043:6;25999:71;:::i;:::-;26080:72;26148:2;26137:9;26133:18;26124:6;26080:72;:::i;:::-;26162:70;26228:2;26217:9;26213:18;26204:6;26162:70;:::i;:::-;26242;26308:2;26297:9;26293:18;26284:6;26242:70;:::i;:::-;26322:71;26388:3;26377:9;26373:19;26364:6;26322:71;:::i;:::-;25748:652;;;;;;;;:::o;26406:222::-;26499:4;26537:2;26526:9;26522:18;26514:26;;26550:71;26618:1;26607:9;26603:17;26594:6;26550:71;:::i;:::-;26406:222;;;;:::o;26634:180::-;26682:77;26679:1;26672:88;26779:4;26776:1;26769:15;26803:4;26800:1;26793:15;26820:183;26858:3;26881:23;26898:5;26881:23;:::i;:::-;26872:32;;26926:18;26919:5;26916:29;26913:55;;;26948:18;;:::i;:::-;26913:55;26995:1;26988:5;26984:13;26977:20;;26820:183;;;:::o;27009:262::-;27048:3;27067:19;27084:1;27067:19;:::i;:::-;27062:24;;27100:19;27117:1;27100:19;:::i;:::-;27095:24;;27213:1;27185:26;27181:34;27178:1;27175:41;27172:67;;;27219:18;;:::i;:::-;27172:67;27263:1;27260;27256:9;27249:16;;27009:262;;;;:::o;27277:60::-;27305:3;27326:5;27319:12;;27277:60;;;:::o;27343:140::-;27392:9;27425:52;27443:33;27452:23;27469:5;27452:23;:::i;:::-;27443:33;:::i;:::-;27425:52;:::i;:::-;27412:65;;27343:140;;;:::o;27489:129::-;27575:36;27605:5;27575:36;:::i;:::-;27570:3;27563:49;27489:129;;:::o;27624:328::-;27743:4;27781:2;27770:9;27766:18;27758:26;;27794:70;27861:1;27850:9;27846:17;27837:6;27794:70;:::i;:::-;27874:71;27941:2;27930:9;27926:18;27917:6;27874:71;:::i;:::-;27624:328;;;;;:::o;27958:330::-;28078:4;28116:2;28105:9;28101:18;28093:26;;28129:71;28197:1;28186:9;28182:17;28173:6;28129:71;:::i;:::-;28210;28277:2;28266:9;28262:18;28253:6;28210:71;:::i;:::-;27958:330;;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2269800","executionCost":"infinite","totalCost":"infinite"},"external":{"BASE_FEE()":"infinite","GAS_PRICE_LINK()":"infinite","MAX_CONSUMERS()":"infinite","acceptSubscriptionOwnerTransfer(uint64)":"723","addConsumer(uint64,address)":"infinite","cancelSubscription(uint64,address)":"infinite","consumerIsAdded(uint64,address)":"infinite","createSubscription()":"infinite","fulfillRandomWords(uint256,address)":"infinite","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"infinite","fundSubscription(uint64,uint96)":"infinite","getConfig()":"infinite","getFallbackWeiPerUnitLink()":"427","getFeeConfig()":"infinite","getRequestConfig()":"908","getSubscription(uint64)":"infinite","pendingRequestExists(uint64)":"791","removeConsumer(uint64,address)":"infinite","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"infinite","requestSubscriptionOwnerTransfer(uint64,address)":"966"}},"methodIdentifiers":{"BASE_FEE()":"3d18651e","GAS_PRICE_LINK()":"a410347f","MAX_CONSUMERS()":"64d51a2a","acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","consumerIsAdded(uint64,address)":"ed5eb06d","createSubscription()":"a21a23e4","fulfillRandomWords(uint256,address)":"808974ff","fulfillRandomWordsWithOverride(uint256,address,uint256[])":"08e3898e","fundSubscription(uint64,uint96)":"afc69b53","getConfig()":"c3f909d4","getFallbackWeiPerUnitLink()":"356dac71","getFeeConfig()":"5fbbc0d2","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_baseFee\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_gasPriceLink\",\"type\":\"uint96\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidConsumer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRandomWords\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSubscription\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"MustBeSubOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TooManyConsumers\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"ConsumerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"outputSeed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"payment\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"RandomWordsFulfilled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"preSeed\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RandomWordsRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SubscriptionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"SubscriptionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBalance\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newBalance\",\"type\":\"uint256\"}],\"name\":\"SubscriptionFunded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASE_FEE\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAS_PRICE_LINK\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_CONSUMERS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"consumerIsAdded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"fulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_requestId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_words\",\"type\":\"uint256[]\"}],\"name\":\"fulfillRandomWordsWithOverride\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint96\",\"name\":\"_amount\",\"type\":\"uint96\"}],\"name\":\"fundSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"maxGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"stalenessSeconds\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"gasAfterPaymentCalculation\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFallbackWeiPerUnitLink\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeConfig\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier1\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier2\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier3\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier4\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"fulfillmentFlatFeeLinkPPMTier5\",\"type\":\"uint32\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier2\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier3\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier4\",\"type\":\"uint24\"},{\"internalType\":\"uint24\",\"name\":\"reqsForTier5\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"_minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"_callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"_subId\":\"- A unique subscription id.\"}},\"fulfillRandomWords(uint256,address)\":{\"details\":\"This mock uses a simplified formula for calculating payment amount and gas usage, and doesnot account for all edge cases handled in the real VRF coordinator. When making requestsagainst the real coordinator a small amount of additional LINK is required.\",\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\"}},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"params\":{\"_consumer\":\"the VRF randomness consumer to send the result to\",\"_requestId\":\"the request to fulfill\",\"_words\":\"user-provided random words\"}},\"fundSubscription(uint64,uint96)\":{\"params\":{\"_amount\":\"the amount to fund\",\"_subId\":\"the subscription to fund\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"fulfillRandomWords(uint256,address)\":{\"notice\":\"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer.\"},\"fulfillRandomWordsWithOverride(uint256,address,uint256[])\":{\"notice\":\"fulfillRandomWordsWithOverride allows the user to pass in their own random words.\"},\"fundSubscription(uint64,uint96)\":{\"notice\":\"fundSubscription allows funding a subscription with an arbitrary amount for testing.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":\"VRFCoordinatorV2Mock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface LinkTokenInterface {\\n  function allowance(address owner, address spender) external view returns (uint256 remaining);\\n\\n  function approve(address spender, uint256 value) external returns (bool success);\\n\\n  function balanceOf(address owner) external view returns (uint256 balance);\\n\\n  function decimals() external view returns (uint8 decimalPlaces);\\n\\n  function decreaseApproval(address spender, uint256 addedValue) external returns (bool success);\\n\\n  function increaseApproval(address spender, uint256 subtractedValue) external;\\n\\n  function name() external view returns (string memory tokenName);\\n\\n  function symbol() external view returns (string memory tokenSymbol);\\n\\n  function totalSupply() external view returns (uint256 totalTokensIssued);\\n\\n  function transfer(address to, uint256 value) external returns (bool success);\\n\\n  function transferAndCall(\\n    address to,\\n    uint256 value,\\n    bytes calldata data\\n  ) external returns (bool success);\\n\\n  function transferFrom(\\n    address from,\\n    address to,\\n    uint256 value\\n  ) external returns (bool success);\\n}\\n\",\"keccak256\":\"0xc7d7cd730d36825485ef4107d93c3ff18b9f3a5a00ea3d5988ba9a0bd70b10c5\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// A mock for testing code that relies on VRFCoordinatorV2.\\npragma solidity ^0.8.4;\\n\\nimport \\\"../interfaces/LinkTokenInterface.sol\\\";\\nimport \\\"../interfaces/VRFCoordinatorV2Interface.sol\\\";\\nimport \\\"../VRFConsumerBaseV2.sol\\\";\\n\\ncontract VRFCoordinatorV2Mock is VRFCoordinatorV2Interface {\\n  uint96 public immutable BASE_FEE;\\n  uint96 public immutable GAS_PRICE_LINK;\\n  uint16 public immutable MAX_CONSUMERS = 100;\\n\\n  error InvalidSubscription();\\n  error InsufficientBalance();\\n  error MustBeSubOwner(address owner);\\n  error TooManyConsumers();\\n  error InvalidConsumer();\\n  error InvalidRandomWords();\\n\\n  event RandomWordsRequested(\\n    bytes32 indexed keyHash,\\n    uint256 requestId,\\n    uint256 preSeed,\\n    uint64 indexed subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords,\\n    address indexed sender\\n  );\\n  event RandomWordsFulfilled(uint256 indexed requestId, uint256 outputSeed, uint96 payment, bool success);\\n  event SubscriptionCreated(uint64 indexed subId, address owner);\\n  event SubscriptionFunded(uint64 indexed subId, uint256 oldBalance, uint256 newBalance);\\n  event SubscriptionCanceled(uint64 indexed subId, address to, uint256 amount);\\n  event ConsumerAdded(uint64 indexed subId, address consumer);\\n  event ConsumerRemoved(uint64 indexed subId, address consumer);\\n\\n  uint64 s_currentSubId;\\n  uint256 s_nextRequestId = 1;\\n  uint256 s_nextPreSeed = 100;\\n  struct Subscription {\\n    address owner;\\n    uint96 balance;\\n  }\\n  mapping(uint64 => Subscription) s_subscriptions; /* subId */ /* subscription */\\n  mapping(uint64 => address[]) s_consumers; /* subId */ /* consumers */\\n\\n  struct Request {\\n    uint64 subId;\\n    uint32 callbackGasLimit;\\n    uint32 numWords;\\n  }\\n  mapping(uint256 => Request) s_requests; /* requestId */ /* request */\\n\\n  constructor(uint96 _baseFee, uint96 _gasPriceLink) {\\n    BASE_FEE = _baseFee;\\n    GAS_PRICE_LINK = _gasPriceLink;\\n  }\\n\\n  function consumerIsAdded(uint64 _subId, address _consumer) public view returns (bool) {\\n    address[] memory consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        return true;\\n      }\\n    }\\n    return false;\\n  }\\n\\n  modifier onlyValidConsumer(uint64 _subId, address _consumer) {\\n    if (!consumerIsAdded(_subId, _consumer)) {\\n      revert InvalidConsumer();\\n    }\\n    _;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWords fulfills the given request, sending the random words to the supplied\\n   * @notice consumer.\\n   *\\n   * @dev This mock uses a simplified formula for calculating payment amount and gas usage, and does\\n   * @dev not account for all edge cases handled in the real VRF coordinator. When making requests\\n   * @dev against the real coordinator a small amount of additional LINK is required.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   */\\n  function fulfillRandomWords(uint256 _requestId, address _consumer) external {\\n    fulfillRandomWordsWithOverride(_requestId, _consumer, new uint256[](0));\\n  }\\n\\n  /**\\n   * @notice fulfillRandomWordsWithOverride allows the user to pass in their own random words.\\n   *\\n   * @param _requestId the request to fulfill\\n   * @param _consumer the VRF randomness consumer to send the result to\\n   * @param _words user-provided random words\\n   */\\n  function fulfillRandomWordsWithOverride(\\n    uint256 _requestId,\\n    address _consumer,\\n    uint256[] memory _words\\n  ) public {\\n    uint256 startGas = gasleft();\\n    if (s_requests[_requestId].subId == 0) {\\n      revert(\\\"nonexistent request\\\");\\n    }\\n    Request memory req = s_requests[_requestId];\\n\\n    if (_words.length == 0) {\\n      _words = new uint256[](req.numWords);\\n      for (uint256 i = 0; i < req.numWords; i++) {\\n        _words[i] = uint256(keccak256(abi.encode(_requestId, i)));\\n      }\\n    } else if (_words.length != req.numWords) {\\n      revert InvalidRandomWords();\\n    }\\n\\n    VRFConsumerBaseV2 v;\\n    bytes memory callReq = abi.encodeWithSelector(v.rawFulfillRandomWords.selector, _requestId, _words);\\n    (bool success, ) = _consumer.call{gas: req.callbackGasLimit}(callReq);\\n\\n    uint96 payment = uint96(BASE_FEE + ((startGas - gasleft()) * GAS_PRICE_LINK));\\n    if (s_subscriptions[req.subId].balance < payment) {\\n      revert InsufficientBalance();\\n    }\\n    s_subscriptions[req.subId].balance -= payment;\\n    delete (s_requests[_requestId]);\\n    emit RandomWordsFulfilled(_requestId, _requestId, payment, success);\\n  }\\n\\n  /**\\n   * @notice fundSubscription allows funding a subscription with an arbitrary amount for testing.\\n   *\\n   * @param _subId the subscription to fund\\n   * @param _amount the amount to fund\\n   */\\n  function fundSubscription(uint64 _subId, uint96 _amount) public {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    uint96 oldBalance = s_subscriptions[_subId].balance;\\n    s_subscriptions[_subId].balance += _amount;\\n    emit SubscriptionFunded(_subId, oldBalance, oldBalance + _amount);\\n  }\\n\\n  function requestRandomWords(\\n    bytes32 _keyHash,\\n    uint64 _subId,\\n    uint16 _minimumRequestConfirmations,\\n    uint32 _callbackGasLimit,\\n    uint32 _numWords\\n  ) external override onlyValidConsumer(_subId, msg.sender) returns (uint256) {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n\\n    uint256 requestId = s_nextRequestId++;\\n    uint256 preSeed = s_nextPreSeed++;\\n\\n    s_requests[requestId] = Request({subId: _subId, callbackGasLimit: _callbackGasLimit, numWords: _numWords});\\n\\n    emit RandomWordsRequested(\\n      _keyHash,\\n      requestId,\\n      preSeed,\\n      _subId,\\n      _minimumRequestConfirmations,\\n      _callbackGasLimit,\\n      _numWords,\\n      msg.sender\\n    );\\n    return requestId;\\n  }\\n\\n  function createSubscription() external override returns (uint64 _subId) {\\n    s_currentSubId++;\\n    s_subscriptions[s_currentSubId] = Subscription({owner: msg.sender, balance: 0});\\n    emit SubscriptionCreated(s_currentSubId, msg.sender);\\n    return s_currentSubId;\\n  }\\n\\n  function getSubscription(uint64 _subId)\\n    external\\n    view\\n    override\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    )\\n  {\\n    if (s_subscriptions[_subId].owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    return (s_subscriptions[_subId].balance, 0, s_subscriptions[_subId].owner, s_consumers[_subId]);\\n  }\\n\\n  function cancelSubscription(uint64 _subId, address _to) external override onlySubOwner(_subId) {\\n    emit SubscriptionCanceled(_subId, _to, s_subscriptions[_subId].balance);\\n    delete (s_subscriptions[_subId]);\\n  }\\n\\n  modifier onlySubOwner(uint64 _subId) {\\n    address owner = s_subscriptions[_subId].owner;\\n    if (owner == address(0)) {\\n      revert InvalidSubscription();\\n    }\\n    if (msg.sender != owner) {\\n      revert MustBeSubOwner(owner);\\n    }\\n    _;\\n  }\\n\\n  function getRequestConfig()\\n    external\\n    pure\\n    override\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    )\\n  {\\n    return (3, 2000000, new bytes32[](0));\\n  }\\n\\n  function addConsumer(uint64 _subId, address _consumer) external override onlySubOwner(_subId) {\\n    if (s_consumers[_subId].length == MAX_CONSUMERS) {\\n      revert TooManyConsumers();\\n    }\\n\\n    if (consumerIsAdded(_subId, _consumer)) {\\n      return;\\n    }\\n\\n    s_consumers[_subId].push(_consumer);\\n    emit ConsumerAdded(_subId, _consumer);\\n  }\\n\\n  function removeConsumer(uint64 _subId, address _consumer)\\n    external\\n    override\\n    onlySubOwner(_subId)\\n    onlyValidConsumer(_subId, _consumer)\\n  {\\n    address[] storage consumers = s_consumers[_subId];\\n    for (uint256 i = 0; i < consumers.length; i++) {\\n      if (consumers[i] == _consumer) {\\n        address last = consumers[consumers.length - 1];\\n        consumers[i] = last;\\n        consumers.pop();\\n        break;\\n      }\\n    }\\n\\n    emit ConsumerRemoved(_subId, _consumer);\\n  }\\n\\n  function getConfig()\\n    external\\n    view\\n    returns (\\n      uint16 minimumRequestConfirmations,\\n      uint32 maxGasLimit,\\n      uint32 stalenessSeconds,\\n      uint32 gasAfterPaymentCalculation\\n    )\\n  {\\n    return (4, 2_500_000, 2_700, 33285);\\n  }\\n\\n  function getFeeConfig()\\n    external\\n    view\\n    returns (\\n      uint32 fulfillmentFlatFeeLinkPPMTier1,\\n      uint32 fulfillmentFlatFeeLinkPPMTier2,\\n      uint32 fulfillmentFlatFeeLinkPPMTier3,\\n      uint32 fulfillmentFlatFeeLinkPPMTier4,\\n      uint32 fulfillmentFlatFeeLinkPPMTier5,\\n      uint24 reqsForTier2,\\n      uint24 reqsForTier3,\\n      uint24 reqsForTier4,\\n      uint24 reqsForTier5\\n    )\\n  {\\n    return (\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      100000, // 0.1 LINK\\n      0,\\n      0,\\n      0,\\n      0\\n    );\\n  }\\n\\n  function getFallbackWeiPerUnitLink() external view returns (int256) {\\n    return 4000000000000000; // 0.004 Ether\\n  }\\n\\n  function requestSubscriptionOwnerTransfer(uint64 _subId, address _newOwner) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function acceptSubscriptionOwnerTransfer(uint64 _subId) external pure override {\\n    revert(\\\"not implemented\\\");\\n  }\\n\\n  function pendingRequestExists(uint64 subId) public view override returns (bool) {\\n    revert(\\\"not implemented\\\");\\n  }\\n}\\n\",\"keccak256\":\"0x05006a64339914b08f67180caf5dd29f95e74fe3993021ff839a98029f399e63\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":386,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_currentSubId","offset":0,"slot":"0","type":"t_uint64"},{"astId":389,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextRequestId","offset":0,"slot":"1","type":"t_uint256"},{"astId":392,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_nextPreSeed","offset":0,"slot":"2","type":"t_uint256"},{"astId":402,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_subscriptions","offset":0,"slot":"3","type":"t_mapping(t_uint64,t_struct(Subscription)397_storage)"},{"astId":407,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_consumers","offset":0,"slot":"4","type":"t_mapping(t_uint64,t_array(t_address)dyn_storage)"},{"astId":419,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"s_requests","offset":0,"slot":"5","type":"t_mapping(t_uint256,t_struct(Request)414_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_address)dyn_storage":{"base":"t_address","encoding":"dynamic_array","label":"address[]","numberOfBytes":"32"},"t_mapping(t_uint256,t_struct(Request)414_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct VRFCoordinatorV2Mock.Request)","numberOfBytes":"32","value":"t_struct(Request)414_storage"},"t_mapping(t_uint64,t_array(t_address)dyn_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => address[])","numberOfBytes":"32","value":"t_array(t_address)dyn_storage"},"t_mapping(t_uint64,t_struct(Subscription)397_storage)":{"encoding":"mapping","key":"t_uint64","label":"mapping(uint64 => struct VRFCoordinatorV2Mock.Subscription)","numberOfBytes":"32","value":"t_struct(Subscription)397_storage"},"t_struct(Request)414_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Request","members":[{"astId":409,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"subId","offset":0,"slot":"0","type":"t_uint64"},{"astId":411,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"callbackGasLimit","offset":8,"slot":"0","type":"t_uint32"},{"astId":413,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"numWords","offset":12,"slot":"0","type":"t_uint32"}],"numberOfBytes":"32"},"t_struct(Subscription)397_storage":{"encoding":"inplace","label":"struct VRFCoordinatorV2Mock.Subscription","members":[{"astId":394,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":396,"contract":"@chainlink/contracts/src/v0.8/mocks/VRFCoordinatorV2Mock.sol:VRFCoordinatorV2Mock","label":"balance","offset":20,"slot":"0","type":"t_uint96"}],"numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint32":{"encoding":"inplace","label":"uint32","numberOfBytes":"4"},"t_uint64":{"encoding":"inplace","label":"uint64","numberOfBytes":"8"},"t_uint96":{"encoding":"inplace","label":"uint96","numberOfBytes":"12"}}},"userdoc":{"kind":"user","methods":{"createSubscription()":{"notice":"Create a VRF subscription."},"fulfillRandomWords(uint256,address)":{"notice":"fulfillRandomWords fulfills the given request, sending the random words to the suppliedconsumer."},"fulfillRandomWordsWithOverride(uint256,address,uint256[])":{"notice":"fulfillRandomWordsWithOverride allows the user to pass in their own random words."},"fundSubscription(uint64,uint96)":{"notice":"fundSubscription allows funding a subscription with an arbitrary amount for testing."},"getRequestConfig()":{"notice":"Get configuration relevant for making requests"}},"version":1}}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1165,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"EIP-721 Metadata Update Extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1361":{"entryPoint":null,"id":1361,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"423:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:26"},"nodeType":"YulFunctionCall","src":"433:12:26"},"nodeType":"YulExpressionStatement","src":"433:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:26"},{"body":{"nodeType":"YulBlock","src":"546:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:26"},"nodeType":"YulFunctionCall","src":"556:12:26"},"nodeType":"YulExpressionStatement","src":"556:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:26"},{"body":{"nodeType":"YulBlock","src":"628:54:26","statements":[{"nodeType":"YulAssignment","src":"638:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:26"},"nodeType":"YulFunctionCall","src":"652:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:26"},"nodeType":"YulFunctionCall","src":"668:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:26"},"nodeType":"YulFunctionCall","src":"648:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:26","type":""}],"src":"580:102:26"},{"body":{"nodeType":"YulBlock","src":"716:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:26"},"nodeType":"YulFunctionCall","src":"726:88:26"},"nodeType":"YulExpressionStatement","src":"726:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:26"},"nodeType":"YulFunctionCall","src":"823:15:26"},"nodeType":"YulExpressionStatement","src":"823:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:26"},"nodeType":"YulFunctionCall","src":"847:15:26"},"nodeType":"YulExpressionStatement","src":"847:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:26"},{"body":{"nodeType":"YulBlock","src":"917:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:26"},"nodeType":"YulFunctionCall","src":"957:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:26"},"nodeType":"YulFunctionCall","src":"945:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:26"},"nodeType":"YulFunctionCall","src":"1098:18:26"},"nodeType":"YulExpressionStatement","src":"1098:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:26"},"nodeType":"YulFunctionCall","src":"1036:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:26"},"nodeType":"YulFunctionCall","src":"1072:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:26"},"nodeType":"YulFunctionCall","src":"1033:62:26"},"nodeType":"YulIf","src":"1030:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:26"},"nodeType":"YulFunctionCall","src":"1127:22:26"},"nodeType":"YulExpressionStatement","src":"1127:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:26","type":""}],"src":"874:281:26"},{"body":{"nodeType":"YulBlock","src":"1202:88:26","statements":[{"nodeType":"YulAssignment","src":"1212:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:26"},"nodeType":"YulFunctionCall","src":"1222:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:26"},"nodeType":"YulFunctionCall","src":"1251:33:26"},"nodeType":"YulExpressionStatement","src":"1251:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:26","type":""}],"src":"1161:129:26"},{"body":{"nodeType":"YulBlock","src":"1363:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:26"},"nodeType":"YulFunctionCall","src":"1470:18:26"},"nodeType":"YulExpressionStatement","src":"1470:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:26"},"nodeType":"YulFunctionCall","src":"1437:30:26"},"nodeType":"YulIf","src":"1434:56:26"},{"nodeType":"YulAssignment","src":"1500:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:26"},"nodeType":"YulFunctionCall","src":"1508:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:26"}]},{"nodeType":"YulAssignment","src":"1574:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:26"},"nodeType":"YulFunctionCall","src":"1582:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:26","type":""}],"src":"1296:308:26"},{"body":{"nodeType":"YulBlock","src":"1659:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:26"},"nodeType":"YulFunctionCall","src":"1759:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:26"},"nodeType":"YulFunctionCall","src":"1778:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:26"},"nodeType":"YulFunctionCall","src":"1772:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:26"},"nodeType":"YulFunctionCall","src":"1752:39:26"},"nodeType":"YulExpressionStatement","src":"1752:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:26"},"nodeType":"YulFunctionCall","src":"1696:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:26","statements":[{"nodeType":"YulAssignment","src":"1712:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:26"},"nodeType":"YulFunctionCall","src":"1717:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:26","statements":[]},"src":"1688:113:26"},{"body":{"nodeType":"YulBlock","src":"1835:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:26"},"nodeType":"YulFunctionCall","src":"1881:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:26"},"nodeType":"YulFunctionCall","src":"1874:27:26"},"nodeType":"YulExpressionStatement","src":"1874:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:26"},"nodeType":"YulFunctionCall","src":"1813:13:26"},"nodeType":"YulIf","src":"1810:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:26","type":""}],"src":"1610:307:26"},{"body":{"nodeType":"YulBlock","src":"2018:326:26","statements":[{"nodeType":"YulAssignment","src":"2028:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:26"},"nodeType":"YulFunctionCall","src":"2053:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:26"},"nodeType":"YulFunctionCall","src":"2037:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:26"},"nodeType":"YulFunctionCall","src":"2112:21:26"},"nodeType":"YulExpressionStatement","src":"2112:21:26"},{"nodeType":"YulVariableDeclaration","src":"2142:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:26"},"nodeType":"YulFunctionCall","src":"2153:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:26"},"nodeType":"YulFunctionCall","src":"2209:79:26"},"nodeType":"YulExpressionStatement","src":"2209:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:26"},"nodeType":"YulFunctionCall","src":"2184:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:26"},"nodeType":"YulFunctionCall","src":"2181:25:26"},"nodeType":"YulIf","src":"2178:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:26"},"nodeType":"YulFunctionCall","src":"2299:39:26"},"nodeType":"YulExpressionStatement","src":"2299:39:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:26","type":""}],"src":"1923:421:26"},{"body":{"nodeType":"YulBlock","src":"2437:282:26","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:26"},"nodeType":"YulFunctionCall","src":"2488:79:26"},"nodeType":"YulExpressionStatement","src":"2488:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:26"},"nodeType":"YulFunctionCall","src":"2461:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:26"},"nodeType":"YulFunctionCall","src":"2457:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:26"},"nodeType":"YulFunctionCall","src":"2450:35:26"},"nodeType":"YulIf","src":"2447:122:26"},{"nodeType":"YulVariableDeclaration","src":"2578:27:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:26"},"nodeType":"YulFunctionCall","src":"2592:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:26"},"nodeType":"YulFunctionCall","src":"2682:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:26"},"nodeType":"YulFunctionCall","src":"2623:90:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:26","type":""}],"src":"2364:355:26"},{"body":{"nodeType":"YulBlock","src":"2839:739:26","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:26"},"nodeType":"YulFunctionCall","src":"2887:79:26"},"nodeType":"YulExpressionStatement","src":"2887:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:26"},"nodeType":"YulFunctionCall","src":"2856:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:26"},"nodeType":"YulFunctionCall","src":"2852:32:26"},"nodeType":"YulIf","src":"2849:119:26"},{"nodeType":"YulBlock","src":"2978:291:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:26"},"nodeType":"YulFunctionCall","src":"3013:17:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:26"},"nodeType":"YulFunctionCall","src":"3007:24:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:26"},"nodeType":"YulFunctionCall","src":"3080:79:26"},"nodeType":"YulExpressionStatement","src":"3080:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:26"},"nodeType":"YulFunctionCall","src":"3047:30:26"},"nodeType":"YulIf","src":"3044:117:26"},{"nodeType":"YulAssignment","src":"3175:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:26"},"nodeType":"YulFunctionCall","src":"3227:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:26"},"nodeType":"YulFunctionCall","src":"3185:74:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:26"}]}]},{"nodeType":"YulBlock","src":"3279:292:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:26"},"nodeType":"YulFunctionCall","src":"3314:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:26"},"nodeType":"YulFunctionCall","src":"3308:25:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:26"},"nodeType":"YulFunctionCall","src":"3382:79:26"},"nodeType":"YulExpressionStatement","src":"3382:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:26"},"nodeType":"YulFunctionCall","src":"3349:30:26"},"nodeType":"YulIf","src":"3346:117:26"},{"nodeType":"YulAssignment","src":"3477:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:26"},"nodeType":"YulFunctionCall","src":"3529:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:26"},"nodeType":"YulFunctionCall","src":"3487:74:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:26","type":""}],"src":"2725:853:26"},{"body":{"nodeType":"YulBlock","src":"3612:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:26"},"nodeType":"YulFunctionCall","src":"3622:88:26"},"nodeType":"YulExpressionStatement","src":"3622:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:26"},"nodeType":"YulFunctionCall","src":"3719:15:26"},"nodeType":"YulExpressionStatement","src":"3719:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:26"},"nodeType":"YulFunctionCall","src":"3743:15:26"},"nodeType":"YulExpressionStatement","src":"3743:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:26"},{"body":{"nodeType":"YulBlock","src":"3821:269:26","statements":[{"nodeType":"YulAssignment","src":"3831:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:26"},"nodeType":"YulFunctionCall","src":"3841:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:26"},"nodeType":"YulFunctionCall","src":"3888:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:26","statements":[{"nodeType":"YulAssignment","src":"3953:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:26"},"nodeType":"YulFunctionCall","src":"3963:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:26"},"nodeType":"YulFunctionCall","src":"3912:26:26"},"nodeType":"YulIf","src":"3909:81:26"},{"body":{"nodeType":"YulBlock","src":"4042:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:26"},"nodeType":"YulFunctionCall","src":"4056:18:26"},"nodeType":"YulExpressionStatement","src":"4056:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:26"},"nodeType":"YulFunctionCall","src":"4026:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:26"},"nodeType":"YulFunctionCall","src":"4003:38:26"},"nodeType":"YulIf","src":"4000:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:26","type":""}],"src":"3770:320:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162002501380380620025018339818101604052810190620000379190620002be565b81600090805190602001906200004f92919062000071565b5080600190805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61214980620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611513565b6102bc565b6040516100fb919061155b565b60405180910390f35b61010c61039e565b604051610119919061160f565b60405180910390f35b61013c60048036038101906101379190611667565b610430565b60405161014991906116d5565b60405180910390f35b61016c6004803603810190610167919061171c565b610476565b005b6101886004803603810190610183919061175c565b61058e565b005b6101a4600480360381019061019f919061175c565b6105ee565b005b6101c060048036038101906101bb9190611667565b61060e565b6040516101cd91906116d5565b60405180910390f35b6101f060048036038101906101eb91906117af565b610695565b6040516101fd91906117eb565b60405180910390f35b61020e61074d565b60405161021b919061160f565b60405180910390f35b61023e60048036038101906102399190611832565b6107df565b005b61025a600480360381019061025591906119a7565b6107f5565b005b61027660048036038101906102719190611667565b610857565b604051610283919061160f565b60405180910390f35b6102a660048036038101906102a19190611a2a565b6108bf565b6040516102b3919061155b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611a99565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a99565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b3d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611bcf565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611c61565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ccd565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d5f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611a99565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611a99565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611c61565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611dbb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ccd565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611e51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611ee3565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611e51565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611f4f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061155b565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611fe1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a261187c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612001565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190612085565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e91906120e6565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611fe1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384612001565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1612001565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0612001565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419612001565b5b0492506008810190505b612710831061144957612710838161143f5761143e612001565b5b0492506004810190505b6064831061146c576064838161146257611461612001565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114f0816114bb565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b600060208284031215611529576115286114b1565b5b6000611537848285016114fe565b91505092915050565b60008115159050919050565b61155581611540565b82525050565b6000602082019050611570600083018461154c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115b0578082015181840152602081019050611595565b838111156115bf576000848401525b50505050565b6000601f19601f8301169050919050565b60006115e182611576565b6115eb8185611581565b93506115fb818560208601611592565b611604816115c5565b840191505092915050565b6000602082019050818103600083015261162981846115d6565b905092915050565b6000819050919050565b61164481611631565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b60006020828403121561167d5761167c6114b1565b5b600061168b84828501611652565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116bf82611694565b9050919050565b6116cf816116b4565b82525050565b60006020820190506116ea60008301846116c6565b92915050565b6116f9816116b4565b811461170457600080fd5b50565b600081359050611716816116f0565b92915050565b60008060408385031215611733576117326114b1565b5b600061174185828601611707565b925050602061175285828601611652565b9150509250929050565b600080600060608486031215611775576117746114b1565b5b600061178386828701611707565b935050602061179486828701611707565b92505060406117a586828701611652565b9150509250925092565b6000602082840312156117c5576117c46114b1565b5b60006117d384828501611707565b91505092915050565b6117e581611631565b82525050565b600060208201905061180060008301846117dc565b92915050565b61180f81611540565b811461181a57600080fd5b50565b60008135905061182c81611806565b92915050565b60008060408385031215611849576118486114b1565b5b600061185785828601611707565b92505060206118688582860161181d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b4826115c5565b810181811067ffffffffffffffff821117156118d3576118d261187c565b5b80604052505050565b60006118e66114a7565b90506118f282826118ab565b919050565b600067ffffffffffffffff8211156119125761191161187c565b5b61191b826115c5565b9050602081019050919050565b82818337600083830152505050565b600061194a611945846118f7565b6118dc565b90508281526020810184848401111561196657611965611877565b5b611971848285611928565b509392505050565b600082601f83011261198e5761198d611872565b5b813561199e848260208601611937565b91505092915050565b600080600080608085870312156119c1576119c06114b1565b5b60006119cf87828801611707565b94505060206119e087828801611707565b93505060406119f187828801611652565b925050606085013567ffffffffffffffff811115611a1257611a116114b6565b5b611a1e87828801611979565b91505092959194509250565b60008060408385031215611a4157611a406114b1565b5b6000611a4f85828601611707565b9250506020611a6085828601611707565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ab157607f821691505b60208210811415611ac557611ac4611a6a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b27602183611581565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611bb9603d83611581565b9150611bc482611b5d565b604082019050919050565b60006020820190508181036000830152611be881611bac565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c4b602d83611581565b9150611c5682611bef565b604082019050919050565b60006020820190508181036000830152611c7a81611c3e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611cb7601883611581565b9150611cc282611c81565b602082019050919050565b60006020820190508181036000830152611ce681611caa565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d49602983611581565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b600081905092915050565b6000611d9582611576565b611d9f8185611d7f565b9350611daf818560208601611592565b80840191505092915050565b6000611dc78285611d8a565b9150611dd38284611d8a565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e3b602583611581565b9150611e4682611ddf565b604082019050919050565b60006020820190508181036000830152611e6a81611e2e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ecd602483611581565b9150611ed882611e71565b604082019050919050565b60006020820190508181036000830152611efc81611ec0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f39601983611581565b9150611f4482611f03565b602082019050919050565b60006020820190508181036000830152611f6881611f2c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fcb603283611581565b9150611fd682611f6f565b604082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061205782612030565b612061818561203b565b9350612071818560208601611592565b61207a816115c5565b840191505092915050565b600060808201905061209a60008301876116c6565b6120a760208301866116c6565b6120b460408301856117dc565b81810360608301526120c6818461204c565b905095945050505050565b6000815190506120e0816114e7565b92915050565b6000602082840312156120fc576120fb6114b1565b5b600061210a848285016120d1565b9150509291505056fea264697066735822122040030865e3d0ca91308c8c72d6cfc522e116caca0db2a25d839879719b468bea64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2501 CODESIZE SUB DUP1 PUSH3 0x2501 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2149 DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP5 DUP3 DUP6 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1595 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15EB DUP2 DUP6 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1604 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1629 DUP2 DUP5 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1661 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168B DUP5 DUP3 DUP6 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1716 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1752 DUP6 DUP3 DUP7 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1794 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP2 EQ PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182C DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18B4 DUP3 PUSH2 0x15C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH2 0x191B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A PUSH2 0x1945 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x1877 JUMP JUMPDEST JUMPDEST PUSH2 0x1971 DUP5 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1872 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x14B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A1E DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x21 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH1 0x3D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4B PUSH1 0x2D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C56 DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH1 0x18 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x29 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x1D9F DUP2 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 DUP6 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 DUP5 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B PUSH1 0x25 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECD PUSH1 0x24 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED8 DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 PUSH1 0x19 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F68 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCB PUSH1 0x32 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD6 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFA DUP2 PUSH2 0x1FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x2061 DUP2 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP4 POP PUSH2 0x2071 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x207A DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 DUP5 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20E0 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP5 DUP3 DUP6 ADD PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SUB ADDMOD PUSH6 0xE3D0CA91308C DUP13 PUSH19 0xD6CFC522E116CACA0DB2A25D839879719B468B 0xEA PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"628:16377:9:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;628:16377;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;628:16377:9:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2209":{"entryPoint":4500,"id":2209,"parameterSlots":4,"returnSlots":0},"@_approve_2075":{"entryPoint":2576,"id":2075,"parameterSlots":2,"returnSlots":0},"@_baseURI_1512":{"entryPoint":4190,"id":1512,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2196":{"entryPoint":4494,"id":2196,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2183":{"entryPoint":4506,"id":2183,"parameterSlots":4,"returnSlots":1},"@_exists_1744":{"entryPoint":4429,"id":1744,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1778":{"entryPoint":2761,"id":1778,"parameterSlots":2,"returnSlots":1},"@_msgSender_2884":{"entryPoint":2568,"id":2884,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1726":{"entryPoint":3672,"id":1726,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2121":{"entryPoint":2493,"id":2121,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_1713":{"entryPoint":4098,"id":1713,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2107":{"entryPoint":3733,"id":2107,"parameterSlots":3,"returnSlots":0},"@_transfer_2051":{"entryPoint":2910,"id":2051,"parameterSlots":3,"returnSlots":0},"@approve_1555":{"entryPoint":1142,"id":1555,"parameterSlots":2,"returnSlots":0},"@balanceOf_1416":{"entryPoint":1685,"id":1416,"parameterSlots":1,"returnSlots":1},"@getApproved_1573":{"entryPoint":1072,"id":1573,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1608":{"entryPoint":2239,"id":1608,"parameterSlots":2,"returnSlots":1},"@isContract_2560":{"entryPoint":5252,"id":2560,"parameterSlots":1,"returnSlots":1},"@log10_3862":{"entryPoint":4913,"id":3862,"parameterSlots":1,"returnSlots":1},"@name_1454":{"entryPoint":926,"id":1454,"parameterSlots":0,"returnSlots":1},"@ownerOf_1444":{"entryPoint":1550,"id":1444,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1654":{"entryPoint":1518,"id":1654,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1684":{"entryPoint":2037,"id":1684,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1590":{"entryPoint":2015,"id":1590,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1392":{"entryPoint":700,"id":1392,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3146":{"entryPoint":2387,"id":3146,"parameterSlots":1,"returnSlots":1},"@symbol_1464":{"entryPoint":1869,"id":1464,"parameterSlots":0,"returnSlots":1},"@toString_2953":{"entryPoint":4213,"id":2953,"parameterSlots":1,"returnSlots":1},"@tokenURI_1503":{"entryPoint":2135,"id":1503,"parameterSlots":1,"returnSlots":1},"@transferFrom_1635":{"entryPoint":1422,"id":1635,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6455,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5895,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6173,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5374,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8401,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5714,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6063,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6698,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5980,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6567,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6194,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5916,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5395,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5830,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5452,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8268,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7562,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7230,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8126,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7726,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7872,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7980,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7484,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7338,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6938,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7084,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6108,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7611,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8325,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5467,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8161,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7761,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7907,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8015,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7373,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6973,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7119,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6123,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6364,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5287,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6391,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8240,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5494,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8251,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5505,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7551,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5812,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5440,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5307,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5780,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5681,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6440,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6809,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6315,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8193,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6762,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6268,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6258,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6263,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5302,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5297,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5573,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7151,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8047,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7647,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7793,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7939,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7405,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6859,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7005,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5872,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6150,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5351,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5691,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23167:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1847:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:26"},"nodeType":"YulFunctionCall","src":"1947:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:26"},"nodeType":"YulFunctionCall","src":"1966:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:26"},"nodeType":"YulFunctionCall","src":"1960:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:26"},"nodeType":"YulFunctionCall","src":"1940:39:26"},"nodeType":"YulExpressionStatement","src":"1940:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:26"},"nodeType":"YulFunctionCall","src":"1884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:26","statements":[{"nodeType":"YulAssignment","src":"1900:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:26"},"nodeType":"YulFunctionCall","src":"1905:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:26","statements":[]},"src":"1876:113:26"},{"body":{"nodeType":"YulBlock","src":"2023:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:26"},"nodeType":"YulFunctionCall","src":"2062:27:26"},"nodeType":"YulExpressionStatement","src":"2062:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:26"},"nodeType":"YulFunctionCall","src":"2001:13:26"},"nodeType":"YulIf","src":"1998:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:26","type":""}],"src":"1798:307:26"},{"body":{"nodeType":"YulBlock","src":"2159:54:26","statements":[{"nodeType":"YulAssignment","src":"2169:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:26"},"nodeType":"YulFunctionCall","src":"2183:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:26"},"nodeType":"YulFunctionCall","src":"2199:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:26"},"nodeType":"YulFunctionCall","src":"2179:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:26","type":""}],"src":"2111:102:26"},{"body":{"nodeType":"YulBlock","src":"2311:272:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:26"},"nodeType":"YulFunctionCall","src":"2335:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:26"},"nodeType":"YulFunctionCall","src":"2390:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:26"},"nodeType":"YulFunctionCall","src":"2492:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:26"},"nodeType":"YulFunctionCall","src":"2470:52:26"},"nodeType":"YulExpressionStatement","src":"2470:52:26"},{"nodeType":"YulAssignment","src":"2531:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:26"},"nodeType":"YulFunctionCall","src":"2547:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:26"},"nodeType":"YulFunctionCall","src":"2538:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:26","type":""}],"src":"2219:364:26"},{"body":{"nodeType":"YulBlock","src":"2707:195:26","statements":[{"nodeType":"YulAssignment","src":"2717:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:26"},"nodeType":"YulFunctionCall","src":"2760:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:26"},"nodeType":"YulFunctionCall","src":"2779:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:26"},"nodeType":"YulFunctionCall","src":"2753:47:26"},"nodeType":"YulExpressionStatement","src":"2753:47:26"},{"nodeType":"YulAssignment","src":"2809:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:26"},"nodeType":"YulFunctionCall","src":"2817:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:26","type":""}],"src":"2589:313:26"},{"body":{"nodeType":"YulBlock","src":"2953:32:26","statements":[{"nodeType":"YulAssignment","src":"2963:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:26","type":""}],"src":"2908:77:26"},{"body":{"nodeType":"YulBlock","src":"3034:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:26"},"nodeType":"YulFunctionCall","src":"3093:12:26"},"nodeType":"YulExpressionStatement","src":"3093:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:26"},"nodeType":"YulFunctionCall","src":"3064:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:26"},"nodeType":"YulFunctionCall","src":"3054:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:26"},"nodeType":"YulFunctionCall","src":"3047:43:26"},"nodeType":"YulIf","src":"3044:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:26","type":""}],"src":"2991:122:26"},{"body":{"nodeType":"YulBlock","src":"3171:87:26","statements":[{"nodeType":"YulAssignment","src":"3181:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:26"},"nodeType":"YulFunctionCall","src":"3190:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:26"},"nodeType":"YulFunctionCall","src":"3219:33:26"},"nodeType":"YulExpressionStatement","src":"3219:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:26","type":""}],"src":"3119:139:26"},{"body":{"nodeType":"YulBlock","src":"3330:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:26"},"nodeType":"YulFunctionCall","src":"3378:79:26"},"nodeType":"YulExpressionStatement","src":"3378:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:26"},"nodeType":"YulFunctionCall","src":"3347:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:26"},"nodeType":"YulFunctionCall","src":"3343:32:26"},"nodeType":"YulIf","src":"3340:119:26"},{"nodeType":"YulBlock","src":"3469:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:26"},"nodeType":"YulFunctionCall","src":"3544:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:26"},"nodeType":"YulFunctionCall","src":"3523:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:26","type":""}],"src":"3264:329:26"},{"body":{"nodeType":"YulBlock","src":"3644:81:26","statements":[{"nodeType":"YulAssignment","src":"3654:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:26"},"nodeType":"YulFunctionCall","src":"3665:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:26","type":""}],"src":"3599:126:26"},{"body":{"nodeType":"YulBlock","src":"3776:51:26","statements":[{"nodeType":"YulAssignment","src":"3786:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:26"},"nodeType":"YulFunctionCall","src":"3797:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:26","type":""}],"src":"3731:96:26"},{"body":{"nodeType":"YulBlock","src":"3898:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:26"},"nodeType":"YulFunctionCall","src":"3920:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:26"},"nodeType":"YulFunctionCall","src":"3908:37:26"},"nodeType":"YulExpressionStatement","src":"3908:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:26","type":""}],"src":"3833:118:26"},{"body":{"nodeType":"YulBlock","src":"4055:124:26","statements":[{"nodeType":"YulAssignment","src":"4065:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:26"},"nodeType":"YulFunctionCall","src":"4073:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:26"},"nodeType":"YulFunctionCall","src":"4154:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:26"},"nodeType":"YulFunctionCall","src":"4101:71:26"},"nodeType":"YulExpressionStatement","src":"4101:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:26","type":""}],"src":"3957:222:26"},{"body":{"nodeType":"YulBlock","src":"4228:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:26"},"nodeType":"YulFunctionCall","src":"4287:12:26"},"nodeType":"YulExpressionStatement","src":"4287:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:26"},"nodeType":"YulFunctionCall","src":"4258:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:26"},"nodeType":"YulFunctionCall","src":"4248:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:26"},"nodeType":"YulFunctionCall","src":"4241:43:26"},"nodeType":"YulIf","src":"4238:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:26","type":""}],"src":"4185:122:26"},{"body":{"nodeType":"YulBlock","src":"4365:87:26","statements":[{"nodeType":"YulAssignment","src":"4375:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:26"},"nodeType":"YulFunctionCall","src":"4384:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:26"},"nodeType":"YulFunctionCall","src":"4413:33:26"},"nodeType":"YulExpressionStatement","src":"4413:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:26","type":""}],"src":"4313:139:26"},{"body":{"nodeType":"YulBlock","src":"4541:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:26"},"nodeType":"YulFunctionCall","src":"4589:79:26"},"nodeType":"YulExpressionStatement","src":"4589:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:26"},"nodeType":"YulFunctionCall","src":"4558:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:32:26"},"nodeType":"YulIf","src":"4551:119:26"},{"nodeType":"YulBlock","src":"4680:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:26"},"nodeType":"YulFunctionCall","src":"4755:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:26"},"nodeType":"YulFunctionCall","src":"4734:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:26"}]}]},{"nodeType":"YulBlock","src":"4807:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:26"},"nodeType":"YulFunctionCall","src":"4883:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:26"},"nodeType":"YulFunctionCall","src":"4862:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:26","type":""}],"src":"4458:474:26"},{"body":{"nodeType":"YulBlock","src":"5038:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:26"},"nodeType":"YulFunctionCall","src":"5086:79:26"},"nodeType":"YulExpressionStatement","src":"5086:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:26"},"nodeType":"YulFunctionCall","src":"5055:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:26"},"nodeType":"YulFunctionCall","src":"5051:32:26"},"nodeType":"YulIf","src":"5048:119:26"},{"nodeType":"YulBlock","src":"5177:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:26"},"nodeType":"YulFunctionCall","src":"5252:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:26"},"nodeType":"YulFunctionCall","src":"5231:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:26"}]}]},{"nodeType":"YulBlock","src":"5304:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:26"},"nodeType":"YulFunctionCall","src":"5380:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:26"},"nodeType":"YulFunctionCall","src":"5359:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:26"}]}]},{"nodeType":"YulBlock","src":"5432:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:26"},"nodeType":"YulFunctionCall","src":"5508:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:26"},"nodeType":"YulFunctionCall","src":"5487:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:26","type":""}],"src":"4938:619:26"},{"body":{"nodeType":"YulBlock","src":"5629:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"5675:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5677:77:26"},"nodeType":"YulFunctionCall","src":"5677:79:26"},"nodeType":"YulExpressionStatement","src":"5677:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5650:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5659:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5646:3:26"},"nodeType":"YulFunctionCall","src":"5646:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5671:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5642:3:26"},"nodeType":"YulFunctionCall","src":"5642:32:26"},"nodeType":"YulIf","src":"5639:119:26"},{"nodeType":"YulBlock","src":"5768:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5783:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5797:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5787:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5812:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5847:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5858:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5843:3:26"},"nodeType":"YulFunctionCall","src":"5843:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5867:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5822:20:26"},"nodeType":"YulFunctionCall","src":"5822:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5812:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5599:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5610:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5622:6:26","type":""}],"src":"5563:329:26"},{"body":{"nodeType":"YulBlock","src":"5963:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5980:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6003:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5985:17:26"},"nodeType":"YulFunctionCall","src":"5985:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5973:6:26"},"nodeType":"YulFunctionCall","src":"5973:37:26"},"nodeType":"YulExpressionStatement","src":"5973:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5951:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5958:3:26","type":""}],"src":"5898:118:26"},{"body":{"nodeType":"YulBlock","src":"6120:124:26","statements":[{"nodeType":"YulAssignment","src":"6130:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6142:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6153:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6138:3:26"},"nodeType":"YulFunctionCall","src":"6138:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6130:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6210:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6223:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6234:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6219:3:26"},"nodeType":"YulFunctionCall","src":"6219:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6166:43:26"},"nodeType":"YulFunctionCall","src":"6166:71:26"},"nodeType":"YulExpressionStatement","src":"6166:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6092:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6104:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6115:4:26","type":""}],"src":"6022:222:26"},{"body":{"nodeType":"YulBlock","src":"6290:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:26"},"nodeType":"YulFunctionCall","src":"6346:12:26"},"nodeType":"YulExpressionStatement","src":"6346:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:26"},"nodeType":"YulFunctionCall","src":"6320:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:26"},"nodeType":"YulFunctionCall","src":"6310:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:26"},"nodeType":"YulFunctionCall","src":"6303:40:26"},"nodeType":"YulIf","src":"6300:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:26","type":""}],"src":"6250:116:26"},{"body":{"nodeType":"YulBlock","src":"6421:84:26","statements":[{"nodeType":"YulAssignment","src":"6431:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:26"},"nodeType":"YulFunctionCall","src":"6440:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:26"},"nodeType":"YulFunctionCall","src":"6469:30:26"},"nodeType":"YulExpressionStatement","src":"6469:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:26","type":""}],"src":"6372:133:26"},{"body":{"nodeType":"YulBlock","src":"6591:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:26"},"nodeType":"YulFunctionCall","src":"6639:79:26"},"nodeType":"YulExpressionStatement","src":"6639:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:26"},"nodeType":"YulFunctionCall","src":"6608:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:26"},"nodeType":"YulFunctionCall","src":"6604:32:26"},"nodeType":"YulIf","src":"6601:119:26"},{"nodeType":"YulBlock","src":"6730:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:26"},"nodeType":"YulFunctionCall","src":"6805:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:26"},"nodeType":"YulFunctionCall","src":"6784:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:26"}]}]},{"nodeType":"YulBlock","src":"6857:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:26"},"nodeType":"YulFunctionCall","src":"6930:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:26"},"nodeType":"YulFunctionCall","src":"6912:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:26","type":""}],"src":"6511:468:26"},{"body":{"nodeType":"YulBlock","src":"7074:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:26"},"nodeType":"YulFunctionCall","src":"7084:12:26"},"nodeType":"YulExpressionStatement","src":"7084:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:26"},{"body":{"nodeType":"YulBlock","src":"7197:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:26"},"nodeType":"YulFunctionCall","src":"7207:12:26"},"nodeType":"YulExpressionStatement","src":"7207:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:26"},{"body":{"nodeType":"YulBlock","src":"7259:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:26"},"nodeType":"YulFunctionCall","src":"7269:88:26"},"nodeType":"YulExpressionStatement","src":"7269:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:26"},"nodeType":"YulFunctionCall","src":"7366:15:26"},"nodeType":"YulExpressionStatement","src":"7366:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:26"},"nodeType":"YulFunctionCall","src":"7390:15:26"},"nodeType":"YulExpressionStatement","src":"7390:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:26"},{"body":{"nodeType":"YulBlock","src":"7460:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:26"},"nodeType":"YulFunctionCall","src":"7500:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:26"},"nodeType":"YulFunctionCall","src":"7488:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:26"},"nodeType":"YulFunctionCall","src":"7641:18:26"},"nodeType":"YulExpressionStatement","src":"7641:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:26"},"nodeType":"YulFunctionCall","src":"7579:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:26"},"nodeType":"YulFunctionCall","src":"7615:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:26"},"nodeType":"YulFunctionCall","src":"7576:62:26"},"nodeType":"YulIf","src":"7573:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:26"},"nodeType":"YulFunctionCall","src":"7670:22:26"},"nodeType":"YulExpressionStatement","src":"7670:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:26","type":""}],"src":"7417:281:26"},{"body":{"nodeType":"YulBlock","src":"7745:88:26","statements":[{"nodeType":"YulAssignment","src":"7755:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:26"},"nodeType":"YulFunctionCall","src":"7765:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:26"},"nodeType":"YulFunctionCall","src":"7794:33:26"},"nodeType":"YulExpressionStatement","src":"7794:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:26","type":""}],"src":"7704:129:26"},{"body":{"nodeType":"YulBlock","src":"7905:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:26"},"nodeType":"YulFunctionCall","src":"8012:18:26"},"nodeType":"YulExpressionStatement","src":"8012:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:26"},"nodeType":"YulFunctionCall","src":"7979:30:26"},"nodeType":"YulIf","src":"7976:56:26"},{"nodeType":"YulAssignment","src":"8042:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:26"},"nodeType":"YulFunctionCall","src":"8050:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:26"}]},{"nodeType":"YulAssignment","src":"8116:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:26"},"nodeType":"YulFunctionCall","src":"8124:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:26","type":""}],"src":"7839:307:26"},{"body":{"nodeType":"YulBlock","src":"8203:103:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:26"},"nodeType":"YulFunctionCall","src":"8213:30:26"},"nodeType":"YulExpressionStatement","src":"8213:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:26"},"nodeType":"YulFunctionCall","src":"8280:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:26"},"nodeType":"YulFunctionCall","src":"8273:27:26"},"nodeType":"YulExpressionStatement","src":"8273:27:26"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:26","type":""}],"src":"8152:154:26"},{"body":{"nodeType":"YulBlock","src":"8395:327:26","statements":[{"nodeType":"YulAssignment","src":"8405:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:26"},"nodeType":"YulFunctionCall","src":"8430:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:26"},"nodeType":"YulFunctionCall","src":"8414:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:26"},"nodeType":"YulFunctionCall","src":"8488:21:26"},"nodeType":"YulExpressionStatement","src":"8488:21:26"},{"nodeType":"YulVariableDeclaration","src":"8518:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:26"},"nodeType":"YulFunctionCall","src":"8529:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:26"},"nodeType":"YulFunctionCall","src":"8585:79:26"},"nodeType":"YulExpressionStatement","src":"8585:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:26"},"nodeType":"YulFunctionCall","src":"8560:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:26"},"nodeType":"YulFunctionCall","src":"8557:25:26"},"nodeType":"YulIf","src":"8554:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:26"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:26"},"nodeType":"YulFunctionCall","src":"8675:41:26"},"nodeType":"YulExpressionStatement","src":"8675:41:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:26","type":""}],"src":"8312:410:26"},{"body":{"nodeType":"YulBlock","src":"8802:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:26"},"nodeType":"YulFunctionCall","src":"8853:79:26"},"nodeType":"YulExpressionStatement","src":"8853:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:26"},"nodeType":"YulFunctionCall","src":"8826:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:26"},"nodeType":"YulFunctionCall","src":"8822:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:26"},"nodeType":"YulFunctionCall","src":"8815:35:26"},"nodeType":"YulIf","src":"8812:122:26"},{"nodeType":"YulVariableDeclaration","src":"8943:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:26"},"nodeType":"YulFunctionCall","src":"8957:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:26"},"nodeType":"YulFunctionCall","src":"9042:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:26"},"nodeType":"YulFunctionCall","src":"8995:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:26","type":""}],"src":"8741:338:26"},{"body":{"nodeType":"YulBlock","src":"9211:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:26"},"nodeType":"YulFunctionCall","src":"9260:79:26"},"nodeType":"YulExpressionStatement","src":"9260:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:26"},"nodeType":"YulFunctionCall","src":"9228:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:26"},"nodeType":"YulFunctionCall","src":"9224:33:26"},"nodeType":"YulIf","src":"9221:120:26"},{"nodeType":"YulBlock","src":"9351:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:26"},"nodeType":"YulFunctionCall","src":"9426:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:26"},"nodeType":"YulFunctionCall","src":"9405:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:26"}]}]},{"nodeType":"YulBlock","src":"9478:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:26"},"nodeType":"YulFunctionCall","src":"9554:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:26"},"nodeType":"YulFunctionCall","src":"9533:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:26"}]}]},{"nodeType":"YulBlock","src":"9606:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:26"},"nodeType":"YulFunctionCall","src":"9682:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:26"},"nodeType":"YulFunctionCall","src":"9661:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:26"}]}]},{"nodeType":"YulBlock","src":"9734:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:26"},"nodeType":"YulFunctionCall","src":"9776:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:26"},"nodeType":"YulFunctionCall","src":"9763:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:26"},"nodeType":"YulFunctionCall","src":"9844:79:26"},"nodeType":"YulExpressionStatement","src":"9844:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:26"},"nodeType":"YulFunctionCall","src":"9811:30:26"},"nodeType":"YulIf","src":"9808:117:26"},{"nodeType":"YulAssignment","src":"9939:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:26"},"nodeType":"YulFunctionCall","src":"9979:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:26"},"nodeType":"YulFunctionCall","src":"9949:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:26","type":""}],"src":"9085:943:26"},{"body":{"nodeType":"YulBlock","src":"10117:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:26"},"nodeType":"YulFunctionCall","src":"10165:79:26"},"nodeType":"YulExpressionStatement","src":"10165:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:26"},"nodeType":"YulFunctionCall","src":"10134:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:26"},"nodeType":"YulFunctionCall","src":"10130:32:26"},"nodeType":"YulIf","src":"10127:119:26"},{"nodeType":"YulBlock","src":"10256:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:26"},"nodeType":"YulFunctionCall","src":"10331:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:26"},"nodeType":"YulFunctionCall","src":"10310:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:26"}]}]},{"nodeType":"YulBlock","src":"10383:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:26"},"nodeType":"YulFunctionCall","src":"10459:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:26"},"nodeType":"YulFunctionCall","src":"10438:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:26","type":""}],"src":"10034:474:26"},{"body":{"nodeType":"YulBlock","src":"10542:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:26"},"nodeType":"YulFunctionCall","src":"10552:88:26"},"nodeType":"YulExpressionStatement","src":"10552:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:26"},"nodeType":"YulFunctionCall","src":"10649:15:26"},"nodeType":"YulExpressionStatement","src":"10649:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:26"},"nodeType":"YulFunctionCall","src":"10673:15:26"},"nodeType":"YulExpressionStatement","src":"10673:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:26"},{"body":{"nodeType":"YulBlock","src":"10751:269:26","statements":[{"nodeType":"YulAssignment","src":"10761:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:26"},"nodeType":"YulFunctionCall","src":"10771:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:26"},"nodeType":"YulFunctionCall","src":"10818:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:26","statements":[{"nodeType":"YulAssignment","src":"10883:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:26"},"nodeType":"YulFunctionCall","src":"10893:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:26"},"nodeType":"YulFunctionCall","src":"10842:26:26"},"nodeType":"YulIf","src":"10839:81:26"},{"body":{"nodeType":"YulBlock","src":"10972:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:26"},"nodeType":"YulFunctionCall","src":"10986:18:26"},"nodeType":"YulExpressionStatement","src":"10986:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:26"},"nodeType":"YulFunctionCall","src":"10956:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:26"},"nodeType":"YulFunctionCall","src":"10933:38:26"},"nodeType":"YulIf","src":"10930:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:26","type":""}],"src":"10700:320:26"},{"body":{"nodeType":"YulBlock","src":"11132:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:26"},"nodeType":"YulFunctionCall","src":"11150:14:26"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:26","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:26"},"nodeType":"YulFunctionCall","src":"11143:58:26"},"nodeType":"YulExpressionStatement","src":"11143:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:26"},"nodeType":"YulFunctionCall","src":"11218:15:26"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:26","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:26"},"nodeType":"YulFunctionCall","src":"11211:28:26"},"nodeType":"YulExpressionStatement","src":"11211:28:26"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:26","type":""}],"src":"11026:220:26"},{"body":{"nodeType":"YulBlock","src":"11398:220:26","statements":[{"nodeType":"YulAssignment","src":"11408:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:26"},"nodeType":"YulFunctionCall","src":"11415:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:26"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:26"},"nodeType":"YulFunctionCall","src":"11491:93:26"},"nodeType":"YulExpressionStatement","src":"11491:93:26"},{"nodeType":"YulAssignment","src":"11593:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:26"},"nodeType":"YulFunctionCall","src":"11600:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:26"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:26","type":""}],"src":"11252:366:26"},{"body":{"nodeType":"YulBlock","src":"11795:248:26","statements":[{"nodeType":"YulAssignment","src":"11805:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:26"},"nodeType":"YulFunctionCall","src":"11813:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:26"},"nodeType":"YulFunctionCall","src":"11848:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:26"},"nodeType":"YulFunctionCall","src":"11867:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:26"},"nodeType":"YulFunctionCall","src":"11841:47:26"},"nodeType":"YulExpressionStatement","src":"11841:47:26"},{"nodeType":"YulAssignment","src":"11897:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:26"},"nodeType":"YulFunctionCall","src":"11905:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:26","type":""}],"src":"11624:419:26"},{"body":{"nodeType":"YulBlock","src":"12155:142:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:26"},"nodeType":"YulFunctionCall","src":"12173:14:26"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:26","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:26"},"nodeType":"YulFunctionCall","src":"12166:58:26"},"nodeType":"YulExpressionStatement","src":"12166:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:26"},"nodeType":"YulFunctionCall","src":"12241:15:26"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:26","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:26"},"nodeType":"YulFunctionCall","src":"12234:56:26"},"nodeType":"YulExpressionStatement","src":"12234:56:26"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:26","type":""}],"src":"12049:248:26"},{"body":{"nodeType":"YulBlock","src":"12449:220:26","statements":[{"nodeType":"YulAssignment","src":"12459:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:26","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:26"},"nodeType":"YulFunctionCall","src":"12466:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:26"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:26"},"nodeType":"YulFunctionCall","src":"12542:93:26"},"nodeType":"YulExpressionStatement","src":"12542:93:26"},{"nodeType":"YulAssignment","src":"12644:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:26"},"nodeType":"YulFunctionCall","src":"12651:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:26"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:26","type":""}],"src":"12303:366:26"},{"body":{"nodeType":"YulBlock","src":"12846:248:26","statements":[{"nodeType":"YulAssignment","src":"12856:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:26"},"nodeType":"YulFunctionCall","src":"12864:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:26"},"nodeType":"YulFunctionCall","src":"12899:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:26"},"nodeType":"YulFunctionCall","src":"12918:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:26"},"nodeType":"YulFunctionCall","src":"12892:47:26"},"nodeType":"YulExpressionStatement","src":"12892:47:26"},{"nodeType":"YulAssignment","src":"12948:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:26"},"nodeType":"YulFunctionCall","src":"12956:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:26","type":""}],"src":"12675:419:26"},{"body":{"nodeType":"YulBlock","src":"13206:126:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:26"},"nodeType":"YulFunctionCall","src":"13224:14:26"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:26","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:26"},"nodeType":"YulFunctionCall","src":"13217:58:26"},"nodeType":"YulExpressionStatement","src":"13217:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:26"},"nodeType":"YulFunctionCall","src":"13292:15:26"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:26","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:26"},"nodeType":"YulFunctionCall","src":"13285:40:26"},"nodeType":"YulExpressionStatement","src":"13285:40:26"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:26","type":""}],"src":"13100:232:26"},{"body":{"nodeType":"YulBlock","src":"13484:220:26","statements":[{"nodeType":"YulAssignment","src":"13494:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:26","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:26"},"nodeType":"YulFunctionCall","src":"13501:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:26"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:26"},"nodeType":"YulFunctionCall","src":"13577:93:26"},"nodeType":"YulExpressionStatement","src":"13577:93:26"},{"nodeType":"YulAssignment","src":"13679:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:26"},"nodeType":"YulFunctionCall","src":"13686:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:26"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:26","type":""}],"src":"13338:366:26"},{"body":{"nodeType":"YulBlock","src":"13881:248:26","statements":[{"nodeType":"YulAssignment","src":"13891:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:26"},"nodeType":"YulFunctionCall","src":"13899:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:26"},"nodeType":"YulFunctionCall","src":"13934:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:26"},"nodeType":"YulFunctionCall","src":"13953:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:26"},"nodeType":"YulFunctionCall","src":"13927:47:26"},"nodeType":"YulExpressionStatement","src":"13927:47:26"},{"nodeType":"YulAssignment","src":"13983:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:26"},"nodeType":"YulFunctionCall","src":"13991:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:26","type":""}],"src":"13710:419:26"},{"body":{"nodeType":"YulBlock","src":"14241:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:26"},"nodeType":"YulFunctionCall","src":"14259:14:26"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:26","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:26"},"nodeType":"YulFunctionCall","src":"14252:50:26"},"nodeType":"YulExpressionStatement","src":"14252:50:26"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:26","type":""}],"src":"14135:174:26"},{"body":{"nodeType":"YulBlock","src":"14461:220:26","statements":[{"nodeType":"YulAssignment","src":"14471:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:26"},"nodeType":"YulFunctionCall","src":"14478:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:26"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:26"},"nodeType":"YulFunctionCall","src":"14554:93:26"},"nodeType":"YulExpressionStatement","src":"14554:93:26"},{"nodeType":"YulAssignment","src":"14656:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:26"},"nodeType":"YulFunctionCall","src":"14663:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:26"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:26","type":""}],"src":"14315:366:26"},{"body":{"nodeType":"YulBlock","src":"14858:248:26","statements":[{"nodeType":"YulAssignment","src":"14868:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:26"},"nodeType":"YulFunctionCall","src":"14876:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:26"},"nodeType":"YulFunctionCall","src":"14911:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:26"},"nodeType":"YulFunctionCall","src":"14930:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:26"},"nodeType":"YulFunctionCall","src":"14904:47:26"},"nodeType":"YulExpressionStatement","src":"14904:47:26"},{"nodeType":"YulAssignment","src":"14960:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:26"},"nodeType":"YulFunctionCall","src":"14968:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:26","type":""}],"src":"14687:419:26"},{"body":{"nodeType":"YulBlock","src":"15218:122:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:26"},"nodeType":"YulFunctionCall","src":"15236:14:26"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:26","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:26"},"nodeType":"YulFunctionCall","src":"15229:58:26"},"nodeType":"YulExpressionStatement","src":"15229:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:26"},"nodeType":"YulFunctionCall","src":"15304:15:26"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:26","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:26"},"nodeType":"YulFunctionCall","src":"15297:36:26"},"nodeType":"YulExpressionStatement","src":"15297:36:26"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:26","type":""}],"src":"15112:228:26"},{"body":{"nodeType":"YulBlock","src":"15492:220:26","statements":[{"nodeType":"YulAssignment","src":"15502:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:26","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:26"},"nodeType":"YulFunctionCall","src":"15509:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:26"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:26"},"nodeType":"YulFunctionCall","src":"15585:93:26"},"nodeType":"YulExpressionStatement","src":"15585:93:26"},{"nodeType":"YulAssignment","src":"15687:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:26"},"nodeType":"YulFunctionCall","src":"15694:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:26"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:26","type":""}],"src":"15346:366:26"},{"body":{"nodeType":"YulBlock","src":"15889:248:26","statements":[{"nodeType":"YulAssignment","src":"15899:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:26"},"nodeType":"YulFunctionCall","src":"15907:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:26"},"nodeType":"YulFunctionCall","src":"15942:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:26"},"nodeType":"YulFunctionCall","src":"15961:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:26"},"nodeType":"YulFunctionCall","src":"15935:47:26"},"nodeType":"YulExpressionStatement","src":"15935:47:26"},{"nodeType":"YulAssignment","src":"15991:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:26"},"nodeType":"YulFunctionCall","src":"15999:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:26","type":""}],"src":"15718:419:26"},{"body":{"nodeType":"YulBlock","src":"16257:34:26","statements":[{"nodeType":"YulAssignment","src":"16267:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"16282:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16267:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16229:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"16234:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16245:11:26","type":""}],"src":"16143:148:26"},{"body":{"nodeType":"YulBlock","src":"16407:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"16417:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16464:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16431:32:26"},"nodeType":"YulFunctionCall","src":"16431:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16421:6:26","type":""}]},{"nodeType":"YulAssignment","src":"16479:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16563:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"16568:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16486:76:26"},"nodeType":"YulFunctionCall","src":"16486:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16479:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16610:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"16617:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16606:3:26"},"nodeType":"YulFunctionCall","src":"16606:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"16624:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"16629:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16584:21:26"},"nodeType":"YulFunctionCall","src":"16584:52:26"},"nodeType":"YulExpressionStatement","src":"16584:52:26"},{"nodeType":"YulAssignment","src":"16645:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16656:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"16661:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16652:3:26"},"nodeType":"YulFunctionCall","src":"16652:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16645:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16388:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16395:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16403:3:26","type":""}],"src":"16297:377:26"},{"body":{"nodeType":"YulBlock","src":"16864:251:26","statements":[{"nodeType":"YulAssignment","src":"16875:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16964:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"16973:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16882:81:26"},"nodeType":"YulFunctionCall","src":"16882:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16875:3:26"}]},{"nodeType":"YulAssignment","src":"16987:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17076:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"17085:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16994:81:26"},"nodeType":"YulFunctionCall","src":"16994:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16987:3:26"}]},{"nodeType":"YulAssignment","src":"17099:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"17106:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17099:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16835:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16841:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16849:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16860:3:26","type":""}],"src":"16680:435:26"},{"body":{"nodeType":"YulBlock","src":"17227:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17249:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17257:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17245:3:26"},"nodeType":"YulFunctionCall","src":"17245:14:26"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17261:34:26","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17238:6:26"},"nodeType":"YulFunctionCall","src":"17238:58:26"},"nodeType":"YulExpressionStatement","src":"17238:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17317:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17325:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17313:3:26"},"nodeType":"YulFunctionCall","src":"17313:15:26"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17330:7:26","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17306:6:26"},"nodeType":"YulFunctionCall","src":"17306:32:26"},"nodeType":"YulExpressionStatement","src":"17306:32:26"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17219:6:26","type":""}],"src":"17121:224:26"},{"body":{"nodeType":"YulBlock","src":"17497:220:26","statements":[{"nodeType":"YulAssignment","src":"17507:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17573:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17578:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17514:58:26"},"nodeType":"YulFunctionCall","src":"17514:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17507:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17679:3:26"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17590:88:26"},"nodeType":"YulFunctionCall","src":"17590:93:26"},"nodeType":"YulExpressionStatement","src":"17590:93:26"},{"nodeType":"YulAssignment","src":"17692:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17703:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17708:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17699:3:26"},"nodeType":"YulFunctionCall","src":"17699:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17692:3:26"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17485:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17493:3:26","type":""}],"src":"17351:366:26"},{"body":{"nodeType":"YulBlock","src":"17894:248:26","statements":[{"nodeType":"YulAssignment","src":"17904:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17916:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17927:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17912:3:26"},"nodeType":"YulFunctionCall","src":"17912:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17904:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17951:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17962:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17947:3:26"},"nodeType":"YulFunctionCall","src":"17947:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17970:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17976:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17966:3:26"},"nodeType":"YulFunctionCall","src":"17966:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17940:6:26"},"nodeType":"YulFunctionCall","src":"17940:47:26"},"nodeType":"YulExpressionStatement","src":"17940:47:26"},{"nodeType":"YulAssignment","src":"17996:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18130:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18004:124:26"},"nodeType":"YulFunctionCall","src":"18004:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17996:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17874:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17889:4:26","type":""}],"src":"17723:419:26"},{"body":{"nodeType":"YulBlock","src":"18254:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18276:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18284:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18272:3:26"},"nodeType":"YulFunctionCall","src":"18272:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18288:34:26","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18265:6:26"},"nodeType":"YulFunctionCall","src":"18265:58:26"},"nodeType":"YulExpressionStatement","src":"18265:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18344:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18352:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18340:3:26"},"nodeType":"YulFunctionCall","src":"18340:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18357:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18333:6:26"},"nodeType":"YulFunctionCall","src":"18333:31:26"},"nodeType":"YulExpressionStatement","src":"18333:31:26"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18246:6:26","type":""}],"src":"18148:223:26"},{"body":{"nodeType":"YulBlock","src":"18523:220:26","statements":[{"nodeType":"YulAssignment","src":"18533:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18599:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18604:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18540:58:26"},"nodeType":"YulFunctionCall","src":"18540:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18533:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18705:3:26"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18616:88:26"},"nodeType":"YulFunctionCall","src":"18616:93:26"},"nodeType":"YulExpressionStatement","src":"18616:93:26"},{"nodeType":"YulAssignment","src":"18718:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18729:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18734:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18725:3:26"},"nodeType":"YulFunctionCall","src":"18725:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18718:3:26"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18511:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18519:3:26","type":""}],"src":"18377:366:26"},{"body":{"nodeType":"YulBlock","src":"18920:248:26","statements":[{"nodeType":"YulAssignment","src":"18930:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18942:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18953:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18938:3:26"},"nodeType":"YulFunctionCall","src":"18938:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18930:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18977:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18988:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18973:3:26"},"nodeType":"YulFunctionCall","src":"18973:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18996:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19002:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18992:3:26"},"nodeType":"YulFunctionCall","src":"18992:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18966:6:26"},"nodeType":"YulFunctionCall","src":"18966:47:26"},"nodeType":"YulExpressionStatement","src":"18966:47:26"},{"nodeType":"YulAssignment","src":"19022:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19156:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19030:124:26"},"nodeType":"YulFunctionCall","src":"19030:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19022:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18900:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18915:4:26","type":""}],"src":"18749:419:26"},{"body":{"nodeType":"YulBlock","src":"19280:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19302:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19310:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19298:3:26"},"nodeType":"YulFunctionCall","src":"19298:14:26"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19314:27:26","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19291:6:26"},"nodeType":"YulFunctionCall","src":"19291:51:26"},"nodeType":"YulExpressionStatement","src":"19291:51:26"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19272:6:26","type":""}],"src":"19174:175:26"},{"body":{"nodeType":"YulBlock","src":"19501:220:26","statements":[{"nodeType":"YulAssignment","src":"19511:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19577:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19582:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19518:58:26"},"nodeType":"YulFunctionCall","src":"19518:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19511:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19683:3:26"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19594:88:26"},"nodeType":"YulFunctionCall","src":"19594:93:26"},"nodeType":"YulExpressionStatement","src":"19594:93:26"},{"nodeType":"YulAssignment","src":"19696:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19707:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19712:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19703:3:26"},"nodeType":"YulFunctionCall","src":"19703:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19696:3:26"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19489:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19497:3:26","type":""}],"src":"19355:366:26"},{"body":{"nodeType":"YulBlock","src":"19898:248:26","statements":[{"nodeType":"YulAssignment","src":"19908:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19920:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19931:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19916:3:26"},"nodeType":"YulFunctionCall","src":"19916:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19908:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19955:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19966:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19951:3:26"},"nodeType":"YulFunctionCall","src":"19951:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19974:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19980:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19970:3:26"},"nodeType":"YulFunctionCall","src":"19970:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19944:6:26"},"nodeType":"YulFunctionCall","src":"19944:47:26"},"nodeType":"YulExpressionStatement","src":"19944:47:26"},{"nodeType":"YulAssignment","src":"20000:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20134:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20008:124:26"},"nodeType":"YulFunctionCall","src":"20008:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20000:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19878:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19893:4:26","type":""}],"src":"19727:419:26"},{"body":{"nodeType":"YulBlock","src":"20258:131:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20280:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20288:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20276:3:26"},"nodeType":"YulFunctionCall","src":"20276:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20292:34:26","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20269:6:26"},"nodeType":"YulFunctionCall","src":"20269:58:26"},"nodeType":"YulExpressionStatement","src":"20269:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20348:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20356:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20344:3:26"},"nodeType":"YulFunctionCall","src":"20344:15:26"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20361:20:26","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20337:6:26"},"nodeType":"YulFunctionCall","src":"20337:45:26"},"nodeType":"YulExpressionStatement","src":"20337:45:26"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20250:6:26","type":""}],"src":"20152:237:26"},{"body":{"nodeType":"YulBlock","src":"20541:220:26","statements":[{"nodeType":"YulAssignment","src":"20551:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20617:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20622:2:26","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20558:58:26"},"nodeType":"YulFunctionCall","src":"20558:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20551:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20723:3:26"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20634:88:26"},"nodeType":"YulFunctionCall","src":"20634:93:26"},"nodeType":"YulExpressionStatement","src":"20634:93:26"},{"nodeType":"YulAssignment","src":"20736:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20747:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20752:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20743:3:26"},"nodeType":"YulFunctionCall","src":"20743:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20736:3:26"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20529:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20537:3:26","type":""}],"src":"20395:366:26"},{"body":{"nodeType":"YulBlock","src":"20938:248:26","statements":[{"nodeType":"YulAssignment","src":"20948:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20960:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20971:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20956:3:26"},"nodeType":"YulFunctionCall","src":"20956:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20948:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20995:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21006:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20991:3:26"},"nodeType":"YulFunctionCall","src":"20991:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21014:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21020:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21010:3:26"},"nodeType":"YulFunctionCall","src":"21010:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20984:6:26"},"nodeType":"YulFunctionCall","src":"20984:47:26"},"nodeType":"YulExpressionStatement","src":"20984:47:26"},{"nodeType":"YulAssignment","src":"21040:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21174:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21048:124:26"},"nodeType":"YulFunctionCall","src":"21048:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21040:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20918:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20933:4:26","type":""}],"src":"20767:419:26"},{"body":{"nodeType":"YulBlock","src":"21220:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21237:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21240:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21230:6:26"},"nodeType":"YulFunctionCall","src":"21230:88:26"},"nodeType":"YulExpressionStatement","src":"21230:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21334:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21337:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21327:6:26"},"nodeType":"YulFunctionCall","src":"21327:15:26"},"nodeType":"YulExpressionStatement","src":"21327:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21358:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21361:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21351:6:26"},"nodeType":"YulFunctionCall","src":"21351:15:26"},"nodeType":"YulExpressionStatement","src":"21351:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21192:180:26"},{"body":{"nodeType":"YulBlock","src":"21436:40:26","statements":[{"nodeType":"YulAssignment","src":"21447:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21463:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21457:5:26"},"nodeType":"YulFunctionCall","src":"21457:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21447:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21419:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21429:6:26","type":""}],"src":"21378:98:26"},{"body":{"nodeType":"YulBlock","src":"21577:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21594:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21599:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21587:6:26"},"nodeType":"YulFunctionCall","src":"21587:19:26"},"nodeType":"YulExpressionStatement","src":"21587:19:26"},{"nodeType":"YulAssignment","src":"21615:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21634:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21639:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21630:3:26"},"nodeType":"YulFunctionCall","src":"21630:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21615:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21549:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"21554:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21565:11:26","type":""}],"src":"21482:168:26"},{"body":{"nodeType":"YulBlock","src":"21746:270:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21756:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21802:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21770:31:26"},"nodeType":"YulFunctionCall","src":"21770:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21760:6:26","type":""}]},{"nodeType":"YulAssignment","src":"21817:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21882:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21887:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21824:57:26"},"nodeType":"YulFunctionCall","src":"21824:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21817:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21929:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"21936:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21925:3:26"},"nodeType":"YulFunctionCall","src":"21925:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"21943:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21948:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21903:21:26"},"nodeType":"YulFunctionCall","src":"21903:52:26"},"nodeType":"YulExpressionStatement","src":"21903:52:26"},{"nodeType":"YulAssignment","src":"21964:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21975:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22002:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21980:21:26"},"nodeType":"YulFunctionCall","src":"21980:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21971:3:26"},"nodeType":"YulFunctionCall","src":"21971:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21964:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21727:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21734:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21742:3:26","type":""}],"src":"21656:360:26"},{"body":{"nodeType":"YulBlock","src":"22222:440:26","statements":[{"nodeType":"YulAssignment","src":"22232:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22244:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22255:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22240:3:26"},"nodeType":"YulFunctionCall","src":"22240:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22232:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22313:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22326:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22337:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22322:3:26"},"nodeType":"YulFunctionCall","src":"22322:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22269:43:26"},"nodeType":"YulFunctionCall","src":"22269:71:26"},"nodeType":"YulExpressionStatement","src":"22269:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22394:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22407:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22418:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22403:3:26"},"nodeType":"YulFunctionCall","src":"22403:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22350:43:26"},"nodeType":"YulFunctionCall","src":"22350:72:26"},"nodeType":"YulExpressionStatement","src":"22350:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22476:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22489:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22500:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22485:3:26"},"nodeType":"YulFunctionCall","src":"22485:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22432:43:26"},"nodeType":"YulFunctionCall","src":"22432:72:26"},"nodeType":"YulExpressionStatement","src":"22432:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22525:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22536:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22521:3:26"},"nodeType":"YulFunctionCall","src":"22521:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22545:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22551:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22541:3:26"},"nodeType":"YulFunctionCall","src":"22541:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22514:6:26"},"nodeType":"YulFunctionCall","src":"22514:48:26"},"nodeType":"YulExpressionStatement","src":"22514:48:26"},{"nodeType":"YulAssignment","src":"22571:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22641:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"22650:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22579:61:26"},"nodeType":"YulFunctionCall","src":"22579:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22571:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22170:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22182:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22190:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22198:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22206:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22217:4:26","type":""}],"src":"22022:640:26"},{"body":{"nodeType":"YulBlock","src":"22730:79:26","statements":[{"nodeType":"YulAssignment","src":"22740:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22755:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22749:5:26"},"nodeType":"YulFunctionCall","src":"22749:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22740:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22797:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22771:25:26"},"nodeType":"YulFunctionCall","src":"22771:32:26"},"nodeType":"YulExpressionStatement","src":"22771:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22708:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"22716:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22724:5:26","type":""}],"src":"22668:141:26"},{"body":{"nodeType":"YulBlock","src":"22891:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"22937:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22939:77:26"},"nodeType":"YulFunctionCall","src":"22939:79:26"},"nodeType":"YulExpressionStatement","src":"22939:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22912:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22921:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22908:3:26"},"nodeType":"YulFunctionCall","src":"22908:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"22933:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22904:3:26"},"nodeType":"YulFunctionCall","src":"22904:32:26"},"nodeType":"YulIf","src":"22901:119:26"},{"nodeType":"YulBlock","src":"23030:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23045:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23059:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23049:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23074:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23119:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23130:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23115:3:26"},"nodeType":"YulFunctionCall","src":"23115:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23139:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23084:30:26"},"nodeType":"YulFunctionCall","src":"23084:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23074:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22861:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22872:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22884:6:26","type":""}],"src":"22815:349:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e99190611513565b6102bc565b6040516100fb919061155b565b60405180910390f35b61010c61039e565b604051610119919061160f565b60405180910390f35b61013c60048036038101906101379190611667565b610430565b60405161014991906116d5565b60405180910390f35b61016c6004803603810190610167919061171c565b610476565b005b6101886004803603810190610183919061175c565b61058e565b005b6101a4600480360381019061019f919061175c565b6105ee565b005b6101c060048036038101906101bb9190611667565b61060e565b6040516101cd91906116d5565b60405180910390f35b6101f060048036038101906101eb91906117af565b610695565b6040516101fd91906117eb565b60405180910390f35b61020e61074d565b60405161021b919061160f565b60405180910390f35b61023e60048036038101906102399190611832565b6107df565b005b61025a600480360381019061025591906119a7565b6107f5565b005b61027660048036038101906102719190611667565b610857565b604051610283919061160f565b60405180910390f35b6102a660048036038101906102a19190611a2a565b6108bf565b6040516102b3919061155b565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610953565b5b9050919050565b6060600080546103ad90611a99565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a99565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109bd565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060e565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611b3d565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610511610a08565b73ffffffffffffffffffffffffffffffffffffffff161480610540575061053f8161053a610a08565b6108bf565b5b61057f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057690611bcf565b60405180910390fd5b6105898383610a10565b505050565b61059f610599610a08565b82610ac9565b6105de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d590611c61565b60405180910390fd5b6105e9838383610b5e565b505050565b610609838383604051806020016040528060008152506107f5565b505050565b60008061061a83610e58565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561068c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068390611ccd565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fd90611d5f565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075c90611a99565b80601f016020809104026020016040519081016040528092919081815260200182805461078890611a99565b80156107d55780601f106107aa576101008083540402835291602001916107d5565b820191906000526020600020905b8154815290600101906020018083116107b857829003601f168201915b5050505050905090565b6107f16107ea610a08565b8383610e95565b5050565b610806610800610a08565b83610ac9565b610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083c90611c61565b60405180910390fd5b61085184848484611002565b50505050565b6060610862826109bd565b600061086c61105e565b9050600081511161088c57604051806020016040528060008152506108b7565b8061089684611075565b6040516020016108a7929190611dbb565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c68161114d565b610a05576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fc90611ccd565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a838361060e565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad58361060e565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b175750610b1681856108bf565b5b80610b5557508373ffffffffffffffffffffffffffffffffffffffff16610b3d84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7e8261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610bd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bcb90611e51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3b90611ee3565b60405180910390fd5b610c51838383600161118e565b8273ffffffffffffffffffffffffffffffffffffffff16610c718261060e565b73ffffffffffffffffffffffffffffffffffffffff1614610cc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cbe90611e51565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e538383836001611194565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610efb90611f4f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff5919061155b565b60405180910390a3505050565b61100d848484610b5e565b6110198484848461119a565b611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104f90611fe1565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161108484611331565b01905060008167ffffffffffffffff8111156110a3576110a261187c565b5b6040519080825280601f01601f1916602001820160405280156110d55781602001600182028036833780820191505090505b509050600082602001820190505b600115611142578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112c5761112b612001565b5b049450600085141561113d57611142565b6110e3565b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116f83610e58565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111bb8473ffffffffffffffffffffffffffffffffffffffff16611484565b15611324578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111e4610a08565b8786866040518563ffffffff1660e01b81526004016112069493929190612085565b602060405180830381600087803b15801561122057600080fd5b505af192505050801561125157506040513d601f19601f8201168201806040525081019061124e91906120e6565b60015b6112d4573d8060008114611281576040519150601f19603f3d011682016040523d82523d6000602084013e611286565b606091505b506000815114156112cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c390611fe1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611329565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061138f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161138557611384612001565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113cc576d04ee2d6d415b85acef810000000083816113c2576113c1612001565b5b0492506020810190505b662386f26fc1000083106113fb57662386f26fc1000083816113f1576113f0612001565b5b0492506010810190505b6305f5e1008310611424576305f5e100838161141a57611419612001565b5b0492506008810190505b612710831061144957612710838161143f5761143e612001565b5b0492506004810190505b6064831061146c576064838161146257611461612001565b5b0492506002810190505b600a831061147b576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114f0816114bb565b81146114fb57600080fd5b50565b60008135905061150d816114e7565b92915050565b600060208284031215611529576115286114b1565b5b6000611537848285016114fe565b91505092915050565b60008115159050919050565b61155581611540565b82525050565b6000602082019050611570600083018461154c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156115b0578082015181840152602081019050611595565b838111156115bf576000848401525b50505050565b6000601f19601f8301169050919050565b60006115e182611576565b6115eb8185611581565b93506115fb818560208601611592565b611604816115c5565b840191505092915050565b6000602082019050818103600083015261162981846115d6565b905092915050565b6000819050919050565b61164481611631565b811461164f57600080fd5b50565b6000813590506116618161163b565b92915050565b60006020828403121561167d5761167c6114b1565b5b600061168b84828501611652565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116bf82611694565b9050919050565b6116cf816116b4565b82525050565b60006020820190506116ea60008301846116c6565b92915050565b6116f9816116b4565b811461170457600080fd5b50565b600081359050611716816116f0565b92915050565b60008060408385031215611733576117326114b1565b5b600061174185828601611707565b925050602061175285828601611652565b9150509250929050565b600080600060608486031215611775576117746114b1565b5b600061178386828701611707565b935050602061179486828701611707565b92505060406117a586828701611652565b9150509250925092565b6000602082840312156117c5576117c46114b1565b5b60006117d384828501611707565b91505092915050565b6117e581611631565b82525050565b600060208201905061180060008301846117dc565b92915050565b61180f81611540565b811461181a57600080fd5b50565b60008135905061182c81611806565b92915050565b60008060408385031215611849576118486114b1565b5b600061185785828601611707565b92505060206118688582860161181d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6118b4826115c5565b810181811067ffffffffffffffff821117156118d3576118d261187c565b5b80604052505050565b60006118e66114a7565b90506118f282826118ab565b919050565b600067ffffffffffffffff8211156119125761191161187c565b5b61191b826115c5565b9050602081019050919050565b82818337600083830152505050565b600061194a611945846118f7565b6118dc565b90508281526020810184848401111561196657611965611877565b5b611971848285611928565b509392505050565b600082601f83011261198e5761198d611872565b5b813561199e848260208601611937565b91505092915050565b600080600080608085870312156119c1576119c06114b1565b5b60006119cf87828801611707565b94505060206119e087828801611707565b93505060406119f187828801611652565b925050606085013567ffffffffffffffff811115611a1257611a116114b6565b5b611a1e87828801611979565b91505092959194509250565b60008060408385031215611a4157611a406114b1565b5b6000611a4f85828601611707565b9250506020611a6085828601611707565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ab157607f821691505b60208210811415611ac557611ac4611a6a565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b27602183611581565b9150611b3282611acb565b604082019050919050565b60006020820190508181036000830152611b5681611b1a565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611bb9603d83611581565b9150611bc482611b5d565b604082019050919050565b60006020820190508181036000830152611be881611bac565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c4b602d83611581565b9150611c5682611bef565b604082019050919050565b60006020820190508181036000830152611c7a81611c3e565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611cb7601883611581565b9150611cc282611c81565b602082019050919050565b60006020820190508181036000830152611ce681611caa565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d49602983611581565b9150611d5482611ced565b604082019050919050565b60006020820190508181036000830152611d7881611d3c565b9050919050565b600081905092915050565b6000611d9582611576565b611d9f8185611d7f565b9350611daf818560208601611592565b80840191505092915050565b6000611dc78285611d8a565b9150611dd38284611d8a565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e3b602583611581565b9150611e4682611ddf565b604082019050919050565b60006020820190508181036000830152611e6a81611e2e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ecd602483611581565b9150611ed882611e71565b604082019050919050565b60006020820190508181036000830152611efc81611ec0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f39601983611581565b9150611f4482611f03565b602082019050919050565b60006020820190508181036000830152611f6881611f2c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fcb603283611581565b9150611fd682611f6f565b604082019050919050565b60006020820190508181036000830152611ffa81611fbe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061205782612030565b612061818561203b565b9350612071818560208601611592565b61207a816115c5565b840191505092915050565b600060808201905061209a60008301876116c6565b6120a760208301866116c6565b6120b460408301856117dc565b81810360608301526120c6818461204c565b905095945050505050565b6000815190506120e0816114e7565b92915050565b6000602082840312156120fc576120fb6114b1565b5b600061210a848285016120d1565b9150509291505056fea264697066735822122040030865e3d0ca91308c8c72d6cfc522e116caca0db2a25d839879719b468bea64736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x1513 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x175C JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x60E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x17AF JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1832 JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x19A7 JUMP JUMPDEST PUSH2 0x7F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x1667 JUMP JUMPDEST PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A2A JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x953 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E9 SWAP1 PUSH2 0x1B3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x511 PUSH2 0xA08 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x540 JUMPI POP PUSH2 0x53F DUP2 PUSH2 0x53A PUSH2 0xA08 JUMP JUMPDEST PUSH2 0x8BF JUMP JUMPDEST JUMPDEST PUSH2 0x57F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x576 SWAP1 PUSH2 0x1BCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x589 DUP4 DUP4 PUSH2 0xA10 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59F PUSH2 0x599 PUSH2 0xA08 JUMP JUMPDEST DUP3 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E9 DUP4 DUP4 DUP4 PUSH2 0xB5E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x609 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x61A DUP4 PUSH2 0xE58 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x68C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x683 SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x706 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FD SWAP1 PUSH2 0x1D5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x75C SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x788 SWAP1 PUSH2 0x1A99 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7AA JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7F1 PUSH2 0x7EA PUSH2 0xA08 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE95 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x806 PUSH2 0x800 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0xAC9 JUMP JUMPDEST PUSH2 0x845 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83C SWAP1 PUSH2 0x1C61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x851 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1002 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x862 DUP3 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86C PUSH2 0x105E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x88C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B7 JUMP JUMPDEST DUP1 PUSH2 0x896 DUP5 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A7 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C6 DUP2 PUSH2 0x114D JUMP JUMPDEST PUSH2 0xA05 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FC SWAP1 PUSH2 0x1CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA83 DUP4 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD5 DUP4 PUSH2 0x60E JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB17 JUMPI POP PUSH2 0xB16 DUP2 DUP6 PUSH2 0x8BF JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB55 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7E DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBCB SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3B SWAP1 PUSH2 0x1EE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC51 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x118E JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC71 DUP3 PUSH2 0x60E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBE SWAP1 PUSH2 0x1E51 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE53 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1194 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEFB SWAP1 PUSH2 0x1F4F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF5 SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x100D DUP5 DUP5 DUP5 PUSH2 0xB5E JUMP JUMPDEST PUSH2 0x1019 DUP5 DUP5 DUP5 DUP5 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x1058 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104F SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1084 DUP5 PUSH2 0x1331 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x10A3 JUMPI PUSH2 0x10A2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1142 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x112C JUMPI PUSH2 0x112B PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x113D JUMPI PUSH2 0x1142 JUMP JUMPDEST PUSH2 0x10E3 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x116F DUP4 PUSH2 0xE58 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11BB DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1484 JUMP JUMPDEST ISZERO PUSH2 0x1324 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11E4 PUSH2 0xA08 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1206 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1251 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x124E SWAP2 SWAP1 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12D4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1281 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1286 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x12CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12C3 SWAP1 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1329 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x138F JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1385 JUMPI PUSH2 0x1384 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13CC JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13C2 JUMPI PUSH2 0x13C1 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13FB JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13F1 JUMPI PUSH2 0x13F0 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1424 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x141A JUMPI PUSH2 0x1419 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1449 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x143F JUMPI PUSH2 0x143E PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x146C JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1462 JUMPI PUSH2 0x1461 PUSH2 0x2001 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x147B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14F0 DUP2 PUSH2 0x14BB JUMP JUMPDEST DUP2 EQ PUSH2 0x14FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x150D DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1529 JUMPI PUSH2 0x1528 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1537 DUP5 DUP3 DUP6 ADD PUSH2 0x14FE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1555 DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1570 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x154C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x15B0 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1595 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x15BF JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15E1 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x15EB DUP2 DUP6 PUSH2 0x1581 JUMP JUMPDEST SWAP4 POP PUSH2 0x15FB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x1604 DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1629 DUP2 DUP5 PUSH2 0x15D6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1644 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP2 EQ PUSH2 0x164F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1661 DUP2 PUSH2 0x163B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x167D JUMPI PUSH2 0x167C PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x168B DUP5 DUP3 DUP6 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16BF DUP3 PUSH2 0x1694 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CF DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x16C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16F9 DUP2 PUSH2 0x16B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1716 DUP2 PUSH2 0x16F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1733 JUMPI PUSH2 0x1732 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1741 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1752 DUP6 DUP3 DUP7 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1775 JUMPI PUSH2 0x1774 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1783 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1794 DUP7 DUP3 DUP8 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x17A5 DUP7 DUP3 DUP8 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x17C5 JUMPI PUSH2 0x17C4 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17D3 DUP5 DUP3 DUP6 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x180F DUP2 PUSH2 0x1540 JUMP JUMPDEST DUP2 EQ PUSH2 0x181A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x182C DUP2 PUSH2 0x1806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1849 JUMPI PUSH2 0x1848 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1857 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1868 DUP6 DUP3 DUP7 ADD PUSH2 0x181D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x18B4 DUP3 PUSH2 0x15C5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18D3 JUMPI PUSH2 0x18D2 PUSH2 0x187C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E6 PUSH2 0x14A7 JUMP JUMPDEST SWAP1 POP PUSH2 0x18F2 DUP3 DUP3 PUSH2 0x18AB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x187C JUMP JUMPDEST JUMPDEST PUSH2 0x191B DUP3 PUSH2 0x15C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x194A PUSH2 0x1945 DUP5 PUSH2 0x18F7 JUMP JUMPDEST PUSH2 0x18DC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x1877 JUMP JUMPDEST JUMPDEST PUSH2 0x1971 DUP5 DUP3 DUP6 PUSH2 0x1928 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x198E JUMPI PUSH2 0x198D PUSH2 0x1872 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x199E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1937 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19C1 JUMPI PUSH2 0x19C0 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19CF DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19E0 DUP8 DUP3 DUP9 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19F1 DUP8 DUP3 DUP9 ADD PUSH2 0x1652 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A12 JUMPI PUSH2 0x1A11 PUSH2 0x14B6 JUMP JUMPDEST JUMPDEST PUSH2 0x1A1E DUP8 DUP3 DUP9 ADD PUSH2 0x1979 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A41 JUMPI PUSH2 0x1A40 PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A4F DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A60 DUP6 DUP3 DUP7 ADD PUSH2 0x1707 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1AB1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1AC5 JUMPI PUSH2 0x1AC4 PUSH2 0x1A6A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B27 PUSH1 0x21 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B32 DUP3 PUSH2 0x1ACB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B56 DUP2 PUSH2 0x1B1A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BB9 PUSH1 0x3D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BC4 DUP3 PUSH2 0x1B5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BE8 DUP2 PUSH2 0x1BAC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C4B PUSH1 0x2D DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C56 DUP3 PUSH2 0x1BEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C7A DUP2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB7 PUSH1 0x18 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CC2 DUP3 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE6 DUP2 PUSH2 0x1CAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D49 PUSH1 0x29 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D54 DUP3 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D78 DUP2 PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D95 DUP3 PUSH2 0x1576 JUMP JUMPDEST PUSH2 0x1D9F DUP2 DUP6 PUSH2 0x1D7F JUMP JUMPDEST SWAP4 POP PUSH2 0x1DAF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DC7 DUP3 DUP6 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP PUSH2 0x1DD3 DUP3 DUP5 PUSH2 0x1D8A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3B PUSH1 0x25 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E46 DUP3 PUSH2 0x1DDF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E6A DUP2 PUSH2 0x1E2E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ECD PUSH1 0x24 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1ED8 DUP3 PUSH2 0x1E71 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1EFC DUP2 PUSH2 0x1EC0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F39 PUSH1 0x19 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F44 DUP3 PUSH2 0x1F03 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F68 DUP2 PUSH2 0x1F2C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FCB PUSH1 0x32 DUP4 PUSH2 0x1581 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FD6 DUP3 PUSH2 0x1F6F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FFA DUP2 PUSH2 0x1FBE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2057 DUP3 PUSH2 0x2030 JUMP JUMPDEST PUSH2 0x2061 DUP2 DUP6 PUSH2 0x203B JUMP JUMPDEST SWAP4 POP PUSH2 0x2071 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1592 JUMP JUMPDEST PUSH2 0x207A DUP2 PUSH2 0x15C5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x209A PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20A7 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x16C6 JUMP JUMPDEST PUSH2 0x20B4 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17DC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x20C6 DUP2 DUP5 PUSH2 0x204C JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20E0 DUP2 PUSH2 0x14E7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x14B1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x210A DUP5 DUP3 DUP6 ADD PUSH2 0x20D1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH SUB ADDMOD PUSH6 0xE3D0CA91308C DUP13 PUSH19 0xD6CFC522E116CACA0DB2A25D839879719B468B 0xEA PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"628:16377:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:9:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12572:171:9:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:16:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;1064:21;;;1080:5;;1064:21;820:280;;;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:9:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:19:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:14:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:329::-;5622:6;5671:2;5659:9;5650:7;5646:23;5642:32;5639:119;;;5677:79;;:::i;:::-;5639:119;5797:1;5822:53;5867:7;5858:6;5847:9;5843:22;5822:53;:::i;:::-;5812:63;;5768:117;5563:329;;;;:::o;5898:118::-;5985:24;6003:5;5985:24;:::i;:::-;5980:3;5973:37;5898:118;;:::o;6022:222::-;6115:4;6153:2;6142:9;6138:18;6130:26;;6166:71;6234:1;6223:9;6219:17;6210:6;6166:71;:::i;:::-;6022:222;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:148::-;16245:11;16282:3;16267:18;;16143:148;;;;:::o;16297:377::-;16403:3;16431:39;16464:5;16431:39;:::i;:::-;16486:89;16568:6;16563:3;16486:89;:::i;:::-;16479:96;;16584:52;16629:6;16624:3;16617:4;16610:5;16606:16;16584:52;:::i;:::-;16661:6;16656:3;16652:16;16645:23;;16407:267;16297:377;;;;:::o;16680:435::-;16860:3;16882:95;16973:3;16964:6;16882:95;:::i;:::-;16875:102;;16994:95;17085:3;17076:6;16994:95;:::i;:::-;16987:102;;17106:3;17099:10;;16680:435;;;;;:::o;17121:224::-;17261:34;17257:1;17249:6;17245:14;17238:58;17330:7;17325:2;17317:6;17313:15;17306:32;17121:224;:::o;17351:366::-;17493:3;17514:67;17578:2;17573:3;17514:67;:::i;:::-;17507:74;;17590:93;17679:3;17590:93;:::i;:::-;17708:2;17703:3;17699:12;17692:19;;17351:366;;;:::o;17723:419::-;17889:4;17927:2;17916:9;17912:18;17904:26;;17976:9;17970:4;17966:20;17962:1;17951:9;17947:17;17940:47;18004:131;18130:4;18004:131;:::i;:::-;17996:139;;17723:419;;;:::o;18148:223::-;18288:34;18284:1;18276:6;18272:14;18265:58;18357:6;18352:2;18344:6;18340:15;18333:31;18148:223;:::o;18377:366::-;18519:3;18540:67;18604:2;18599:3;18540:67;:::i;:::-;18533:74;;18616:93;18705:3;18616:93;:::i;:::-;18734:2;18729:3;18725:12;18718:19;;18377:366;;;:::o;18749:419::-;18915:4;18953:2;18942:9;18938:18;18930:26;;19002:9;18996:4;18992:20;18988:1;18977:9;18973:17;18966:47;19030:131;19156:4;19030:131;:::i;:::-;19022:139;;18749:419;;;:::o;19174:175::-;19314:27;19310:1;19302:6;19298:14;19291:51;19174:175;:::o;19355:366::-;19497:3;19518:67;19582:2;19577:3;19518:67;:::i;:::-;19511:74;;19594:93;19683:3;19594:93;:::i;:::-;19712:2;19707:3;19703:12;19696:19;;19355:366;;;:::o;19727:419::-;19893:4;19931:2;19920:9;19916:18;19908:26;;19980:9;19974:4;19970:20;19966:1;19955:9;19951:17;19944:47;20008:131;20134:4;20008:131;:::i;:::-;20000:139;;19727:419;;;:::o;20152:237::-;20292:34;20288:1;20280:6;20276:14;20269:58;20361:20;20356:2;20348:6;20344:15;20337:45;20152:237;:::o;20395:366::-;20537:3;20558:67;20622:2;20617:3;20558:67;:::i;:::-;20551:74;;20634:93;20723:3;20634:93;:::i;:::-;20752:2;20747:3;20743:12;20736:19;;20395:366;;;:::o;20767:419::-;20933:4;20971:2;20960:9;20956:18;20948:26;;21020:9;21014:4;21010:20;21006:1;20995:9;20991:17;20984:47;21048:131;21174:4;21048:131;:::i;:::-;21040:139;;20767:419;;;:::o;21192:180::-;21240:77;21237:1;21230:88;21337:4;21334:1;21327:15;21361:4;21358:1;21351:15;21378:98;21429:6;21463:5;21457:12;21447:22;;21378:98;;;:::o;21482:168::-;21565:11;21599:6;21594:3;21587:19;21639:4;21634:3;21630:14;21615:29;;21482:168;;;;:::o;21656:360::-;21742:3;21770:38;21802:5;21770:38;:::i;:::-;21824:70;21887:6;21882:3;21824:70;:::i;:::-;21817:77;;21903:52;21948:6;21943:3;21936:4;21929:5;21925:16;21903:52;:::i;:::-;21980:29;22002:6;21980:29;:::i;:::-;21975:3;21971:39;21964:46;;21746:270;21656:360;;;;:::o;22022:640::-;22217:4;22255:3;22244:9;22240:19;22232:27;;22269:71;22337:1;22326:9;22322:17;22313:6;22269:71;:::i;:::-;22350:72;22418:2;22407:9;22403:18;22394:6;22350:72;:::i;:::-;22432;22500:2;22489:9;22485:18;22476:6;22432:72;:::i;:::-;22551:9;22545:4;22541:20;22536:2;22525:9;22521:18;22514:48;22579:76;22650:4;22641:6;22579:76;:::i;:::-;22571:84;;22022:640;;;;;;;:::o;22668:141::-;22724:5;22755:6;22749:13;22740:22;;22771:32;22797:5;22771:32;:::i;:::-;22668:141;;;;:::o;22815:349::-;22884:6;22933:2;22921:9;22912:7;22908:23;22904:32;22901:119;;;22939:79;;:::i;:::-;22901:119;23059:1;23084:63;23139:7;23130:6;23119:9;23115:22;23084:63;:::i;:::-;23074:73;;23030:127;22815:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1704200","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3467","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1326,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1330,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1334,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1344,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../interfaces/IERC4906.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n\\n        emit MetadataUpdate(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1326,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1330,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1334,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1344,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2375,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087c016fa35f30b2fcbff2b3e13399a9941150c934658f9ab5b0a7e71779264f864736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xC0 AND STATICCALL CALLDATALOAD RETURN SIGNEXTEND 0x2F 0xCB SELFDESTRUCT 0x2B RETURNDATACOPY SGT CODECOPY SWAP11 SWAP10 COINBASE ISZERO 0xC SWAP4 CHAINID PC 0xF9 0xAB JUMPDEST EXP PUSH31 0x71779264F864736F6C63430008080033000000000000000000000000000000 ","sourceMap":"194:9169:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122087c016fa35f30b2fcbff2b3e13399a9941150c934658f9ab5b0a7e71779264f864736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP8 0xC0 AND STATICCALL CALLDATALOAD RETURN SIGNEXTEND 0x2F 0xCB SELFDESTRUCT 0x2B RETURNDATACOPY SGT CODECOPY SWAP11 SWAP10 COINBASE ISZERO 0xC SWAP4 CHAINID PC 0xF9 0xAB JUMPDEST EXP PUSH31 0x71779264F864736F6C63430008080033000000000000000000000000000000 ","sourceMap":"194:9169:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f0e89ed13c26776a949873cfa342cd98ec767b28d55b9efb9c94aec4aabbb1b64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xE89ED13C26776A949873CFA342CD98EC767B28D55B9EFB9C94AEC4AABBB1B64 PUSH20 0x6F6C634300080800330000000000000000000000 ","sourceMap":"220:2559:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207f0e89ed13c26776a949873cfa342cd98ec767b28d55b9efb9c94aec4aabbb1b64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0xE89ED13C26776A949873CFA342CD98EC767B28D55B9EFB9C94AEC4AABBB1B64 PUSH20 0x6F6C634300080800330000000000000000000000 ","sourceMap":"220:2559:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001bc918f67b9e9a27f932c5ef5f14f65d2a0b1b82e5a4d7d659ae67277899b3864736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xBC SWAP2 DUP16 PUSH8 0xB9E9A27F932C5EF5 CALL 0x4F PUSH6 0xD2A0B1B82E5A 0x4D PUSH30 0x659AE67277899B3864736F6C634300080800330000000000000000000000 ","sourceMap":"202:12582:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001bc918f67b9e9a27f932c5ef5f14f65d2a0b1b82e5a4d7d659ae67277899b3864736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xBC SWAP2 DUP16 PUSH8 0xB9E9A27F932C5EF5 CALL 0x4F PUSH6 0xD2A0B1B82E5A 0x4D PUSH30 0x659AE67277899B3864736F6C634300080800330000000000000000000000 ","sourceMap":"202:12582:19:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200445a1a645a64c93123225a5c1c94d409c76ff2b1c9a55994fed57bb96996f1e64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV GASLIMIT LOG1 0xA6 GASLIMIT 0xA6 0x4C SWAP4 SLT ORIGIN 0x25 0xA5 0xC1 0xC9 0x4D BLOCKHASH SWAP13 PUSH23 0xFF2B1C9A55994FED57BB96996F1E64736F6C6343000808 STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200445a1a645a64c93123225a5c1c94d409c76ff2b1c9a55994fed57bb96996f1e64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV GASLIMIT LOG1 0xA6 GASLIMIT 0xA6 0x4C SWAP4 SLT ORIGIN 0x25 0xA5 0xC1 0xC9 0x4D BLOCKHASH SWAP13 PUSH23 0xFF2B1C9A55994FED57BB96996F1E64736F6C6343000808 STOP CALLER ","sourceMap":"215:1047:20:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"base64-sol/base64.sol":{"Base64":{"abi":[],"devdoc":{"author":"Brecht Devos - <brecht@loopring.org>","kind":"dev","methods":{},"title":"Base64","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122091866af9c18e2993d491d2cf1438ee2b37e122d1b29321b45075ae8dd74a7cee64736f6c63430008080033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 DUP7 PUSH11 0xF9C18E2993D491D2CF1438 0xEE 0x2B CALLDATACOPY 0xE1 0x22 0xD1 0xB2 SWAP4 0x21 0xB4 POP PUSH22 0xAE8DD74A7CEE64736F6C634300080800330000000000 ","sourceMap":"186:4638:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"decode(string memory)":"infinite","encode(bytes memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Brecht Devos - <brecht@loopring.org>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Base64\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides functions for encoding/decoding base64\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"base64-sol/base64.sol\":\"Base64\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides functions for encoding/decoding base64","version":1}}},"contracts/BasicNft.sol":{"BasicNft":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"TOKEN_URI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintNft","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1361":{"entryPoint":null,"id":1361,"parameterSlots":2,"returnSlots":0},"@_4267":{"entryPoint":null,"id":4267,"parameterSlots":0,"returnSlots":0},"extract_byte_array_length":{"entryPoint":415,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":368,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:26","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:26"},"nodeType":"YulFunctionCall","src":"45:88:26"},"nodeType":"YulExpressionStatement","src":"45:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:26"},"nodeType":"YulFunctionCall","src":"142:15:26"},"nodeType":"YulExpressionStatement","src":"142:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:26"},"nodeType":"YulFunctionCall","src":"166:15:26"},"nodeType":"YulExpressionStatement","src":"166:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7:180:26"},{"body":{"nodeType":"YulBlock","src":"244:269:26","statements":[{"nodeType":"YulAssignment","src":"254:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"268:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"274:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"264:3:26"},"nodeType":"YulFunctionCall","src":"264:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"254:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"285:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"315:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"311:3:26"},"nodeType":"YulFunctionCall","src":"311:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"289:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:51:26","statements":[{"nodeType":"YulAssignment","src":"376:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"390:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"398:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:26"},"nodeType":"YulFunctionCall","src":"386:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"376:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"342:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"335:6:26"},"nodeType":"YulFunctionCall","src":"335:26:26"},"nodeType":"YulIf","src":"332:81:26"},{"body":{"nodeType":"YulBlock","src":"465:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"479:16:26"},"nodeType":"YulFunctionCall","src":"479:18:26"},"nodeType":"YulExpressionStatement","src":"479:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"429:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"452:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"449:2:26"},"nodeType":"YulFunctionCall","src":"449:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"426:2:26"},"nodeType":"YulFunctionCall","src":"426:38:26"},"nodeType":"YulIf","src":"423:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"228:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"237:6:26","type":""}],"src":"193:320:26"}]},"contents":"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600581526020017f446f6769650000000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f444f470000000000000000000000000000000000000000000000000000000000815250816000908051906020019062000096929190620000c0565b508060019080519060200190620000af929190620000c0565b5050506000600681905550620001d5565b828054620000ce906200019f565b90600052602060002090601f016020900481019282620000f257600085556200013e565b82601f106200010d57805160ff19168380011785556200013e565b828001600101855582156200013e579182015b828111156200013d57825182559160200191906001019062000120565b5b5090506200014d919062000151565b5090565b5b808211156200016c57600081600090555060010162000152565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b857607f821691505b60208210811415620001cf57620001ce62000170565b5b50919050565b61235980620001e56000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906115fe565b610347565b60405161012c9190611646565b60405180910390f35b61013d610429565b60405161014a91906116fa565b60405180910390f35b61016d60048036038101906101689190611752565b6104bb565b60405161017a91906117c0565b60405180910390f35b61019d60048036038101906101989190611807565b610501565b005b6101b960048036038101906101b49190611847565b610619565b005b6101d560048036038101906101d09190611847565b610679565b005b6101f160048036038101906101ec9190611752565b610699565b6040516101fe91906117c0565b60405180910390f35b61020f610720565b60405161021c91906118a9565b60405180910390f35b61023f600480360381019061023a91906118c4565b61072a565b60405161024c91906118a9565b60405180910390f35b61025d6107e2565b60405161026a91906116fa565b60405180910390f35b61027b6107fe565b60405161028891906116fa565b60405180910390f35b6102ab60048036038101906102a6919061191d565b610890565b005b6102c760048036038101906102c29190611a92565b6108a6565b005b6102d1610908565b6040516102de91906118a9565b60405180910390f35b61030160048036038101906102fc9190611752565b610933565b60405161030e91906116fa565b60405180910390f35b610331600480360381019061032c9190611b15565b610955565b60405161033e9190611646565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109e9565b5b9050919050565b60606000805461043890611b84565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611b84565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a53565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611c28565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610a9e565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610a9e565b610955565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611cba565b60405180910390fd5b6106148383610aa6565b505050565b61062a610624610a9e565b82610b5f565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611d4c565b60405180910390fd5b610674838383610bf4565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610eee565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611db8565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611e4a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122cd6057913981565b60606001805461080d90611b84565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611b84565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610a9e565b8383610f2b565b5050565b6108b76108b1610a9e565b83610b5f565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611d4c565b60405180910390fd5b61090284848484611098565b50505050565b6000610916336006546110f4565b60016006546109259190611e99565b600681905550600654905090565b60606040518060800160405280605781526020016122cd605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81611112565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611db8565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1983610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6b83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bad5750610bac8185610955565b5b80610beb57508373ffffffffffffffffffffffffffffffffffffffff16610bd3846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1482610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190611f61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611ff3565b60405180910390fd5b610ce78383836001611153565b8273ffffffffffffffffffffffffffffffffffffffff16610d0782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5490611f61565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee98383836001611159565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f919061205f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108b9190611646565b60405180910390a3505050565b6110a3848484610bf4565b6110af8484848461115f565b6110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e5906120f1565b60405180910390fd5b50505050565b61110e8282604051806020016040528060008152506112f6565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113483610eee565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111808473ffffffffffffffffffffffffffffffffffffffff16611351565b156112e9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111a9610a9e565b8786866040518563ffffffff1660e01b81526004016111cb9493929190612166565b602060405180830381600087803b1580156111e557600080fd5b505af192505050801561121657506040513d601f19601f8201168201806040525081019061121391906121c7565b60015b611299573d8060008114611246576040519150601f19603f3d011682016040523d82523d6000602084013e61124b565b606091505b50600081511415611291576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611288906120f1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ee565b600190505b949350505050565b6113008383611374565b61130d600084848461115f565b61134c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611343906120f1565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90612240565b60405180910390fd5b6113ed81611112565b1561142d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611424906122ac565b60405180910390fd5b61143b600083836001611153565b61144481611112565b15611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147b906122ac565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461158e600083836001611159565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115db816115a6565b81146115e657600080fd5b50565b6000813590506115f8816115d2565b92915050565b6000602082840312156116145761161361159c565b5b6000611622848285016115e9565b91505092915050565b60008115159050919050565b6116408161162b565b82525050565b600060208201905061165b6000830184611637565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561169b578082015181840152602081019050611680565b838111156116aa576000848401525b50505050565b6000601f19601f8301169050919050565b60006116cc82611661565b6116d6818561166c565b93506116e681856020860161167d565b6116ef816116b0565b840191505092915050565b6000602082019050818103600083015261171481846116c1565b905092915050565b6000819050919050565b61172f8161171c565b811461173a57600080fd5b50565b60008135905061174c81611726565b92915050565b6000602082840312156117685761176761159c565b5b60006117768482850161173d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117aa8261177f565b9050919050565b6117ba8161179f565b82525050565b60006020820190506117d560008301846117b1565b92915050565b6117e48161179f565b81146117ef57600080fd5b50565b600081359050611801816117db565b92915050565b6000806040838503121561181e5761181d61159c565b5b600061182c858286016117f2565b925050602061183d8582860161173d565b9150509250929050565b6000806000606084860312156118605761185f61159c565b5b600061186e868287016117f2565b935050602061187f868287016117f2565b92505060406118908682870161173d565b9150509250925092565b6118a38161171c565b82525050565b60006020820190506118be600083018461189a565b92915050565b6000602082840312156118da576118d961159c565b5b60006118e8848285016117f2565b91505092915050565b6118fa8161162b565b811461190557600080fd5b50565b600081359050611917816118f1565b92915050565b600080604083850312156119345761193361159c565b5b6000611942858286016117f2565b925050602061195385828601611908565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61199f826116b0565b810181811067ffffffffffffffff821117156119be576119bd611967565b5b80604052505050565b60006119d1611592565b90506119dd8282611996565b919050565b600067ffffffffffffffff8211156119fd576119fc611967565b5b611a06826116b0565b9050602081019050919050565b82818337600083830152505050565b6000611a35611a30846119e2565b6119c7565b905082815260208101848484011115611a5157611a50611962565b5b611a5c848285611a13565b509392505050565b600082601f830112611a7957611a7861195d565b5b8135611a89848260208601611a22565b91505092915050565b60008060008060808587031215611aac57611aab61159c565b5b6000611aba878288016117f2565b9450506020611acb878288016117f2565b9350506040611adc8782880161173d565b925050606085013567ffffffffffffffff811115611afd57611afc6115a1565b5b611b0987828801611a64565b91505092959194509250565b60008060408385031215611b2c57611b2b61159c565b5b6000611b3a858286016117f2565b9250506020611b4b858286016117f2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b9c57607f821691505b60208210811415611bb057611baf611b55565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c1260218361166c565b9150611c1d82611bb6565b604082019050919050565b60006020820190508181036000830152611c4181611c05565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611ca4603d8361166c565b9150611caf82611c48565b604082019050919050565b60006020820190508181036000830152611cd381611c97565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d36602d8361166c565b9150611d4182611cda565b604082019050919050565b60006020820190508181036000830152611d6581611d29565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611da260188361166c565b9150611dad82611d6c565b602082019050919050565b60006020820190508181036000830152611dd181611d95565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e3460298361166c565b9150611e3f82611dd8565b604082019050919050565b60006020820190508181036000830152611e6381611e27565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ea48261171c565b9150611eaf8361171c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ee457611ee3611e6a565b5b828201905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f4b60258361166c565b9150611f5682611eef565b604082019050919050565b60006020820190508181036000830152611f7a81611f3e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fdd60248361166c565b9150611fe882611f81565b604082019050919050565b6000602082019050818103600083015261200c81611fd0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061204960198361166c565b915061205482612013565b602082019050919050565b600060208201905081810360008301526120788161203c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120db60328361166c565b91506120e68261207f565b604082019050919050565b6000602082019050818103600083015261210a816120ce565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061213882612111565b612142818561211c565b935061215281856020860161167d565b61215b816116b0565b840191505092915050565b600060808201905061217b60008301876117b1565b61218860208301866117b1565b612195604083018561189a565b81810360608301526121a7818461212d565b905095945050505050565b6000815190506121c1816115d2565b92915050565b6000602082840312156121dd576121dc61159c565b5b60006121eb848285016121b2565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061222a60208361166c565b9150612235826121f4565b602082019050919050565b600060208201905081810360008301526122598161221d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612296601c8361166c565b91506122a182612260565b602082019050919050565b600060208201905081810360008301526122c581612289565b905091905056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122039885d7fca44c942b5a027887e430c2ef12b0c42b74c5fe20b8b7598b26e1af564736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F676965000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444F470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0xC0 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1D5 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0xCE SWAP1 PUSH3 0x19F JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xF2 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x10D JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x13E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x13E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x13D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x120 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x14D SWAP2 SWAP1 PUSH3 0x151 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x16C JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x152 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x1B8 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x1CF JUMPI PUSH3 0x1CE PUSH3 0x170 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2359 DUP1 PUSH3 0x1E5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xA9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xA9E JUMP JUMPDEST DUP3 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xA9E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB19 DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6B DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBAD JUMPI POP PUSH2 0xBAC DUP2 DUP6 PUSH2 0x955 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD3 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC14 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD07 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEE9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP5 DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x10AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x110E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1134 DUP4 PUSH2 0xEEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11A9 PUSH2 0xA9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1216 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 DUP4 DUP4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x130D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13ED DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x143B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F8 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1613 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP5 DUP3 DUP6 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1640 DUP2 PUSH2 0x162B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1637 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1680 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x16D6 DUP2 DUP6 PUSH2 0x166C JUMP JUMPDEST SWAP4 POP PUSH2 0x16E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167D JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x16B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1714 DUP2 DUP5 PUSH2 0x16C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x171C JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174C DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1776 DUP5 DUP3 DUP6 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x179F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x179F JUMP JUMPDEST DUP2 EQ PUSH2 0x17EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1801 DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH2 0x181D PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183D DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP7 DUP3 DUP8 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x187F DUP7 DUP3 DUP8 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1890 DUP7 DUP3 DUP8 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18A3 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DA JUMPI PUSH2 0x18D9 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP5 DUP3 DUP6 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FA DUP2 PUSH2 0x162B JUMP JUMPDEST DUP2 EQ PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1917 DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1933 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1953 DUP6 DUP3 DUP7 ADD PUSH2 0x1908 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x199F DUP3 PUSH2 0x16B0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x1967 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D1 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x19DD DUP3 DUP3 PUSH2 0x1996 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x1967 JUMP JUMPDEST JUMPDEST PUSH2 0x1A06 DUP3 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH2 0x1A30 DUP5 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x1962 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5C DUP5 DUP3 DUP6 PUSH2 0x1A13 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x195D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A89 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABA DUP8 DUP3 DUP9 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ACB DUP8 DUP3 DUP9 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1ADC DUP8 DUP3 DUP9 ADD PUSH2 0x173D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AFC PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH2 0x1B09 DUP8 DUP3 DUP9 ADD PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B2B PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3A DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x1B55 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C12 PUSH1 0x21 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1D DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C41 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x3D DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAF DUP3 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD3 DUP2 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D36 PUSH1 0x2D DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D41 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D65 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA2 PUSH1 0x18 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAD DUP3 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD1 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E34 PUSH1 0x29 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3F DUP3 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E63 DUP2 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP4 PUSH2 0x171C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1E6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x25 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7A DUP2 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDD PUSH1 0x24 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE8 DUP3 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x19 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DB PUSH1 0x32 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E6 DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210A DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 DUP3 PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x2142 DUP2 DUP6 PUSH2 0x211C JUMP JUMPDEST SWAP4 POP PUSH2 0x2152 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167D JUMP JUMPDEST PUSH2 0x215B DUP2 PUSH2 0x16B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x217B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x2188 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x2195 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21A7 DUP2 DUP5 PUSH2 0x212D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21C1 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EB DUP5 DUP3 DUP6 ADD PUSH2 0x21B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222A PUSH1 0x20 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x2235 DUP3 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 PUSH2 0x221D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 PUSH1 0x1C DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x22A1 DUP3 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 CODECOPY DUP9 0x5D PUSH32 0xCA44C942B5A027887E430C2EF12B0C42B74C5FE20B8B7598B26E1AF564736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"120:707:22:-:0;;;334:74;;;;;;;;;;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;399:1:22::1;382:14;:18;;;;120:707:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:26:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;120:707:22:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@TOKEN_URI_4253":{"entryPoint":2018,"id":4253,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_2209":{"entryPoint":4441,"id":2209,"parameterSlots":4,"returnSlots":0},"@_approve_2075":{"entryPoint":2726,"id":2075,"parameterSlots":2,"returnSlots":0},"@_beforeTokenTransfer_2196":{"entryPoint":4435,"id":2196,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2183":{"entryPoint":4447,"id":2183,"parameterSlots":4,"returnSlots":1},"@_exists_1744":{"entryPoint":4370,"id":1744,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1778":{"entryPoint":2911,"id":1778,"parameterSlots":2,"returnSlots":1},"@_mint_1899":{"entryPoint":4980,"id":1899,"parameterSlots":2,"returnSlots":0},"@_msgSender_2884":{"entryPoint":2718,"id":2884,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1726":{"entryPoint":3822,"id":1726,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2121":{"entryPoint":2643,"id":2121,"parameterSlots":1,"returnSlots":0},"@_safeMint_1793":{"entryPoint":4340,"id":1793,"parameterSlots":2,"returnSlots":0},"@_safeMint_1822":{"entryPoint":4854,"id":1822,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1713":{"entryPoint":4248,"id":1713,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2107":{"entryPoint":3883,"id":2107,"parameterSlots":3,"returnSlots":0},"@_transfer_2051":{"entryPoint":3060,"id":2051,"parameterSlots":3,"returnSlots":0},"@approve_1555":{"entryPoint":1281,"id":1555,"parameterSlots":2,"returnSlots":0},"@balanceOf_1416":{"entryPoint":1834,"id":1416,"parameterSlots":1,"returnSlots":1},"@getApproved_1573":{"entryPoint":1211,"id":1573,"parameterSlots":1,"returnSlots":1},"@getTokenCounter_4307":{"entryPoint":1824,"id":4307,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1608":{"entryPoint":2389,"id":1608,"parameterSlots":2,"returnSlots":1},"@isContract_2560":{"entryPoint":4945,"id":2560,"parameterSlots":1,"returnSlots":1},"@mintNft_4287":{"entryPoint":2312,"id":4287,"parameterSlots":0,"returnSlots":1},"@name_1454":{"entryPoint":1065,"id":1454,"parameterSlots":0,"returnSlots":1},"@ownerOf_1444":{"entryPoint":1689,"id":1444,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_1654":{"entryPoint":1657,"id":1654,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1684":{"entryPoint":2214,"id":1684,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1590":{"entryPoint":2192,"id":1590,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1392":{"entryPoint":839,"id":1392,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3146":{"entryPoint":2537,"id":3146,"parameterSlots":1,"returnSlots":1},"@symbol_1464":{"entryPoint":2046,"id":1464,"parameterSlots":0,"returnSlots":1},"@tokenURI_4299":{"entryPoint":2355,"id":4299,"parameterSlots":1,"returnSlots":1},"@transferFrom_1635":{"entryPoint":1561,"id":1635,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6690,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":6130,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6408,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8626,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6756,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5949,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6340,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6933,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":6215,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6802,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6429,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":6151,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5630,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5970,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":6065,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5687,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8493,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5825,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7998,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":8841,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":8144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":8252,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7719,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":8733,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7573,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":7173,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7319,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6298,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":6080,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8550,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5702,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7500,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8433,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8876,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8287,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7754,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8768,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7608,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7208,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7354,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6313,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6599,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5522,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6626,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8465,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5729,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8476,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5740,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7833,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":6047,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5675,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5542,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":6015,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5916,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":6675,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":5757,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":7044,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6550,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":7786,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6997,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6503,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6493,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6498,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5537,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5532,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5808,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7386,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8319,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7919,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":8800,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":8065,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":8211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7640,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":8692,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7532,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":7094,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":7240,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":6107,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6385,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5586,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5926,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24466:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1847:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:26"},"nodeType":"YulFunctionCall","src":"1947:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:26"},"nodeType":"YulFunctionCall","src":"1966:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:26"},"nodeType":"YulFunctionCall","src":"1960:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:26"},"nodeType":"YulFunctionCall","src":"1940:39:26"},"nodeType":"YulExpressionStatement","src":"1940:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:26"},"nodeType":"YulFunctionCall","src":"1884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:26","statements":[{"nodeType":"YulAssignment","src":"1900:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:26"},"nodeType":"YulFunctionCall","src":"1905:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:26","statements":[]},"src":"1876:113:26"},{"body":{"nodeType":"YulBlock","src":"2023:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:26"},"nodeType":"YulFunctionCall","src":"2062:27:26"},"nodeType":"YulExpressionStatement","src":"2062:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:26"},"nodeType":"YulFunctionCall","src":"2001:13:26"},"nodeType":"YulIf","src":"1998:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:26","type":""}],"src":"1798:307:26"},{"body":{"nodeType":"YulBlock","src":"2159:54:26","statements":[{"nodeType":"YulAssignment","src":"2169:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:26"},"nodeType":"YulFunctionCall","src":"2183:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:26"},"nodeType":"YulFunctionCall","src":"2199:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:26"},"nodeType":"YulFunctionCall","src":"2179:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:26","type":""}],"src":"2111:102:26"},{"body":{"nodeType":"YulBlock","src":"2311:272:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:26"},"nodeType":"YulFunctionCall","src":"2335:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:26"},"nodeType":"YulFunctionCall","src":"2390:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:26"},"nodeType":"YulFunctionCall","src":"2492:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:26"},"nodeType":"YulFunctionCall","src":"2470:52:26"},"nodeType":"YulExpressionStatement","src":"2470:52:26"},{"nodeType":"YulAssignment","src":"2531:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:26"},"nodeType":"YulFunctionCall","src":"2547:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:26"},"nodeType":"YulFunctionCall","src":"2538:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:26","type":""}],"src":"2219:364:26"},{"body":{"nodeType":"YulBlock","src":"2707:195:26","statements":[{"nodeType":"YulAssignment","src":"2717:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:26"},"nodeType":"YulFunctionCall","src":"2760:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:26"},"nodeType":"YulFunctionCall","src":"2779:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:26"},"nodeType":"YulFunctionCall","src":"2753:47:26"},"nodeType":"YulExpressionStatement","src":"2753:47:26"},{"nodeType":"YulAssignment","src":"2809:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:26"},"nodeType":"YulFunctionCall","src":"2817:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:26","type":""}],"src":"2589:313:26"},{"body":{"nodeType":"YulBlock","src":"2953:32:26","statements":[{"nodeType":"YulAssignment","src":"2963:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:26","type":""}],"src":"2908:77:26"},{"body":{"nodeType":"YulBlock","src":"3034:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:26"},"nodeType":"YulFunctionCall","src":"3093:12:26"},"nodeType":"YulExpressionStatement","src":"3093:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:26"},"nodeType":"YulFunctionCall","src":"3064:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:26"},"nodeType":"YulFunctionCall","src":"3054:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:26"},"nodeType":"YulFunctionCall","src":"3047:43:26"},"nodeType":"YulIf","src":"3044:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:26","type":""}],"src":"2991:122:26"},{"body":{"nodeType":"YulBlock","src":"3171:87:26","statements":[{"nodeType":"YulAssignment","src":"3181:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:26"},"nodeType":"YulFunctionCall","src":"3190:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:26"},"nodeType":"YulFunctionCall","src":"3219:33:26"},"nodeType":"YulExpressionStatement","src":"3219:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:26","type":""}],"src":"3119:139:26"},{"body":{"nodeType":"YulBlock","src":"3330:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:26"},"nodeType":"YulFunctionCall","src":"3378:79:26"},"nodeType":"YulExpressionStatement","src":"3378:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:26"},"nodeType":"YulFunctionCall","src":"3347:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:26"},"nodeType":"YulFunctionCall","src":"3343:32:26"},"nodeType":"YulIf","src":"3340:119:26"},{"nodeType":"YulBlock","src":"3469:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:26"},"nodeType":"YulFunctionCall","src":"3544:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:26"},"nodeType":"YulFunctionCall","src":"3523:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:26","type":""}],"src":"3264:329:26"},{"body":{"nodeType":"YulBlock","src":"3644:81:26","statements":[{"nodeType":"YulAssignment","src":"3654:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:26"},"nodeType":"YulFunctionCall","src":"3665:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:26","type":""}],"src":"3599:126:26"},{"body":{"nodeType":"YulBlock","src":"3776:51:26","statements":[{"nodeType":"YulAssignment","src":"3786:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:26"},"nodeType":"YulFunctionCall","src":"3797:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:26","type":""}],"src":"3731:96:26"},{"body":{"nodeType":"YulBlock","src":"3898:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:26"},"nodeType":"YulFunctionCall","src":"3920:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:26"},"nodeType":"YulFunctionCall","src":"3908:37:26"},"nodeType":"YulExpressionStatement","src":"3908:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:26","type":""}],"src":"3833:118:26"},{"body":{"nodeType":"YulBlock","src":"4055:124:26","statements":[{"nodeType":"YulAssignment","src":"4065:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:26"},"nodeType":"YulFunctionCall","src":"4073:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:26"},"nodeType":"YulFunctionCall","src":"4154:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:26"},"nodeType":"YulFunctionCall","src":"4101:71:26"},"nodeType":"YulExpressionStatement","src":"4101:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:26","type":""}],"src":"3957:222:26"},{"body":{"nodeType":"YulBlock","src":"4228:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:26"},"nodeType":"YulFunctionCall","src":"4287:12:26"},"nodeType":"YulExpressionStatement","src":"4287:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:26"},"nodeType":"YulFunctionCall","src":"4258:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:26"},"nodeType":"YulFunctionCall","src":"4248:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:26"},"nodeType":"YulFunctionCall","src":"4241:43:26"},"nodeType":"YulIf","src":"4238:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:26","type":""}],"src":"4185:122:26"},{"body":{"nodeType":"YulBlock","src":"4365:87:26","statements":[{"nodeType":"YulAssignment","src":"4375:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:26"},"nodeType":"YulFunctionCall","src":"4384:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:26"},"nodeType":"YulFunctionCall","src":"4413:33:26"},"nodeType":"YulExpressionStatement","src":"4413:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:26","type":""}],"src":"4313:139:26"},{"body":{"nodeType":"YulBlock","src":"4541:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:26"},"nodeType":"YulFunctionCall","src":"4589:79:26"},"nodeType":"YulExpressionStatement","src":"4589:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:26"},"nodeType":"YulFunctionCall","src":"4558:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:32:26"},"nodeType":"YulIf","src":"4551:119:26"},{"nodeType":"YulBlock","src":"4680:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:26"},"nodeType":"YulFunctionCall","src":"4755:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:26"},"nodeType":"YulFunctionCall","src":"4734:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:26"}]}]},{"nodeType":"YulBlock","src":"4807:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:26"},"nodeType":"YulFunctionCall","src":"4883:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:26"},"nodeType":"YulFunctionCall","src":"4862:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:26","type":""}],"src":"4458:474:26"},{"body":{"nodeType":"YulBlock","src":"5038:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5084:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5086:77:26"},"nodeType":"YulFunctionCall","src":"5086:79:26"},"nodeType":"YulExpressionStatement","src":"5086:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5059:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5068:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5055:3:26"},"nodeType":"YulFunctionCall","src":"5055:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5080:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5051:3:26"},"nodeType":"YulFunctionCall","src":"5051:32:26"},"nodeType":"YulIf","src":"5048:119:26"},{"nodeType":"YulBlock","src":"5177:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5192:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5206:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5196:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5221:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5256:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5267:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:26"},"nodeType":"YulFunctionCall","src":"5252:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5276:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5231:20:26"},"nodeType":"YulFunctionCall","src":"5231:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5221:6:26"}]}]},{"nodeType":"YulBlock","src":"5304:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5319:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5333:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5323:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5349:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5395:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5380:3:26"},"nodeType":"YulFunctionCall","src":"5380:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5404:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5359:20:26"},"nodeType":"YulFunctionCall","src":"5359:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5349:6:26"}]}]},{"nodeType":"YulBlock","src":"5432:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5447:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5461:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5451:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5477:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5512:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5523:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5508:3:26"},"nodeType":"YulFunctionCall","src":"5508:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5532:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5487:20:26"},"nodeType":"YulFunctionCall","src":"5487:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5477:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4992:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5003:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5015:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5023:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5031:6:26","type":""}],"src":"4938:619:26"},{"body":{"nodeType":"YulBlock","src":"5628:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5645:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5668:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5650:17:26"},"nodeType":"YulFunctionCall","src":"5650:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5638:6:26"},"nodeType":"YulFunctionCall","src":"5638:37:26"},"nodeType":"YulExpressionStatement","src":"5638:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5616:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5623:3:26","type":""}],"src":"5563:118:26"},{"body":{"nodeType":"YulBlock","src":"5785:124:26","statements":[{"nodeType":"YulAssignment","src":"5795:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5807:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5818:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:26"},"nodeType":"YulFunctionCall","src":"5803:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5795:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5875:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5888:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5899:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5884:3:26"},"nodeType":"YulFunctionCall","src":"5884:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5831:43:26"},"nodeType":"YulFunctionCall","src":"5831:71:26"},"nodeType":"YulExpressionStatement","src":"5831:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5757:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5769:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5780:4:26","type":""}],"src":"5687:222:26"},{"body":{"nodeType":"YulBlock","src":"5981:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"6027:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6029:77:26"},"nodeType":"YulFunctionCall","src":"6029:79:26"},"nodeType":"YulExpressionStatement","src":"6029:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6002:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6011:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5998:3:26"},"nodeType":"YulFunctionCall","src":"5998:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6023:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5994:3:26"},"nodeType":"YulFunctionCall","src":"5994:32:26"},"nodeType":"YulIf","src":"5991:119:26"},{"nodeType":"YulBlock","src":"6120:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6135:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6149:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6139:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6164:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6199:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6210:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6195:3:26"},"nodeType":"YulFunctionCall","src":"6195:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6219:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6174:20:26"},"nodeType":"YulFunctionCall","src":"6174:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6164:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5951:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5962:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5974:6:26","type":""}],"src":"5915:329:26"},{"body":{"nodeType":"YulBlock","src":"6290:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"6344:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:26"},"nodeType":"YulFunctionCall","src":"6346:12:26"},"nodeType":"YulExpressionStatement","src":"6346:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6313:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6335:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6320:14:26"},"nodeType":"YulFunctionCall","src":"6320:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6310:2:26"},"nodeType":"YulFunctionCall","src":"6310:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6303:6:26"},"nodeType":"YulFunctionCall","src":"6303:40:26"},"nodeType":"YulIf","src":"6300:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6283:5:26","type":""}],"src":"6250:116:26"},{"body":{"nodeType":"YulBlock","src":"6421:84:26","statements":[{"nodeType":"YulAssignment","src":"6431:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6453:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6440:12:26"},"nodeType":"YulFunctionCall","src":"6440:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6431:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6493:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6469:23:26"},"nodeType":"YulFunctionCall","src":"6469:30:26"},"nodeType":"YulExpressionStatement","src":"6469:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6399:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6407:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6415:5:26","type":""}],"src":"6372:133:26"},{"body":{"nodeType":"YulBlock","src":"6591:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"6637:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6639:77:26"},"nodeType":"YulFunctionCall","src":"6639:79:26"},"nodeType":"YulExpressionStatement","src":"6639:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6612:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6621:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6608:3:26"},"nodeType":"YulFunctionCall","src":"6608:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6604:3:26"},"nodeType":"YulFunctionCall","src":"6604:32:26"},"nodeType":"YulIf","src":"6601:119:26"},{"nodeType":"YulBlock","src":"6730:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6745:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6759:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6749:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6774:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6809:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6820:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6805:3:26"},"nodeType":"YulFunctionCall","src":"6805:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6829:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6784:20:26"},"nodeType":"YulFunctionCall","src":"6784:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6774:6:26"}]}]},{"nodeType":"YulBlock","src":"6857:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6872:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6886:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6876:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6902:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6934:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6945:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6930:3:26"},"nodeType":"YulFunctionCall","src":"6930:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6954:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6912:17:26"},"nodeType":"YulFunctionCall","src":"6912:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6902:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6553:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6564:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6576:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6584:6:26","type":""}],"src":"6511:468:26"},{"body":{"nodeType":"YulBlock","src":"7074:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7091:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7094:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7084:6:26"},"nodeType":"YulFunctionCall","src":"7084:12:26"},"nodeType":"YulExpressionStatement","src":"7084:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6985:117:26"},{"body":{"nodeType":"YulBlock","src":"7197:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7214:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7217:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7207:6:26"},"nodeType":"YulFunctionCall","src":"7207:12:26"},"nodeType":"YulExpressionStatement","src":"7207:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7108:117:26"},{"body":{"nodeType":"YulBlock","src":"7259:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7276:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7279:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7269:6:26"},"nodeType":"YulFunctionCall","src":"7269:88:26"},"nodeType":"YulExpressionStatement","src":"7269:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7373:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7376:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7366:6:26"},"nodeType":"YulFunctionCall","src":"7366:15:26"},"nodeType":"YulExpressionStatement","src":"7366:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7397:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7400:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7390:6:26"},"nodeType":"YulFunctionCall","src":"7390:15:26"},"nodeType":"YulExpressionStatement","src":"7390:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7231:180:26"},{"body":{"nodeType":"YulBlock","src":"7460:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7470:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7492:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7522:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7500:21:26"},"nodeType":"YulFunctionCall","src":"7500:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7488:3:26"},"nodeType":"YulFunctionCall","src":"7488:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7474:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7639:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7641:16:26"},"nodeType":"YulFunctionCall","src":"7641:18:26"},"nodeType":"YulExpressionStatement","src":"7641:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7582:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"7594:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7579:2:26"},"nodeType":"YulFunctionCall","src":"7579:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7618:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7630:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7615:2:26"},"nodeType":"YulFunctionCall","src":"7615:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7576:2:26"},"nodeType":"YulFunctionCall","src":"7576:62:26"},"nodeType":"YulIf","src":"7573:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7681:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7670:6:26"},"nodeType":"YulFunctionCall","src":"7670:22:26"},"nodeType":"YulExpressionStatement","src":"7670:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7446:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"7454:4:26","type":""}],"src":"7417:281:26"},{"body":{"nodeType":"YulBlock","src":"7745:88:26","statements":[{"nodeType":"YulAssignment","src":"7755:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7765:18:26"},"nodeType":"YulFunctionCall","src":"7765:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7755:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7814:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7822:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7794:19:26"},"nodeType":"YulFunctionCall","src":"7794:33:26"},"nodeType":"YulExpressionStatement","src":"7794:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7729:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7738:6:26","type":""}],"src":"7704:129:26"},{"body":{"nodeType":"YulBlock","src":"7905:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"8010:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8012:16:26"},"nodeType":"YulFunctionCall","src":"8012:18:26"},"nodeType":"YulExpressionStatement","src":"8012:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7982:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7990:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7979:2:26"},"nodeType":"YulFunctionCall","src":"7979:30:26"},"nodeType":"YulIf","src":"7976:56:26"},{"nodeType":"YulAssignment","src":"8042:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8072:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8050:21:26"},"nodeType":"YulFunctionCall","src":"8050:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8042:4:26"}]},{"nodeType":"YulAssignment","src":"8116:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8128:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8134:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8124:3:26"},"nodeType":"YulFunctionCall","src":"8124:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8116:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7889:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7900:4:26","type":""}],"src":"7839:307:26"},{"body":{"nodeType":"YulBlock","src":"8203:103:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8226:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"8231:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8236:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8213:12:26"},"nodeType":"YulFunctionCall","src":"8213:30:26"},"nodeType":"YulExpressionStatement","src":"8213:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8284:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8289:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8280:3:26"},"nodeType":"YulFunctionCall","src":"8280:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"8298:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8273:6:26"},"nodeType":"YulFunctionCall","src":"8273:27:26"},"nodeType":"YulExpressionStatement","src":"8273:27:26"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8185:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8190:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8195:6:26","type":""}],"src":"8152:154:26"},{"body":{"nodeType":"YulBlock","src":"8395:327:26","statements":[{"nodeType":"YulAssignment","src":"8405:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8471:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8430:40:26"},"nodeType":"YulFunctionCall","src":"8430:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8414:15:26"},"nodeType":"YulFunctionCall","src":"8414:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8405:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8495:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"8502:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8488:6:26"},"nodeType":"YulFunctionCall","src":"8488:21:26"},"nodeType":"YulExpressionStatement","src":"8488:21:26"},{"nodeType":"YulVariableDeclaration","src":"8518:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8533:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"8540:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8529:3:26"},"nodeType":"YulFunctionCall","src":"8529:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8522:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8583:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8585:77:26"},"nodeType":"YulFunctionCall","src":"8585:79:26"},"nodeType":"YulExpressionStatement","src":"8585:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8564:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8569:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8560:3:26"},"nodeType":"YulFunctionCall","src":"8560:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"8578:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8557:2:26"},"nodeType":"YulFunctionCall","src":"8557:25:26"},"nodeType":"YulIf","src":"8554:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8699:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"8709:6:26"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"8675:23:26"},"nodeType":"YulFunctionCall","src":"8675:41:26"},"nodeType":"YulExpressionStatement","src":"8675:41:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8368:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8373:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8381:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8389:5:26","type":""}],"src":"8312:410:26"},{"body":{"nodeType":"YulBlock","src":"8802:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"8851:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8853:77:26"},"nodeType":"YulFunctionCall","src":"8853:79:26"},"nodeType":"YulExpressionStatement","src":"8853:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8830:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8838:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8826:3:26"},"nodeType":"YulFunctionCall","src":"8826:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8845:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8822:3:26"},"nodeType":"YulFunctionCall","src":"8822:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8815:6:26"},"nodeType":"YulFunctionCall","src":"8815:35:26"},"nodeType":"YulIf","src":"8812:122:26"},{"nodeType":"YulVariableDeclaration","src":"8943:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8970:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8957:12:26"},"nodeType":"YulFunctionCall","src":"8957:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8947:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8986:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9046:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9054:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9042:3:26"},"nodeType":"YulFunctionCall","src":"9042:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"9061:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"9069:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8995:46:26"},"nodeType":"YulFunctionCall","src":"8995:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8986:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8780:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8788:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8796:5:26","type":""}],"src":"8741:338:26"},{"body":{"nodeType":"YulBlock","src":"9211:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"9258:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9260:77:26"},"nodeType":"YulFunctionCall","src":"9260:79:26"},"nodeType":"YulExpressionStatement","src":"9260:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9232:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9241:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9228:3:26"},"nodeType":"YulFunctionCall","src":"9228:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9253:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9224:3:26"},"nodeType":"YulFunctionCall","src":"9224:33:26"},"nodeType":"YulIf","src":"9221:120:26"},{"nodeType":"YulBlock","src":"9351:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9366:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9380:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9370:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9395:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9430:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9441:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9426:3:26"},"nodeType":"YulFunctionCall","src":"9426:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9450:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9405:20:26"},"nodeType":"YulFunctionCall","src":"9405:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9395:6:26"}]}]},{"nodeType":"YulBlock","src":"9478:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9493:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9507:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9497:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9523:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9558:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9569:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9554:3:26"},"nodeType":"YulFunctionCall","src":"9554:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9578:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9533:20:26"},"nodeType":"YulFunctionCall","src":"9533:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9523:6:26"}]}]},{"nodeType":"YulBlock","src":"9606:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9621:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9635:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9625:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9651:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9686:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9697:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9682:3:26"},"nodeType":"YulFunctionCall","src":"9682:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9706:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9661:20:26"},"nodeType":"YulFunctionCall","src":"9661:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9651:6:26"}]}]},{"nodeType":"YulBlock","src":"9734:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9749:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9780:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9791:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9776:3:26"},"nodeType":"YulFunctionCall","src":"9776:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9763:12:26"},"nodeType":"YulFunctionCall","src":"9763:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9753:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9842:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9844:77:26"},"nodeType":"YulFunctionCall","src":"9844:79:26"},"nodeType":"YulExpressionStatement","src":"9844:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9814:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9822:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9811:2:26"},"nodeType":"YulFunctionCall","src":"9811:30:26"},"nodeType":"YulIf","src":"9808:117:26"},{"nodeType":"YulAssignment","src":"9939:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9983:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9994:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9979:3:26"},"nodeType":"YulFunctionCall","src":"9979:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10003:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9949:29:26"},"nodeType":"YulFunctionCall","src":"9949:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9939:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9157:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9168:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9180:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9188:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9196:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9204:6:26","type":""}],"src":"9085:943:26"},{"body":{"nodeType":"YulBlock","src":"10117:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"10163:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10165:77:26"},"nodeType":"YulFunctionCall","src":"10165:79:26"},"nodeType":"YulExpressionStatement","src":"10165:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10138:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10147:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10134:3:26"},"nodeType":"YulFunctionCall","src":"10134:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10159:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10130:3:26"},"nodeType":"YulFunctionCall","src":"10130:32:26"},"nodeType":"YulIf","src":"10127:119:26"},{"nodeType":"YulBlock","src":"10256:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10271:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10285:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10275:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10300:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10335:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10346:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10331:3:26"},"nodeType":"YulFunctionCall","src":"10331:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10355:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10310:20:26"},"nodeType":"YulFunctionCall","src":"10310:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10300:6:26"}]}]},{"nodeType":"YulBlock","src":"10383:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10398:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10412:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10402:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10428:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10463:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10474:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10459:3:26"},"nodeType":"YulFunctionCall","src":"10459:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10483:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10438:20:26"},"nodeType":"YulFunctionCall","src":"10438:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10428:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10079:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10090:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10102:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10110:6:26","type":""}],"src":"10034:474:26"},{"body":{"nodeType":"YulBlock","src":"10542:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10559:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10562:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10552:6:26"},"nodeType":"YulFunctionCall","src":"10552:88:26"},"nodeType":"YulExpressionStatement","src":"10552:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10656:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10659:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10649:6:26"},"nodeType":"YulFunctionCall","src":"10649:15:26"},"nodeType":"YulExpressionStatement","src":"10649:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10680:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10683:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10673:6:26"},"nodeType":"YulFunctionCall","src":"10673:15:26"},"nodeType":"YulExpressionStatement","src":"10673:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10514:180:26"},{"body":{"nodeType":"YulBlock","src":"10751:269:26","statements":[{"nodeType":"YulAssignment","src":"10761:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10775:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10781:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10771:3:26"},"nodeType":"YulFunctionCall","src":"10771:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10761:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"10792:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10822:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10828:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10818:3:26"},"nodeType":"YulFunctionCall","src":"10818:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10796:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10869:51:26","statements":[{"nodeType":"YulAssignment","src":"10883:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10897:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10905:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10893:3:26"},"nodeType":"YulFunctionCall","src":"10893:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10883:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10849:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10842:6:26"},"nodeType":"YulFunctionCall","src":"10842:26:26"},"nodeType":"YulIf","src":"10839:81:26"},{"body":{"nodeType":"YulBlock","src":"10972:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10986:16:26"},"nodeType":"YulFunctionCall","src":"10986:18:26"},"nodeType":"YulExpressionStatement","src":"10986:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10936:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10959:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10967:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10956:2:26"},"nodeType":"YulFunctionCall","src":"10956:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10933:2:26"},"nodeType":"YulFunctionCall","src":"10933:38:26"},"nodeType":"YulIf","src":"10930:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10735:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10744:6:26","type":""}],"src":"10700:320:26"},{"body":{"nodeType":"YulBlock","src":"11132:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11154:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11162:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11150:3:26"},"nodeType":"YulFunctionCall","src":"11150:14:26"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11166:34:26","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11143:6:26"},"nodeType":"YulFunctionCall","src":"11143:58:26"},"nodeType":"YulExpressionStatement","src":"11143:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11222:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11230:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11218:3:26"},"nodeType":"YulFunctionCall","src":"11218:15:26"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11235:3:26","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11211:6:26"},"nodeType":"YulFunctionCall","src":"11211:28:26"},"nodeType":"YulExpressionStatement","src":"11211:28:26"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11124:6:26","type":""}],"src":"11026:220:26"},{"body":{"nodeType":"YulBlock","src":"11398:220:26","statements":[{"nodeType":"YulAssignment","src":"11408:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11474:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11479:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11415:58:26"},"nodeType":"YulFunctionCall","src":"11415:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11408:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11580:3:26"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11491:88:26"},"nodeType":"YulFunctionCall","src":"11491:93:26"},"nodeType":"YulExpressionStatement","src":"11491:93:26"},{"nodeType":"YulAssignment","src":"11593:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11604:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11600:3:26"},"nodeType":"YulFunctionCall","src":"11600:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11593:3:26"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11386:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11394:3:26","type":""}],"src":"11252:366:26"},{"body":{"nodeType":"YulBlock","src":"11795:248:26","statements":[{"nodeType":"YulAssignment","src":"11805:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11817:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11828:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11813:3:26"},"nodeType":"YulFunctionCall","src":"11813:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11805:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11852:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11863:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11848:3:26"},"nodeType":"YulFunctionCall","src":"11848:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11871:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11877:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11867:3:26"},"nodeType":"YulFunctionCall","src":"11867:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:26"},"nodeType":"YulFunctionCall","src":"11841:47:26"},"nodeType":"YulExpressionStatement","src":"11841:47:26"},{"nodeType":"YulAssignment","src":"11897:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12031:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11905:124:26"},"nodeType":"YulFunctionCall","src":"11905:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11897:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11775:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11790:4:26","type":""}],"src":"11624:419:26"},{"body":{"nodeType":"YulBlock","src":"12155:142:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12177:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12185:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12173:3:26"},"nodeType":"YulFunctionCall","src":"12173:14:26"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12189:34:26","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12166:6:26"},"nodeType":"YulFunctionCall","src":"12166:58:26"},"nodeType":"YulExpressionStatement","src":"12166:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12245:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12253:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12241:3:26"},"nodeType":"YulFunctionCall","src":"12241:15:26"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12258:31:26","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12234:6:26"},"nodeType":"YulFunctionCall","src":"12234:56:26"},"nodeType":"YulExpressionStatement","src":"12234:56:26"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12147:6:26","type":""}],"src":"12049:248:26"},{"body":{"nodeType":"YulBlock","src":"12449:220:26","statements":[{"nodeType":"YulAssignment","src":"12459:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12525:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12530:2:26","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12466:58:26"},"nodeType":"YulFunctionCall","src":"12466:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12459:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12631:3:26"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12542:88:26"},"nodeType":"YulFunctionCall","src":"12542:93:26"},"nodeType":"YulExpressionStatement","src":"12542:93:26"},{"nodeType":"YulAssignment","src":"12644:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12655:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12660:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12651:3:26"},"nodeType":"YulFunctionCall","src":"12651:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12644:3:26"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12437:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12445:3:26","type":""}],"src":"12303:366:26"},{"body":{"nodeType":"YulBlock","src":"12846:248:26","statements":[{"nodeType":"YulAssignment","src":"12856:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12868:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12879:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12864:3:26"},"nodeType":"YulFunctionCall","src":"12864:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12856:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12903:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12914:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12899:3:26"},"nodeType":"YulFunctionCall","src":"12899:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12922:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12918:3:26"},"nodeType":"YulFunctionCall","src":"12918:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12892:6:26"},"nodeType":"YulFunctionCall","src":"12892:47:26"},"nodeType":"YulExpressionStatement","src":"12892:47:26"},{"nodeType":"YulAssignment","src":"12948:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13082:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12956:124:26"},"nodeType":"YulFunctionCall","src":"12956:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12948:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12826:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12841:4:26","type":""}],"src":"12675:419:26"},{"body":{"nodeType":"YulBlock","src":"13206:126:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13228:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13236:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13224:3:26"},"nodeType":"YulFunctionCall","src":"13224:14:26"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13240:34:26","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13217:6:26"},"nodeType":"YulFunctionCall","src":"13217:58:26"},"nodeType":"YulExpressionStatement","src":"13217:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13296:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13304:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13292:3:26"},"nodeType":"YulFunctionCall","src":"13292:15:26"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13309:15:26","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:26"},"nodeType":"YulFunctionCall","src":"13285:40:26"},"nodeType":"YulExpressionStatement","src":"13285:40:26"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13198:6:26","type":""}],"src":"13100:232:26"},{"body":{"nodeType":"YulBlock","src":"13484:220:26","statements":[{"nodeType":"YulAssignment","src":"13494:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13565:2:26","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13501:58:26"},"nodeType":"YulFunctionCall","src":"13501:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13494:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13666:3:26"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13577:88:26"},"nodeType":"YulFunctionCall","src":"13577:93:26"},"nodeType":"YulExpressionStatement","src":"13577:93:26"},{"nodeType":"YulAssignment","src":"13679:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13690:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"13695:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13686:3:26"},"nodeType":"YulFunctionCall","src":"13686:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13679:3:26"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13472:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13480:3:26","type":""}],"src":"13338:366:26"},{"body":{"nodeType":"YulBlock","src":"13881:248:26","statements":[{"nodeType":"YulAssignment","src":"13891:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13903:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13914:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13899:3:26"},"nodeType":"YulFunctionCall","src":"13899:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13891:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13938:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13949:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13934:3:26"},"nodeType":"YulFunctionCall","src":"13934:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13957:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13963:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13953:3:26"},"nodeType":"YulFunctionCall","src":"13953:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13927:6:26"},"nodeType":"YulFunctionCall","src":"13927:47:26"},"nodeType":"YulExpressionStatement","src":"13927:47:26"},{"nodeType":"YulAssignment","src":"13983:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14117:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13991:124:26"},"nodeType":"YulFunctionCall","src":"13991:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13983:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13861:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13876:4:26","type":""}],"src":"13710:419:26"},{"body":{"nodeType":"YulBlock","src":"14241:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14263:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14271:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14259:3:26"},"nodeType":"YulFunctionCall","src":"14259:14:26"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14275:26:26","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14252:6:26"},"nodeType":"YulFunctionCall","src":"14252:50:26"},"nodeType":"YulExpressionStatement","src":"14252:50:26"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14233:6:26","type":""}],"src":"14135:174:26"},{"body":{"nodeType":"YulBlock","src":"14461:220:26","statements":[{"nodeType":"YulAssignment","src":"14471:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14537:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14542:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14478:58:26"},"nodeType":"YulFunctionCall","src":"14478:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14471:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14643:3:26"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14554:88:26"},"nodeType":"YulFunctionCall","src":"14554:93:26"},"nodeType":"YulExpressionStatement","src":"14554:93:26"},{"nodeType":"YulAssignment","src":"14656:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14667:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14672:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14663:3:26"},"nodeType":"YulFunctionCall","src":"14663:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14656:3:26"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14449:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14457:3:26","type":""}],"src":"14315:366:26"},{"body":{"nodeType":"YulBlock","src":"14858:248:26","statements":[{"nodeType":"YulAssignment","src":"14868:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:26"},"nodeType":"YulFunctionCall","src":"14876:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14868:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14915:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14926:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14911:3:26"},"nodeType":"YulFunctionCall","src":"14911:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14934:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14940:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14930:3:26"},"nodeType":"YulFunctionCall","src":"14930:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14904:6:26"},"nodeType":"YulFunctionCall","src":"14904:47:26"},"nodeType":"YulExpressionStatement","src":"14904:47:26"},{"nodeType":"YulAssignment","src":"14960:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15094:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14968:124:26"},"nodeType":"YulFunctionCall","src":"14968:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14960:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14838:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14853:4:26","type":""}],"src":"14687:419:26"},{"body":{"nodeType":"YulBlock","src":"15218:122:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15240:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15248:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15236:3:26"},"nodeType":"YulFunctionCall","src":"15236:14:26"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15252:34:26","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15229:6:26"},"nodeType":"YulFunctionCall","src":"15229:58:26"},"nodeType":"YulExpressionStatement","src":"15229:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15308:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15316:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15304:3:26"},"nodeType":"YulFunctionCall","src":"15304:15:26"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15321:11:26","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15297:6:26"},"nodeType":"YulFunctionCall","src":"15297:36:26"},"nodeType":"YulExpressionStatement","src":"15297:36:26"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15210:6:26","type":""}],"src":"15112:228:26"},{"body":{"nodeType":"YulBlock","src":"15492:220:26","statements":[{"nodeType":"YulAssignment","src":"15502:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15568:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15573:2:26","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15509:58:26"},"nodeType":"YulFunctionCall","src":"15509:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15502:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15674:3:26"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15585:88:26"},"nodeType":"YulFunctionCall","src":"15585:93:26"},"nodeType":"YulExpressionStatement","src":"15585:93:26"},{"nodeType":"YulAssignment","src":"15687:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15698:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15703:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:26"},"nodeType":"YulFunctionCall","src":"15694:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15687:3:26"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15480:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15488:3:26","type":""}],"src":"15346:366:26"},{"body":{"nodeType":"YulBlock","src":"15889:248:26","statements":[{"nodeType":"YulAssignment","src":"15899:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15911:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15922:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15907:3:26"},"nodeType":"YulFunctionCall","src":"15907:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15899:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15946:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15957:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15942:3:26"},"nodeType":"YulFunctionCall","src":"15942:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15965:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15971:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15961:3:26"},"nodeType":"YulFunctionCall","src":"15961:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15935:6:26"},"nodeType":"YulFunctionCall","src":"15935:47:26"},"nodeType":"YulExpressionStatement","src":"15935:47:26"},{"nodeType":"YulAssignment","src":"15991:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16125:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15999:124:26"},"nodeType":"YulFunctionCall","src":"15999:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15991:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15869:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15884:4:26","type":""}],"src":"15718:419:26"},{"body":{"nodeType":"YulBlock","src":"16171:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16188:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16191:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16181:6:26"},"nodeType":"YulFunctionCall","src":"16181:88:26"},"nodeType":"YulExpressionStatement","src":"16181:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16285:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16288:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16278:6:26"},"nodeType":"YulFunctionCall","src":"16278:15:26"},"nodeType":"YulExpressionStatement","src":"16278:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16309:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16312:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16302:6:26"},"nodeType":"YulFunctionCall","src":"16302:15:26"},"nodeType":"YulExpressionStatement","src":"16302:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"16143:180:26"},{"body":{"nodeType":"YulBlock","src":"16373:261:26","statements":[{"nodeType":"YulAssignment","src":"16383:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16406:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16388:17:26"},"nodeType":"YulFunctionCall","src":"16388:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"16383:1:26"}]},{"nodeType":"YulAssignment","src":"16417:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16440:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16422:17:26"},"nodeType":"YulFunctionCall","src":"16422:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16417:1:26"}]},{"body":{"nodeType":"YulBlock","src":"16580:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16582:16:26"},"nodeType":"YulFunctionCall","src":"16582:18:26"},"nodeType":"YulExpressionStatement","src":"16582:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16501:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16508:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16576:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16504:3:26"},"nodeType":"YulFunctionCall","src":"16504:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16498:2:26"},"nodeType":"YulFunctionCall","src":"16498:81:26"},"nodeType":"YulIf","src":"16495:107:26"},{"nodeType":"YulAssignment","src":"16612:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16623:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"16626:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16619:3:26"},"nodeType":"YulFunctionCall","src":"16619:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16612:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"16360:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"16363:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"16369:3:26","type":""}],"src":"16329:305:26"},{"body":{"nodeType":"YulBlock","src":"16746:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16768:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16776:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16764:3:26"},"nodeType":"YulFunctionCall","src":"16764:14:26"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"16780:34:26","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16757:6:26"},"nodeType":"YulFunctionCall","src":"16757:58:26"},"nodeType":"YulExpressionStatement","src":"16757:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16836:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16844:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16832:3:26"},"nodeType":"YulFunctionCall","src":"16832:15:26"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"16849:7:26","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16825:6:26"},"nodeType":"YulFunctionCall","src":"16825:32:26"},"nodeType":"YulExpressionStatement","src":"16825:32:26"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16738:6:26","type":""}],"src":"16640:224:26"},{"body":{"nodeType":"YulBlock","src":"17016:220:26","statements":[{"nodeType":"YulAssignment","src":"17026:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17092:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17097:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17033:58:26"},"nodeType":"YulFunctionCall","src":"17033:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17026:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17198:3:26"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17109:88:26"},"nodeType":"YulFunctionCall","src":"17109:93:26"},"nodeType":"YulExpressionStatement","src":"17109:93:26"},{"nodeType":"YulAssignment","src":"17211:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17222:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17227:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17218:3:26"},"nodeType":"YulFunctionCall","src":"17218:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17211:3:26"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17004:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17012:3:26","type":""}],"src":"16870:366:26"},{"body":{"nodeType":"YulBlock","src":"17413:248:26","statements":[{"nodeType":"YulAssignment","src":"17423:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17435:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17446:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17431:3:26"},"nodeType":"YulFunctionCall","src":"17431:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17423:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17470:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17481:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17466:3:26"},"nodeType":"YulFunctionCall","src":"17466:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17489:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17495:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17485:3:26"},"nodeType":"YulFunctionCall","src":"17485:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17459:6:26"},"nodeType":"YulFunctionCall","src":"17459:47:26"},"nodeType":"YulExpressionStatement","src":"17459:47:26"},{"nodeType":"YulAssignment","src":"17515:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17649:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17523:124:26"},"nodeType":"YulFunctionCall","src":"17523:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17515:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17393:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17408:4:26","type":""}],"src":"17242:419:26"},{"body":{"nodeType":"YulBlock","src":"17773:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17795:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17803:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17791:3:26"},"nodeType":"YulFunctionCall","src":"17791:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"17807:34:26","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17784:6:26"},"nodeType":"YulFunctionCall","src":"17784:58:26"},"nodeType":"YulExpressionStatement","src":"17784:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17863:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17871:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17859:3:26"},"nodeType":"YulFunctionCall","src":"17859:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"17876:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17852:6:26"},"nodeType":"YulFunctionCall","src":"17852:31:26"},"nodeType":"YulExpressionStatement","src":"17852:31:26"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17765:6:26","type":""}],"src":"17667:223:26"},{"body":{"nodeType":"YulBlock","src":"18042:220:26","statements":[{"nodeType":"YulAssignment","src":"18052:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18118:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18123:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18059:58:26"},"nodeType":"YulFunctionCall","src":"18059:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18052:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18224:3:26"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18135:88:26"},"nodeType":"YulFunctionCall","src":"18135:93:26"},"nodeType":"YulExpressionStatement","src":"18135:93:26"},{"nodeType":"YulAssignment","src":"18237:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18248:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18253:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18244:3:26"},"nodeType":"YulFunctionCall","src":"18244:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18237:3:26"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18030:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18038:3:26","type":""}],"src":"17896:366:26"},{"body":{"nodeType":"YulBlock","src":"18439:248:26","statements":[{"nodeType":"YulAssignment","src":"18449:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18461:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18472:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18457:3:26"},"nodeType":"YulFunctionCall","src":"18457:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18449:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18496:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18507:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18492:3:26"},"nodeType":"YulFunctionCall","src":"18492:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18515:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"18521:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18511:3:26"},"nodeType":"YulFunctionCall","src":"18511:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18485:6:26"},"nodeType":"YulFunctionCall","src":"18485:47:26"},"nodeType":"YulExpressionStatement","src":"18485:47:26"},{"nodeType":"YulAssignment","src":"18541:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18675:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18549:124:26"},"nodeType":"YulFunctionCall","src":"18549:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18541:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18419:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18434:4:26","type":""}],"src":"18268:419:26"},{"body":{"nodeType":"YulBlock","src":"18799:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18821:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18829:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18817:3:26"},"nodeType":"YulFunctionCall","src":"18817:14:26"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"18833:27:26","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18810:6:26"},"nodeType":"YulFunctionCall","src":"18810:51:26"},"nodeType":"YulExpressionStatement","src":"18810:51:26"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18791:6:26","type":""}],"src":"18693:175:26"},{"body":{"nodeType":"YulBlock","src":"19020:220:26","statements":[{"nodeType":"YulAssignment","src":"19030:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19096:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19101:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19037:58:26"},"nodeType":"YulFunctionCall","src":"19037:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19030:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19202:3:26"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19113:88:26"},"nodeType":"YulFunctionCall","src":"19113:93:26"},"nodeType":"YulExpressionStatement","src":"19113:93:26"},{"nodeType":"YulAssignment","src":"19215:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19226:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19231:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19222:3:26"},"nodeType":"YulFunctionCall","src":"19222:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19215:3:26"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19008:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19016:3:26","type":""}],"src":"18874:366:26"},{"body":{"nodeType":"YulBlock","src":"19417:248:26","statements":[{"nodeType":"YulAssignment","src":"19427:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19439:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19450:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19435:3:26"},"nodeType":"YulFunctionCall","src":"19435:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19427:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19474:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19485:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19470:3:26"},"nodeType":"YulFunctionCall","src":"19470:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19493:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19499:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19489:3:26"},"nodeType":"YulFunctionCall","src":"19489:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19463:6:26"},"nodeType":"YulFunctionCall","src":"19463:47:26"},"nodeType":"YulExpressionStatement","src":"19463:47:26"},{"nodeType":"YulAssignment","src":"19519:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19653:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19527:124:26"},"nodeType":"YulFunctionCall","src":"19527:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19519:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19397:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19412:4:26","type":""}],"src":"19246:419:26"},{"body":{"nodeType":"YulBlock","src":"19777:131:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19799:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19807:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19795:3:26"},"nodeType":"YulFunctionCall","src":"19795:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"19811:34:26","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19788:6:26"},"nodeType":"YulFunctionCall","src":"19788:58:26"},"nodeType":"YulExpressionStatement","src":"19788:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19867:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19875:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19863:3:26"},"nodeType":"YulFunctionCall","src":"19863:15:26"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"19880:20:26","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19856:6:26"},"nodeType":"YulFunctionCall","src":"19856:45:26"},"nodeType":"YulExpressionStatement","src":"19856:45:26"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19769:6:26","type":""}],"src":"19671:237:26"},{"body":{"nodeType":"YulBlock","src":"20060:220:26","statements":[{"nodeType":"YulAssignment","src":"20070:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20136:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20141:2:26","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20077:58:26"},"nodeType":"YulFunctionCall","src":"20077:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20070:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20242:3:26"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20153:88:26"},"nodeType":"YulFunctionCall","src":"20153:93:26"},"nodeType":"YulExpressionStatement","src":"20153:93:26"},{"nodeType":"YulAssignment","src":"20255:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20266:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20271:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20262:3:26"},"nodeType":"YulFunctionCall","src":"20262:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20255:3:26"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20048:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20056:3:26","type":""}],"src":"19914:366:26"},{"body":{"nodeType":"YulBlock","src":"20457:248:26","statements":[{"nodeType":"YulAssignment","src":"20467:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20479:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20490:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20475:3:26"},"nodeType":"YulFunctionCall","src":"20475:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20467:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20514:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20525:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20510:3:26"},"nodeType":"YulFunctionCall","src":"20510:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20533:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20539:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20529:3:26"},"nodeType":"YulFunctionCall","src":"20529:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20503:6:26"},"nodeType":"YulFunctionCall","src":"20503:47:26"},"nodeType":"YulExpressionStatement","src":"20503:47:26"},{"nodeType":"YulAssignment","src":"20559:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20693:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20567:124:26"},"nodeType":"YulFunctionCall","src":"20567:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20559:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20437:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20452:4:26","type":""}],"src":"20286:419:26"},{"body":{"nodeType":"YulBlock","src":"20769:40:26","statements":[{"nodeType":"YulAssignment","src":"20780:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20796:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20790:5:26"},"nodeType":"YulFunctionCall","src":"20790:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"20780:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20752:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"20762:6:26","type":""}],"src":"20711:98:26"},{"body":{"nodeType":"YulBlock","src":"20910:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20927:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"20932:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20920:6:26"},"nodeType":"YulFunctionCall","src":"20920:19:26"},"nodeType":"YulExpressionStatement","src":"20920:19:26"},{"nodeType":"YulAssignment","src":"20948:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20967:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20972:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20963:3:26"},"nodeType":"YulFunctionCall","src":"20963:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20948:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20882:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"20887:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20898:11:26","type":""}],"src":"20815:168:26"},{"body":{"nodeType":"YulBlock","src":"21079:270:26","statements":[{"nodeType":"YulVariableDeclaration","src":"21089:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21135:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21103:31:26"},"nodeType":"YulFunctionCall","src":"21103:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21093:6:26","type":""}]},{"nodeType":"YulAssignment","src":"21150:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21215:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21220:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21157:57:26"},"nodeType":"YulFunctionCall","src":"21157:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21150:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21262:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"21269:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21258:3:26"},"nodeType":"YulFunctionCall","src":"21258:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"21276:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21281:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21236:21:26"},"nodeType":"YulFunctionCall","src":"21236:52:26"},"nodeType":"YulExpressionStatement","src":"21236:52:26"},{"nodeType":"YulAssignment","src":"21297:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21308:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21335:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21313:21:26"},"nodeType":"YulFunctionCall","src":"21313:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21304:3:26"},"nodeType":"YulFunctionCall","src":"21304:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21297:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21060:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21067:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21075:3:26","type":""}],"src":"20989:360:26"},{"body":{"nodeType":"YulBlock","src":"21555:440:26","statements":[{"nodeType":"YulAssignment","src":"21565:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21577:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21588:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21573:3:26"},"nodeType":"YulFunctionCall","src":"21573:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21565:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21646:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21659:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21670:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21655:3:26"},"nodeType":"YulFunctionCall","src":"21655:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21602:43:26"},"nodeType":"YulFunctionCall","src":"21602:71:26"},"nodeType":"YulExpressionStatement","src":"21602:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21727:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21740:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21751:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21736:3:26"},"nodeType":"YulFunctionCall","src":"21736:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"21683:43:26"},"nodeType":"YulFunctionCall","src":"21683:72:26"},"nodeType":"YulExpressionStatement","src":"21683:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21809:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21822:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21833:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21818:3:26"},"nodeType":"YulFunctionCall","src":"21818:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"21765:43:26"},"nodeType":"YulFunctionCall","src":"21765:72:26"},"nodeType":"YulExpressionStatement","src":"21765:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21858:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21869:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21854:3:26"},"nodeType":"YulFunctionCall","src":"21854:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21878:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21884:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21874:3:26"},"nodeType":"YulFunctionCall","src":"21874:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21847:6:26"},"nodeType":"YulFunctionCall","src":"21847:48:26"},"nodeType":"YulExpressionStatement","src":"21847:48:26"},{"nodeType":"YulAssignment","src":"21904:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"21974:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"21983:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21912:61:26"},"nodeType":"YulFunctionCall","src":"21912:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21904:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21503:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21515:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21523:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21531:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21539:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21550:4:26","type":""}],"src":"21355:640:26"},{"body":{"nodeType":"YulBlock","src":"22063:79:26","statements":[{"nodeType":"YulAssignment","src":"22073:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22088:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22082:5:26"},"nodeType":"YulFunctionCall","src":"22082:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22073:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22130:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22104:25:26"},"nodeType":"YulFunctionCall","src":"22104:32:26"},"nodeType":"YulExpressionStatement","src":"22104:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22041:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"22049:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22057:5:26","type":""}],"src":"22001:141:26"},{"body":{"nodeType":"YulBlock","src":"22224:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"22270:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22272:77:26"},"nodeType":"YulFunctionCall","src":"22272:79:26"},"nodeType":"YulExpressionStatement","src":"22272:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22245:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22254:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22241:3:26"},"nodeType":"YulFunctionCall","src":"22241:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"22266:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22237:3:26"},"nodeType":"YulFunctionCall","src":"22237:32:26"},"nodeType":"YulIf","src":"22234:119:26"},{"nodeType":"YulBlock","src":"22363:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22378:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22392:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22382:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22407:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22452:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22463:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22448:3:26"},"nodeType":"YulFunctionCall","src":"22448:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22472:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"22417:30:26"},"nodeType":"YulFunctionCall","src":"22417:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22407:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22194:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22205:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22217:6:26","type":""}],"src":"22148:349:26"},{"body":{"nodeType":"YulBlock","src":"22609:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22631:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22639:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22627:3:26"},"nodeType":"YulFunctionCall","src":"22627:14:26"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"22643:34:26","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22620:6:26"},"nodeType":"YulFunctionCall","src":"22620:58:26"},"nodeType":"YulExpressionStatement","src":"22620:58:26"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22601:6:26","type":""}],"src":"22503:182:26"},{"body":{"nodeType":"YulBlock","src":"22837:220:26","statements":[{"nodeType":"YulAssignment","src":"22847:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22913:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22918:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22854:58:26"},"nodeType":"YulFunctionCall","src":"22854:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22847:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23019:3:26"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"22930:88:26"},"nodeType":"YulFunctionCall","src":"22930:93:26"},"nodeType":"YulExpressionStatement","src":"22930:93:26"},{"nodeType":"YulAssignment","src":"23032:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23043:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23048:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23039:3:26"},"nodeType":"YulFunctionCall","src":"23039:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23032:3:26"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22825:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22833:3:26","type":""}],"src":"22691:366:26"},{"body":{"nodeType":"YulBlock","src":"23234:248:26","statements":[{"nodeType":"YulAssignment","src":"23244:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23256:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23267:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23252:3:26"},"nodeType":"YulFunctionCall","src":"23252:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23244:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23291:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23302:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23287:3:26"},"nodeType":"YulFunctionCall","src":"23287:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23310:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23316:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23306:3:26"},"nodeType":"YulFunctionCall","src":"23306:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23280:6:26"},"nodeType":"YulFunctionCall","src":"23280:47:26"},"nodeType":"YulExpressionStatement","src":"23280:47:26"},{"nodeType":"YulAssignment","src":"23336:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23470:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23344:124:26"},"nodeType":"YulFunctionCall","src":"23344:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23336:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23214:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23229:4:26","type":""}],"src":"23063:419:26"},{"body":{"nodeType":"YulBlock","src":"23594:72:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23616:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23624:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23612:3:26"},"nodeType":"YulFunctionCall","src":"23612:14:26"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"23628:30:26","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23605:6:26"},"nodeType":"YulFunctionCall","src":"23605:54:26"},"nodeType":"YulExpressionStatement","src":"23605:54:26"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23586:6:26","type":""}],"src":"23488:178:26"},{"body":{"nodeType":"YulBlock","src":"23818:220:26","statements":[{"nodeType":"YulAssignment","src":"23828:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23894:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23899:2:26","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23835:58:26"},"nodeType":"YulFunctionCall","src":"23835:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23828:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24000:3:26"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"23911:88:26"},"nodeType":"YulFunctionCall","src":"23911:93:26"},"nodeType":"YulExpressionStatement","src":"23911:93:26"},{"nodeType":"YulAssignment","src":"24013:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24024:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24029:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24020:3:26"},"nodeType":"YulFunctionCall","src":"24020:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24013:3:26"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23806:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23814:3:26","type":""}],"src":"23672:366:26"},{"body":{"nodeType":"YulBlock","src":"24215:248:26","statements":[{"nodeType":"YulAssignment","src":"24225:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24237:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24248:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24233:3:26"},"nodeType":"YulFunctionCall","src":"24233:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24225:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24272:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24283:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24268:3:26"},"nodeType":"YulFunctionCall","src":"24268:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24291:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"24297:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24287:3:26"},"nodeType":"YulFunctionCall","src":"24287:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24261:6:26"},"nodeType":"YulFunctionCall","src":"24261:47:26"},"nodeType":"YulExpressionStatement","src":"24261:47:26"},{"nodeType":"YulAssignment","src":"24317:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24451:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24325:124:26"},"nodeType":"YulFunctionCall","src":"24325:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24317:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24195:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24210:4:26","type":""}],"src":"24044:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063b88d4fde11610066578063b88d4fde146102ad578063c2229fea146102c9578063c87b56dd146102e7578063e985e9c51461031757610100565b806370a082311461022557806378ce90351461025557806395d89b4114610273578063a22cb4651461029157610100565b806323b872dd116100d357806323b872dd1461019f57806342842e0e146101bb5780636352211e146101d75780636e02007d1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a91906115fe565b610347565b60405161012c9190611646565b60405180910390f35b61013d610429565b60405161014a91906116fa565b60405180910390f35b61016d60048036038101906101689190611752565b6104bb565b60405161017a91906117c0565b60405180910390f35b61019d60048036038101906101989190611807565b610501565b005b6101b960048036038101906101b49190611847565b610619565b005b6101d560048036038101906101d09190611847565b610679565b005b6101f160048036038101906101ec9190611752565b610699565b6040516101fe91906117c0565b60405180910390f35b61020f610720565b60405161021c91906118a9565b60405180910390f35b61023f600480360381019061023a91906118c4565b61072a565b60405161024c91906118a9565b60405180910390f35b61025d6107e2565b60405161026a91906116fa565b60405180910390f35b61027b6107fe565b60405161028891906116fa565b60405180910390f35b6102ab60048036038101906102a6919061191d565b610890565b005b6102c760048036038101906102c29190611a92565b6108a6565b005b6102d1610908565b6040516102de91906118a9565b60405180910390f35b61030160048036038101906102fc9190611752565b610933565b60405161030e91906116fa565b60405180910390f35b610331600480360381019061032c9190611b15565b610955565b60405161033e9190611646565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061041257507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104225750610421826109e9565b5b9050919050565b60606000805461043890611b84565b80601f016020809104026020016040519081016040528092919081815260200182805461046490611b84565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b5050505050905090565b60006104c682610a53565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061050c82610699565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057490611c28565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661059c610a9e565b73ffffffffffffffffffffffffffffffffffffffff1614806105cb57506105ca816105c5610a9e565b610955565b5b61060a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060190611cba565b60405180910390fd5b6106148383610aa6565b505050565b61062a610624610a9e565b82610b5f565b610669576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066090611d4c565b60405180910390fd5b610674838383610bf4565b505050565b610694838383604051806020016040528060008152506108a6565b505050565b6000806106a583610eee565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070e90611db8565b60405180910390fd5b80915050919050565b6000600654905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561079b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079290611e4a565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6040518060800160405280605781526020016122cd6057913981565b60606001805461080d90611b84565b80601f016020809104026020016040519081016040528092919081815260200182805461083990611b84565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050905090565b6108a261089b610a9e565b8383610f2b565b5050565b6108b76108b1610a9e565b83610b5f565b6108f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ed90611d4c565b60405180910390fd5b61090284848484611098565b50505050565b6000610916336006546110f4565b60016006546109259190611e99565b600681905550600654905090565b60606040518060800160405280605781526020016122cd605791399050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610a5c81611112565b610a9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9290611db8565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610b1983610699565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610b6b83610699565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bad5750610bac8185610955565b5b80610beb57508373ffffffffffffffffffffffffffffffffffffffff16610bd3846104bb565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610c1482610699565b73ffffffffffffffffffffffffffffffffffffffff1614610c6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6190611f61565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd190611ff3565b60405180910390fd5b610ce78383836001611153565b8273ffffffffffffffffffffffffffffffffffffffff16610d0782610699565b73ffffffffffffffffffffffffffffffffffffffff1614610d5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5490611f61565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ee98383836001611159565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f919061205f565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161108b9190611646565b60405180910390a3505050565b6110a3848484610bf4565b6110af8484848461115f565b6110ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110e5906120f1565b60405180910390fd5b50505050565b61110e8282604051806020016040528060008152506112f6565b5050565b60008073ffffffffffffffffffffffffffffffffffffffff1661113483610eee565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111808473ffffffffffffffffffffffffffffffffffffffff16611351565b156112e9578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111a9610a9e565b8786866040518563ffffffff1660e01b81526004016111cb9493929190612166565b602060405180830381600087803b1580156111e557600080fd5b505af192505050801561121657506040513d601f19601f8201168201806040525081019061121391906121c7565b60015b611299573d8060008114611246576040519150601f19603f3d011682016040523d82523d6000602084013e61124b565b606091505b50600081511415611291576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611288906120f1565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506112ee565b600190505b949350505050565b6113008383611374565b61130d600084848461115f565b61134c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611343906120f1565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156113e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113db90612240565b60405180910390fd5b6113ed81611112565b1561142d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611424906122ac565b60405180910390fd5b61143b600083836001611153565b61144481611112565b15611484576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147b906122ac565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461158e600083836001611159565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115db816115a6565b81146115e657600080fd5b50565b6000813590506115f8816115d2565b92915050565b6000602082840312156116145761161361159c565b5b6000611622848285016115e9565b91505092915050565b60008115159050919050565b6116408161162b565b82525050565b600060208201905061165b6000830184611637565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561169b578082015181840152602081019050611680565b838111156116aa576000848401525b50505050565b6000601f19601f8301169050919050565b60006116cc82611661565b6116d6818561166c565b93506116e681856020860161167d565b6116ef816116b0565b840191505092915050565b6000602082019050818103600083015261171481846116c1565b905092915050565b6000819050919050565b61172f8161171c565b811461173a57600080fd5b50565b60008135905061174c81611726565b92915050565b6000602082840312156117685761176761159c565b5b60006117768482850161173d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006117aa8261177f565b9050919050565b6117ba8161179f565b82525050565b60006020820190506117d560008301846117b1565b92915050565b6117e48161179f565b81146117ef57600080fd5b50565b600081359050611801816117db565b92915050565b6000806040838503121561181e5761181d61159c565b5b600061182c858286016117f2565b925050602061183d8582860161173d565b9150509250929050565b6000806000606084860312156118605761185f61159c565b5b600061186e868287016117f2565b935050602061187f868287016117f2565b92505060406118908682870161173d565b9150509250925092565b6118a38161171c565b82525050565b60006020820190506118be600083018461189a565b92915050565b6000602082840312156118da576118d961159c565b5b60006118e8848285016117f2565b91505092915050565b6118fa8161162b565b811461190557600080fd5b50565b600081359050611917816118f1565b92915050565b600080604083850312156119345761193361159c565b5b6000611942858286016117f2565b925050602061195385828601611908565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61199f826116b0565b810181811067ffffffffffffffff821117156119be576119bd611967565b5b80604052505050565b60006119d1611592565b90506119dd8282611996565b919050565b600067ffffffffffffffff8211156119fd576119fc611967565b5b611a06826116b0565b9050602081019050919050565b82818337600083830152505050565b6000611a35611a30846119e2565b6119c7565b905082815260208101848484011115611a5157611a50611962565b5b611a5c848285611a13565b509392505050565b600082601f830112611a7957611a7861195d565b5b8135611a89848260208601611a22565b91505092915050565b60008060008060808587031215611aac57611aab61159c565b5b6000611aba878288016117f2565b9450506020611acb878288016117f2565b9350506040611adc8782880161173d565b925050606085013567ffffffffffffffff811115611afd57611afc6115a1565b5b611b0987828801611a64565b91505092959194509250565b60008060408385031215611b2c57611b2b61159c565b5b6000611b3a858286016117f2565b9250506020611b4b858286016117f2565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b9c57607f821691505b60208210811415611bb057611baf611b55565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611c1260218361166c565b9150611c1d82611bb6565b604082019050919050565b60006020820190508181036000830152611c4181611c05565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611ca4603d8361166c565b9150611caf82611c48565b604082019050919050565b60006020820190508181036000830152611cd381611c97565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611d36602d8361166c565b9150611d4182611cda565b604082019050919050565b60006020820190508181036000830152611d6581611d29565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611da260188361166c565b9150611dad82611d6c565b602082019050919050565b60006020820190508181036000830152611dd181611d95565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611e3460298361166c565b9150611e3f82611dd8565b604082019050919050565b60006020820190508181036000830152611e6381611e27565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ea48261171c565b9150611eaf8361171c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611ee457611ee3611e6a565b5b828201905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611f4b60258361166c565b9150611f5682611eef565b604082019050919050565b60006020820190508181036000830152611f7a81611f3e565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611fdd60248361166c565b9150611fe882611f81565b604082019050919050565b6000602082019050818103600083015261200c81611fd0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b600061204960198361166c565b915061205482612013565b602082019050919050565b600060208201905081810360008301526120788161203c565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120db60328361166c565b91506120e68261207f565b604082019050919050565b6000602082019050818103600083015261210a816120ce565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061213882612111565b612142818561211c565b935061215281856020860161167d565b61215b816116b0565b840191505092915050565b600060808201905061217b60008301876117b1565b61218860208301866117b1565b612195604083018561189a565b81810360608301526121a7818461212d565b905095945050505050565b6000815190506121c1816115d2565b92915050565b6000602082840312156121dd576121dc61159c565b5b60006121eb848285016121b2565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b600061222a60208361166c565b9150612235826121f4565b602082019050919050565b600060208201905081810360008301526122598161221d565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612296601c8361166c565b91506122a182612260565b602082019050919050565b600060208201905081810360008301526122c581612289565b905091905056fe697066733a2f2f62616679626569673337696f6972373673376d67356f6f6265746e636f6a636d3363336878617379643472766964346a71687934676b61686567342f3f66696c656e616d653d302d5055472e6a736f6ea264697066735822122039885d7fca44c942b5a027887e430c2ef12b0c42b74c5fe20b8b7598b26e1af564736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0xC2229FEA EQ PUSH2 0x2C9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x317 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0x78CE9035 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x291 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x15FE JUMP JUMPDEST PUSH2 0x347 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x429 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x4BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0x501 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x619 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x679 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x17C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20F PUSH2 0x720 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x18C4 JUMP JUMPDEST PUSH2 0x72A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25D PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x191D JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DE SWAP2 SWAP1 PUSH2 0x18A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x301 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0x16FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1B15 JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33E SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x412 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x422 JUMPI POP PUSH2 0x421 DUP3 PUSH2 0x9E9 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x438 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x464 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x486 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x494 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C6 DUP3 PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x50C DUP3 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x574 SWAP1 PUSH2 0x1C28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x59C PUSH2 0xA9E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5CB JUMPI POP PUSH2 0x5CA DUP2 PUSH2 0x5C5 PUSH2 0xA9E JUMP JUMPDEST PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH2 0x60A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x601 SWAP1 PUSH2 0x1CBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x614 DUP4 DUP4 PUSH2 0xAA6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x62A PUSH2 0x624 PUSH2 0xA9E JUMP JUMPDEST DUP3 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x669 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x660 SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x674 DUP4 DUP4 DUP4 PUSH2 0xBF4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x694 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8A6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6A5 DUP4 PUSH2 0xEEE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x717 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x70E SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x79B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x792 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x80D SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x839 SWAP1 PUSH2 0x1B84 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x85B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x886 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x869 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8A2 PUSH2 0x89B PUSH2 0xA9E JUMP JUMPDEST DUP4 DUP4 PUSH2 0xF2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8B7 PUSH2 0x8B1 PUSH2 0xA9E JUMP JUMPDEST DUP4 PUSH2 0xB5F JUMP JUMPDEST PUSH2 0x8F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8ED SWAP1 PUSH2 0x1D4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x902 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1098 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x916 CALLER PUSH1 0x6 SLOAD PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x925 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x57 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22CD PUSH1 0x57 SWAP2 CODECOPY SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA5C DUP2 PUSH2 0x1112 JUMP JUMPDEST PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA92 SWAP1 PUSH2 0x1DB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB19 DUP4 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB6B DUP4 PUSH2 0x699 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xBAD JUMPI POP PUSH2 0xBAC DUP2 DUP6 PUSH2 0x955 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xBEB JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBD3 DUP5 PUSH2 0x4BB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC14 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC61 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xCDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD1 SWAP1 PUSH2 0x1FF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCE7 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD07 DUP3 PUSH2 0x699 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD54 SWAP1 PUSH2 0x1F61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xEE9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xF9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF91 SWAP1 PUSH2 0x205F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x108B SWAP2 SWAP1 PUSH2 0x1646 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x10A3 DUP5 DUP5 DUP5 PUSH2 0xBF4 JUMP JUMPDEST PUSH2 0x10AF DUP5 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x110E DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x12F6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1134 DUP4 PUSH2 0xEEE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1180 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1351 JUMP JUMPDEST ISZERO PUSH2 0x12E9 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11A9 PUSH2 0xA9E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CB SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2166 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1216 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x21C7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1299 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1246 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x1291 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1288 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x12EE JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x1300 DUP4 DUP4 PUSH2 0x1374 JUMP JUMPDEST PUSH2 0x130D PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x115F JUMP JUMPDEST PUSH2 0x134C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1343 SWAP1 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x13E4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13DB SWAP1 PUSH2 0x2240 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13ED DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x142D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1424 SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x143B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1153 JUMP JUMPDEST PUSH2 0x1444 DUP2 PUSH2 0x1112 JUMP JUMPDEST ISZERO PUSH2 0x1484 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x147B SWAP1 PUSH2 0x22AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x158E PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1159 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15DB DUP2 PUSH2 0x15A6 JUMP JUMPDEST DUP2 EQ PUSH2 0x15E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15F8 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1614 JUMPI PUSH2 0x1613 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1622 DUP5 DUP3 DUP6 ADD PUSH2 0x15E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1640 DUP2 PUSH2 0x162B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x165B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1637 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x169B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1680 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x16AA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16CC DUP3 PUSH2 0x1661 JUMP JUMPDEST PUSH2 0x16D6 DUP2 DUP6 PUSH2 0x166C JUMP JUMPDEST SWAP4 POP PUSH2 0x16E6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167D JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x16B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1714 DUP2 DUP5 PUSH2 0x16C1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x172F DUP2 PUSH2 0x171C JUMP JUMPDEST DUP2 EQ PUSH2 0x173A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x174C DUP2 PUSH2 0x1726 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1768 JUMPI PUSH2 0x1767 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1776 DUP5 DUP3 DUP6 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17AA DUP3 PUSH2 0x177F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17BA DUP2 PUSH2 0x179F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E4 DUP2 PUSH2 0x179F JUMP JUMPDEST DUP2 EQ PUSH2 0x17EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1801 DUP2 PUSH2 0x17DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x181E JUMPI PUSH2 0x181D PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182C DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x183D DUP6 DUP3 DUP7 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x186E DUP7 DUP3 DUP8 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x187F DUP7 DUP3 DUP8 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1890 DUP7 DUP3 DUP8 ADD PUSH2 0x173D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x18A3 DUP2 PUSH2 0x171C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x18BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x189A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18DA JUMPI PUSH2 0x18D9 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18E8 DUP5 DUP3 DUP6 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18FA DUP2 PUSH2 0x162B JUMP JUMPDEST DUP2 EQ PUSH2 0x1905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1917 DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1934 JUMPI PUSH2 0x1933 PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1942 DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1953 DUP6 DUP3 DUP7 ADD PUSH2 0x1908 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x199F DUP3 PUSH2 0x16B0 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x19BE JUMPI PUSH2 0x19BD PUSH2 0x1967 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19D1 PUSH2 0x1592 JUMP JUMPDEST SWAP1 POP PUSH2 0x19DD DUP3 DUP3 PUSH2 0x1996 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x19FD JUMPI PUSH2 0x19FC PUSH2 0x1967 JUMP JUMPDEST JUMPDEST PUSH2 0x1A06 DUP3 PUSH2 0x16B0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A35 PUSH2 0x1A30 DUP5 PUSH2 0x19E2 JUMP JUMPDEST PUSH2 0x19C7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1A51 JUMPI PUSH2 0x1A50 PUSH2 0x1962 JUMP JUMPDEST JUMPDEST PUSH2 0x1A5C DUP5 DUP3 DUP6 PUSH2 0x1A13 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x195D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1A89 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1A22 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1AAC JUMPI PUSH2 0x1AAB PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ABA DUP8 DUP3 DUP9 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ACB DUP8 DUP3 DUP9 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1ADC DUP8 DUP3 DUP9 ADD PUSH2 0x173D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1AFD JUMPI PUSH2 0x1AFC PUSH2 0x15A1 JUMP JUMPDEST JUMPDEST PUSH2 0x1B09 DUP8 DUP3 DUP9 ADD PUSH2 0x1A64 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2C JUMPI PUSH2 0x1B2B PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B3A DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4B DUP6 DUP3 DUP7 ADD PUSH2 0x17F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1B9C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BB0 JUMPI PUSH2 0x1BAF PUSH2 0x1B55 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C12 PUSH1 0x21 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1C1D DUP3 PUSH2 0x1BB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C41 DUP2 PUSH2 0x1C05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x3D DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1CAF DUP3 PUSH2 0x1C48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CD3 DUP2 PUSH2 0x1C97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D36 PUSH1 0x2D DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1D41 DUP3 PUSH2 0x1CDA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D65 DUP2 PUSH2 0x1D29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA2 PUSH1 0x18 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAD DUP3 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DD1 DUP2 PUSH2 0x1D95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E34 PUSH1 0x29 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1E3F DUP3 PUSH2 0x1DD8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E63 DUP2 PUSH2 0x1E27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP3 PUSH2 0x171C JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP4 PUSH2 0x171C JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE3 PUSH2 0x1E6A JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F4B PUSH1 0x25 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1F56 DUP3 PUSH2 0x1EEF JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F7A DUP2 PUSH2 0x1F3E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FDD PUSH1 0x24 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x1FE8 DUP3 PUSH2 0x1F81 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x200C DUP2 PUSH2 0x1FD0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2049 PUSH1 0x19 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x2054 DUP3 PUSH2 0x2013 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2078 DUP2 PUSH2 0x203C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20DB PUSH1 0x32 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x20E6 DUP3 PUSH2 0x207F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x210A DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2138 DUP3 PUSH2 0x2111 JUMP JUMPDEST PUSH2 0x2142 DUP2 DUP6 PUSH2 0x211C JUMP JUMPDEST SWAP4 POP PUSH2 0x2152 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x167D JUMP JUMPDEST PUSH2 0x215B DUP2 PUSH2 0x16B0 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x217B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x2188 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x17B1 JUMP JUMPDEST PUSH2 0x2195 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x189A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21A7 DUP2 DUP5 PUSH2 0x212D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21C1 DUP2 PUSH2 0x15D2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x159C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EB DUP5 DUP3 DUP6 ADD PUSH2 0x21B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x222A PUSH1 0x20 DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x2235 DUP3 PUSH2 0x21F4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2259 DUP2 PUSH2 0x221D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2296 PUSH1 0x1C DUP4 PUSH2 0x166C JUMP JUMPDEST SWAP2 POP PUSH2 0x22A1 DUP3 PUSH2 0x2260 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22C5 DUP2 PUSH2 0x2289 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID PUSH10 0x7066733A2F2F62616679 PUSH3 0x656967 CALLER CALLDATACOPY PUSH10 0x6F6972373673376D6735 PUSH16 0x6F6265746E636F6A636D336333687861 PUSH20 0x79643472766964346A71687934676B6168656734 0x2F EXTCODEHASH PUSH7 0x696C656E616D65 RETURNDATASIZE ADDRESS 0x2D POP SSTORE SELFBALANCE 0x2E PUSH11 0x736F6EA264697066735822 SLT KECCAK256 CODECOPY DUP9 0x5D PUSH32 0xCA44C942B5A027887E430C2EF12B0C42B74C5FE20B8B7598B26E1AF564736F6C PUSH4 0x43000808 STOP CALLER ","sourceMap":"120:707:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;727:97:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;155:133:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:178:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:117;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;727:97:22:-;775:7;802:14;;795:21;;727:97;:::o;1929:204:9:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;155:133:22:-;;;;;;;;;;;;;;;;;;;:::o;2633:102:9:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;416:178:22:-;451:7;471:37;481:10;493:14;;471:9;:37::i;:::-;553:1;536:14;;:18;;;;:::i;:::-;519:14;:35;;;;572:14;;565:21;;416:178;:::o;602:117::-;667:13;701:9;;;;;;;;;;;;;;;;;693:18;;602:117;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:9:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12572:171:9:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;:::-;7995:108;;:::o;7120:126::-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;8324:279::-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8324:279;;;:::o;1412:320:14:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;8925:920:9:-;9018:1;9004:16;;:2;:16;;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:619::-;5015:6;5023;5031;5080:2;5068:9;5059:7;5055:23;5051:32;5048:119;;;5086:79;;:::i;:::-;5048:119;5206:1;5231:53;5276:7;5267:6;5256:9;5252:22;5231:53;:::i;:::-;5221:63;;5177:117;5333:2;5359:53;5404:7;5395:6;5384:9;5380:22;5359:53;:::i;:::-;5349:63;;5304:118;5461:2;5487:53;5532:7;5523:6;5512:9;5508:22;5487:53;:::i;:::-;5477:63;;5432:118;4938:619;;;;;:::o;5563:118::-;5650:24;5668:5;5650:24;:::i;:::-;5645:3;5638:37;5563:118;;:::o;5687:222::-;5780:4;5818:2;5807:9;5803:18;5795:26;;5831:71;5899:1;5888:9;5884:17;5875:6;5831:71;:::i;:::-;5687:222;;;;:::o;5915:329::-;5974:6;6023:2;6011:9;6002:7;5998:23;5994:32;5991:119;;;6029:79;;:::i;:::-;5991:119;6149:1;6174:53;6219:7;6210:6;6199:9;6195:22;6174:53;:::i;:::-;6164:63;;6120:117;5915:329;;;;:::o;6250:116::-;6320:21;6335:5;6320:21;:::i;:::-;6313:5;6310:32;6300:60;;6356:1;6353;6346:12;6300:60;6250:116;:::o;6372:133::-;6415:5;6453:6;6440:20;6431:29;;6469:30;6493:5;6469:30;:::i;:::-;6372:133;;;;:::o;6511:468::-;6576:6;6584;6633:2;6621:9;6612:7;6608:23;6604:32;6601:119;;;6639:79;;:::i;:::-;6601:119;6759:1;6784:53;6829:7;6820:6;6809:9;6805:22;6784:53;:::i;:::-;6774:63;;6730:117;6886:2;6912:50;6954:7;6945:6;6934:9;6930:22;6912:50;:::i;:::-;6902:60;;6857:115;6511:468;;;;;:::o;6985:117::-;7094:1;7091;7084:12;7108:117;7217:1;7214;7207:12;7231:180;7279:77;7276:1;7269:88;7376:4;7373:1;7366:15;7400:4;7397:1;7390:15;7417:281;7500:27;7522:4;7500:27;:::i;:::-;7492:6;7488:40;7630:6;7618:10;7615:22;7594:18;7582:10;7579:34;7576:62;7573:88;;;7641:18;;:::i;:::-;7573:88;7681:10;7677:2;7670:22;7460:238;7417:281;;:::o;7704:129::-;7738:6;7765:20;;:::i;:::-;7755:30;;7794:33;7822:4;7814:6;7794:33;:::i;:::-;7704:129;;;:::o;7839:307::-;7900:4;7990:18;7982:6;7979:30;7976:56;;;8012:18;;:::i;:::-;7976:56;8050:29;8072:6;8050:29;:::i;:::-;8042:37;;8134:4;8128;8124:15;8116:23;;7839:307;;;:::o;8152:154::-;8236:6;8231:3;8226;8213:30;8298:1;8289:6;8284:3;8280:16;8273:27;8152:154;;;:::o;8312:410::-;8389:5;8414:65;8430:48;8471:6;8430:48;:::i;:::-;8414:65;:::i;:::-;8405:74;;8502:6;8495:5;8488:21;8540:4;8533:5;8529:16;8578:3;8569:6;8564:3;8560:16;8557:25;8554:112;;;8585:79;;:::i;:::-;8554:112;8675:41;8709:6;8704:3;8699;8675:41;:::i;:::-;8395:327;8312:410;;;;;:::o;8741:338::-;8796:5;8845:3;8838:4;8830:6;8826:17;8822:27;8812:122;;8853:79;;:::i;:::-;8812:122;8970:6;8957:20;8995:78;9069:3;9061:6;9054:4;9046:6;9042:17;8995:78;:::i;:::-;8986:87;;8802:277;8741:338;;;;:::o;9085:943::-;9180:6;9188;9196;9204;9253:3;9241:9;9232:7;9228:23;9224:33;9221:120;;;9260:79;;:::i;:::-;9221:120;9380:1;9405:53;9450:7;9441:6;9430:9;9426:22;9405:53;:::i;:::-;9395:63;;9351:117;9507:2;9533:53;9578:7;9569:6;9558:9;9554:22;9533:53;:::i;:::-;9523:63;;9478:118;9635:2;9661:53;9706:7;9697:6;9686:9;9682:22;9661:53;:::i;:::-;9651:63;;9606:118;9791:2;9780:9;9776:18;9763:32;9822:18;9814:6;9811:30;9808:117;;;9844:79;;:::i;:::-;9808:117;9949:62;10003:7;9994:6;9983:9;9979:22;9949:62;:::i;:::-;9939:72;;9734:287;9085:943;;;;;;;:::o;10034:474::-;10102:6;10110;10159:2;10147:9;10138:7;10134:23;10130:32;10127:119;;;10165:79;;:::i;:::-;10127:119;10285:1;10310:53;10355:7;10346:6;10335:9;10331:22;10310:53;:::i;:::-;10300:63;;10256:117;10412:2;10438:53;10483:7;10474:6;10463:9;10459:22;10438:53;:::i;:::-;10428:63;;10383:118;10034:474;;;;;:::o;10514:180::-;10562:77;10559:1;10552:88;10659:4;10656:1;10649:15;10683:4;10680:1;10673:15;10700:320;10744:6;10781:1;10775:4;10771:12;10761:22;;10828:1;10822:4;10818:12;10849:18;10839:81;;10905:4;10897:6;10893:17;10883:27;;10839:81;10967:2;10959:6;10956:14;10936:18;10933:38;10930:84;;;10986:18;;:::i;:::-;10930:84;10751:269;10700:320;;;:::o;11026:220::-;11166:34;11162:1;11154:6;11150:14;11143:58;11235:3;11230:2;11222:6;11218:15;11211:28;11026:220;:::o;11252:366::-;11394:3;11415:67;11479:2;11474:3;11415:67;:::i;:::-;11408:74;;11491:93;11580:3;11491:93;:::i;:::-;11609:2;11604:3;11600:12;11593:19;;11252:366;;;:::o;11624:419::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11877:9;11871:4;11867:20;11863:1;11852:9;11848:17;11841:47;11905:131;12031:4;11905:131;:::i;:::-;11897:139;;11624:419;;;:::o;12049:248::-;12189:34;12185:1;12177:6;12173:14;12166:58;12258:31;12253:2;12245:6;12241:15;12234:56;12049:248;:::o;12303:366::-;12445:3;12466:67;12530:2;12525:3;12466:67;:::i;:::-;12459:74;;12542:93;12631:3;12542:93;:::i;:::-;12660:2;12655:3;12651:12;12644:19;;12303:366;;;:::o;12675:419::-;12841:4;12879:2;12868:9;12864:18;12856:26;;12928:9;12922:4;12918:20;12914:1;12903:9;12899:17;12892:47;12956:131;13082:4;12956:131;:::i;:::-;12948:139;;12675:419;;;:::o;13100:232::-;13240:34;13236:1;13228:6;13224:14;13217:58;13309:15;13304:2;13296:6;13292:15;13285:40;13100:232;:::o;13338:366::-;13480:3;13501:67;13565:2;13560:3;13501:67;:::i;:::-;13494:74;;13577:93;13666:3;13577:93;:::i;:::-;13695:2;13690:3;13686:12;13679:19;;13338:366;;;:::o;13710:419::-;13876:4;13914:2;13903:9;13899:18;13891:26;;13963:9;13957:4;13953:20;13949:1;13938:9;13934:17;13927:47;13991:131;14117:4;13991:131;:::i;:::-;13983:139;;13710:419;;;:::o;14135:174::-;14275:26;14271:1;14263:6;14259:14;14252:50;14135:174;:::o;14315:366::-;14457:3;14478:67;14542:2;14537:3;14478:67;:::i;:::-;14471:74;;14554:93;14643:3;14554:93;:::i;:::-;14672:2;14667:3;14663:12;14656:19;;14315:366;;;:::o;14687:419::-;14853:4;14891:2;14880:9;14876:18;14868:26;;14940:9;14934:4;14930:20;14926:1;14915:9;14911:17;14904:47;14968:131;15094:4;14968:131;:::i;:::-;14960:139;;14687:419;;;:::o;15112:228::-;15252:34;15248:1;15240:6;15236:14;15229:58;15321:11;15316:2;15308:6;15304:15;15297:36;15112:228;:::o;15346:366::-;15488:3;15509:67;15573:2;15568:3;15509:67;:::i;:::-;15502:74;;15585:93;15674:3;15585:93;:::i;:::-;15703:2;15698:3;15694:12;15687:19;;15346:366;;;:::o;15718:419::-;15884:4;15922:2;15911:9;15907:18;15899:26;;15971:9;15965:4;15961:20;15957:1;15946:9;15942:17;15935:47;15999:131;16125:4;15999:131;:::i;:::-;15991:139;;15718:419;;;:::o;16143:180::-;16191:77;16188:1;16181:88;16288:4;16285:1;16278:15;16312:4;16309:1;16302:15;16329:305;16369:3;16388:20;16406:1;16388:20;:::i;:::-;16383:25;;16422:20;16440:1;16422:20;:::i;:::-;16417:25;;16576:1;16508:66;16504:74;16501:1;16498:81;16495:107;;;16582:18;;:::i;:::-;16495:107;16626:1;16623;16619:9;16612:16;;16329:305;;;;:::o;16640:224::-;16780:34;16776:1;16768:6;16764:14;16757:58;16849:7;16844:2;16836:6;16832:15;16825:32;16640:224;:::o;16870:366::-;17012:3;17033:67;17097:2;17092:3;17033:67;:::i;:::-;17026:74;;17109:93;17198:3;17109:93;:::i;:::-;17227:2;17222:3;17218:12;17211:19;;16870:366;;;:::o;17242:419::-;17408:4;17446:2;17435:9;17431:18;17423:26;;17495:9;17489:4;17485:20;17481:1;17470:9;17466:17;17459:47;17523:131;17649:4;17523:131;:::i;:::-;17515:139;;17242:419;;;:::o;17667:223::-;17807:34;17803:1;17795:6;17791:14;17784:58;17876:6;17871:2;17863:6;17859:15;17852:31;17667:223;:::o;17896:366::-;18038:3;18059:67;18123:2;18118:3;18059:67;:::i;:::-;18052:74;;18135:93;18224:3;18135:93;:::i;:::-;18253:2;18248:3;18244:12;18237:19;;17896:366;;;:::o;18268:419::-;18434:4;18472:2;18461:9;18457:18;18449:26;;18521:9;18515:4;18511:20;18507:1;18496:9;18492:17;18485:47;18549:131;18675:4;18549:131;:::i;:::-;18541:139;;18268:419;;;:::o;18693:175::-;18833:27;18829:1;18821:6;18817:14;18810:51;18693:175;:::o;18874:366::-;19016:3;19037:67;19101:2;19096:3;19037:67;:::i;:::-;19030:74;;19113:93;19202:3;19113:93;:::i;:::-;19231:2;19226:3;19222:12;19215:19;;18874:366;;;:::o;19246:419::-;19412:4;19450:2;19439:9;19435:18;19427:26;;19499:9;19493:4;19489:20;19485:1;19474:9;19470:17;19463:47;19527:131;19653:4;19527:131;:::i;:::-;19519:139;;19246:419;;;:::o;19671:237::-;19811:34;19807:1;19799:6;19795:14;19788:58;19880:20;19875:2;19867:6;19863:15;19856:45;19671:237;:::o;19914:366::-;20056:3;20077:67;20141:2;20136:3;20077:67;:::i;:::-;20070:74;;20153:93;20242:3;20153:93;:::i;:::-;20271:2;20266:3;20262:12;20255:19;;19914:366;;;:::o;20286:419::-;20452:4;20490:2;20479:9;20475:18;20467:26;;20539:9;20533:4;20529:20;20525:1;20514:9;20510:17;20503:47;20567:131;20693:4;20567:131;:::i;:::-;20559:139;;20286:419;;;:::o;20711:98::-;20762:6;20796:5;20790:12;20780:22;;20711:98;;;:::o;20815:168::-;20898:11;20932:6;20927:3;20920:19;20972:4;20967:3;20963:14;20948:29;;20815:168;;;;:::o;20989:360::-;21075:3;21103:38;21135:5;21103:38;:::i;:::-;21157:70;21220:6;21215:3;21157:70;:::i;:::-;21150:77;;21236:52;21281:6;21276:3;21269:4;21262:5;21258:16;21236:52;:::i;:::-;21313:29;21335:6;21313:29;:::i;:::-;21308:3;21304:39;21297:46;;21079:270;20989:360;;;;:::o;21355:640::-;21550:4;21588:3;21577:9;21573:19;21565:27;;21602:71;21670:1;21659:9;21655:17;21646:6;21602:71;:::i;:::-;21683:72;21751:2;21740:9;21736:18;21727:6;21683:72;:::i;:::-;21765;21833:2;21822:9;21818:18;21809:6;21765:72;:::i;:::-;21884:9;21878:4;21874:20;21869:2;21858:9;21854:18;21847:48;21912:76;21983:4;21974:6;21912:76;:::i;:::-;21904:84;;21355:640;;;;;;;:::o;22001:141::-;22057:5;22088:6;22082:13;22073:22;;22104:32;22130:5;22104:32;:::i;:::-;22001:141;;;;:::o;22148:349::-;22217:6;22266:2;22254:9;22245:7;22241:23;22237:32;22234:119;;;22272:79;;:::i;:::-;22234:119;22392:1;22417:63;22472:7;22463:6;22452:9;22448:22;22417:63;:::i;:::-;22407:73;;22363:127;22148:349;;;;:::o;22503:182::-;22643:34;22639:1;22631:6;22627:14;22620:58;22503:182;:::o;22691:366::-;22833:3;22854:67;22918:2;22913:3;22854:67;:::i;:::-;22847:74;;22930:93;23019:3;22930:93;:::i;:::-;23048:2;23043:3;23039:12;23032:19;;22691:366;;;:::o;23063:419::-;23229:4;23267:2;23256:9;23252:18;23244:26;;23316:9;23310:4;23306:20;23302:1;23291:9;23287:17;23280:47;23344:131;23470:4;23344:131;:::i;:::-;23336:139;;23063:419;;;:::o;23488:178::-;23628:30;23624:1;23616:6;23612:14;23605:54;23488:178;:::o;23672:366::-;23814:3;23835:67;23899:2;23894:3;23835:67;:::i;:::-;23828:74;;23911:93;24000:3;23911:93;:::i;:::-;24029:2;24024:3;24020:12;24013:19;;23672:366;;;:::o;24044:419::-;24210:4;24248:2;24237:9;24233:18;24225:26;;24297:9;24291:4;24287:20;24283:1;24272:9;24268:17;24261:47;24325:131;24451:4;24325:131;:::i;:::-;24317:139;;24044:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1809800","executionCost":"infinite","totalCost":"infinite"},"external":{"TOKEN_URI()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getTokenCounter()":"2526","isApprovedForAll(address,address)":"infinite","mintNft()":"infinite","name()":"infinite","ownerOf(uint256)":"3069","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"TOKEN_URI()":"78ce9035","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","mintNft()":"c2229fea","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOKEN_URI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BasicNft.sol\":\"BasicNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/BasicNft.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\ncontract BasicNft is ERC721 {\\r\\n    string public constant TOKEN_URI =\\r\\n        \\\"ipfs://bafybeig37ioir76s7mg5oobetncojcm3c3hxasyd4rvid4jqhy4gkaheg4/?filename=0-PUG.json\\\";\\r\\n    uint256 private s_tokenCounter;\\r\\n\\r\\n    constructor() ERC721(\\\"Dogie\\\", \\\"DOG\\\") {\\r\\n        s_tokenCounter = 0;\\r\\n    }\\r\\n\\r\\n    function mintNft() public returns (uint256) {\\r\\n        _safeMint(msg.sender, s_tokenCounter);\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        return s_tokenCounter;\\r\\n    }\\r\\n\\r\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\r\\n        return (TOKEN_URI);\\r\\n    }\\r\\n\\r\\n    function getTokenCounter() public view returns (uint256) {\\r\\n        return s_tokenCounter;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2e0b4aba05713ae33ded558834e0682336395b00770ac037a48f016f03446ce1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"contracts/BasicNft.sol:BasicNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1326,"contract":"contracts/BasicNft.sol:BasicNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1330,"contract":"contracts/BasicNft.sol:BasicNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1334,"contract":"contracts/BasicNft.sol:BasicNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"contracts/BasicNft.sol:BasicNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1344,"contract":"contracts/BasicNft.sol:BasicNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":4255,"contract":"contracts/BasicNft.sol:BasicNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/DynamicSvgNft.sol":{"DynamicSvgNft":{"abi":[{"inputs":[{"internalType":"address","name":"priceFeedAddress","type":"address"},{"internalType":"string","name":"lowSvg","type":"string"},{"internalType":"string","name":"highSvg","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int256","name":"highValue","type":"int256"}],"name":"CreateNft","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int256","name":"highValue","type":"int256"}],"name":"mintNft","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"s_tokenIdHighValue","outputs":[{"internalType":"int256","name":"","type":"int256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"svg","type":"string"}],"name":"svgToImageURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1361":{"entryPoint":null,"id":1361,"parameterSlots":2,"returnSlots":0},"@_4373":{"entryPoint":null,"id":4373,"parameterSlots":3,"returnSlots":0},"@encode_4183":{"entryPoint":533,"id":4183,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_4410":{"entryPoint":369,"id":4410,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1495,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1205,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1570,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":1621,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1797,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1877,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":1356,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1107,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1387,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":1775,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1786,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1974,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":2114,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":2170,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":1159,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1127,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1917,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1441,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2314,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1302,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":1927,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":2067,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":2267,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1255,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1228,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1233,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1122,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1117,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1238,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1179,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:7435:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"934:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"951:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"954:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"944:6:26"},"nodeType":"YulFunctionCall","src":"944:12:26"},"nodeType":"YulExpressionStatement","src":"944:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"845:117:26"},{"body":{"nodeType":"YulBlock","src":"1057:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1074:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1077:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1067:6:26"},"nodeType":"YulFunctionCall","src":"1067:12:26"},"nodeType":"YulExpressionStatement","src":"1067:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"968:117:26"},{"body":{"nodeType":"YulBlock","src":"1139:54:26","statements":[{"nodeType":"YulAssignment","src":"1149:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1167:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1174:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:26"},"nodeType":"YulFunctionCall","src":"1163:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1183:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1179:3:26"},"nodeType":"YulFunctionCall","src":"1179:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1159:3:26"},"nodeType":"YulFunctionCall","src":"1159:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1149:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1122:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1132:6:26","type":""}],"src":"1091:102:26"},{"body":{"nodeType":"YulBlock","src":"1227:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1244:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1247:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1237:6:26"},"nodeType":"YulFunctionCall","src":"1237:88:26"},"nodeType":"YulExpressionStatement","src":"1237:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1341:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1344:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:26"},"nodeType":"YulFunctionCall","src":"1334:15:26"},"nodeType":"YulExpressionStatement","src":"1334:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1365:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1368:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1358:6:26"},"nodeType":"YulFunctionCall","src":"1358:15:26"},"nodeType":"YulExpressionStatement","src":"1358:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"1199:180:26"},{"body":{"nodeType":"YulBlock","src":"1428:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1438:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1460:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1490:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1468:21:26"},"nodeType":"YulFunctionCall","src":"1468:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1456:3:26"},"nodeType":"YulFunctionCall","src":"1456:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"1442:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1607:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1609:16:26"},"nodeType":"YulFunctionCall","src":"1609:18:26"},"nodeType":"YulExpressionStatement","src":"1609:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1550:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"1562:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1547:2:26"},"nodeType":"YulFunctionCall","src":"1547:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1586:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1598:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1583:2:26"},"nodeType":"YulFunctionCall","src":"1583:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1544:2:26"},"nodeType":"YulFunctionCall","src":"1544:62:26"},"nodeType":"YulIf","src":"1541:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1645:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1649:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1638:6:26"},"nodeType":"YulFunctionCall","src":"1638:22:26"},"nodeType":"YulExpressionStatement","src":"1638:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1414:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"1422:4:26","type":""}],"src":"1385:281:26"},{"body":{"nodeType":"YulBlock","src":"1713:88:26","statements":[{"nodeType":"YulAssignment","src":"1723:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1733:18:26"},"nodeType":"YulFunctionCall","src":"1733:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1723:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1782:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"1790:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1762:19:26"},"nodeType":"YulFunctionCall","src":"1762:33:26"},"nodeType":"YulExpressionStatement","src":"1762:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1697:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1706:6:26","type":""}],"src":"1672:129:26"},{"body":{"nodeType":"YulBlock","src":"1874:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"1979:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1981:16:26"},"nodeType":"YulFunctionCall","src":"1981:18:26"},"nodeType":"YulExpressionStatement","src":"1981:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1951:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1959:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1948:2:26"},"nodeType":"YulFunctionCall","src":"1948:30:26"},"nodeType":"YulIf","src":"1945:56:26"},{"nodeType":"YulAssignment","src":"2011:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2041:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2019:21:26"},"nodeType":"YulFunctionCall","src":"2019:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2011:4:26"}]},{"nodeType":"YulAssignment","src":"2085:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2097:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2093:3:26"},"nodeType":"YulFunctionCall","src":"2093:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"2085:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1858:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1869:4:26","type":""}],"src":"1807:308:26"},{"body":{"nodeType":"YulBlock","src":"2170:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2180:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2189:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2184:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2249:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2274:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2279:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2270:3:26"},"nodeType":"YulFunctionCall","src":"2270:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2298:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:26"},"nodeType":"YulFunctionCall","src":"2289:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:26"},"nodeType":"YulFunctionCall","src":"2283:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2263:6:26"},"nodeType":"YulFunctionCall","src":"2263:39:26"},"nodeType":"YulExpressionStatement","src":"2263:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2210:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2213:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2207:2:26"},"nodeType":"YulFunctionCall","src":"2207:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2221:19:26","statements":[{"nodeType":"YulAssignment","src":"2223:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2232:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"2235:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:26"},"nodeType":"YulFunctionCall","src":"2228:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2223:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2203:3:26","statements":[]},"src":"2199:113:26"},{"body":{"nodeType":"YulBlock","src":"2346:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2396:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2401:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2392:3:26"},"nodeType":"YulFunctionCall","src":"2392:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2410:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2385:6:26"},"nodeType":"YulFunctionCall","src":"2385:27:26"},"nodeType":"YulExpressionStatement","src":"2385:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2327:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2330:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2324:2:26"},"nodeType":"YulFunctionCall","src":"2324:13:26"},"nodeType":"YulIf","src":"2321:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2152:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2157:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2162:6:26","type":""}],"src":"2121:307:26"},{"body":{"nodeType":"YulBlock","src":"2529:326:26","statements":[{"nodeType":"YulAssignment","src":"2539:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2606:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2564:41:26"},"nodeType":"YulFunctionCall","src":"2564:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2548:15:26"},"nodeType":"YulFunctionCall","src":"2548:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2539:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2630:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"2637:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2623:6:26"},"nodeType":"YulFunctionCall","src":"2623:21:26"},"nodeType":"YulExpressionStatement","src":"2623:21:26"},{"nodeType":"YulVariableDeclaration","src":"2653:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2668:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2675:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:26"},"nodeType":"YulFunctionCall","src":"2664:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2657:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2718:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2720:77:26"},"nodeType":"YulFunctionCall","src":"2720:79:26"},"nodeType":"YulExpressionStatement","src":"2720:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2699:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2704:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2695:3:26"},"nodeType":"YulFunctionCall","src":"2695:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"2713:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2692:2:26"},"nodeType":"YulFunctionCall","src":"2692:25:26"},"nodeType":"YulIf","src":"2689:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2832:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"2837:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2842:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2810:21:26"},"nodeType":"YulFunctionCall","src":"2810:39:26"},"nodeType":"YulExpressionStatement","src":"2810:39:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2502:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2507:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2515:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2523:5:26","type":""}],"src":"2434:421:26"},{"body":{"nodeType":"YulBlock","src":"2948:282:26","statements":[{"body":{"nodeType":"YulBlock","src":"2997:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2999:77:26"},"nodeType":"YulFunctionCall","src":"2999:79:26"},"nodeType":"YulExpressionStatement","src":"2999:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2976:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2984:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2972:3:26"},"nodeType":"YulFunctionCall","src":"2972:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"2991:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2968:3:26"},"nodeType":"YulFunctionCall","src":"2968:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2961:6:26"},"nodeType":"YulFunctionCall","src":"2961:35:26"},"nodeType":"YulIf","src":"2958:122:26"},{"nodeType":"YulVariableDeclaration","src":"3089:27:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3109:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3103:5:26"},"nodeType":"YulFunctionCall","src":"3103:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3093:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3125:99:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3197:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3205:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3193:3:26"},"nodeType":"YulFunctionCall","src":"3193:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"3212:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"3220:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3134:58:26"},"nodeType":"YulFunctionCall","src":"3134:90:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"3125:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2926:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2934:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2942:5:26","type":""}],"src":"2875:355:26"},{"body":{"nodeType":"YulBlock","src":"3367:878:26","statements":[{"body":{"nodeType":"YulBlock","src":"3413:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3415:77:26"},"nodeType":"YulFunctionCall","src":"3415:79:26"},"nodeType":"YulExpressionStatement","src":"3415:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3384:3:26"},"nodeType":"YulFunctionCall","src":"3384:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:26"},"nodeType":"YulFunctionCall","src":"3380:32:26"},"nodeType":"YulIf","src":"3377:119:26"},{"nodeType":"YulBlock","src":"3506:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3535:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3550:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3596:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3607:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3592:3:26"},"nodeType":"YulFunctionCall","src":"3592:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3616:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"3560:31:26"},"nodeType":"YulFunctionCall","src":"3560:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3550:6:26"}]}]},{"nodeType":"YulBlock","src":"3644:292:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3659:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3683:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3694:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3679:3:26"},"nodeType":"YulFunctionCall","src":"3679:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3673:5:26"},"nodeType":"YulFunctionCall","src":"3673:25:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3663:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3745:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3747:77:26"},"nodeType":"YulFunctionCall","src":"3747:79:26"},"nodeType":"YulExpressionStatement","src":"3747:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3717:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3725:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3714:2:26"},"nodeType":"YulFunctionCall","src":"3714:30:26"},"nodeType":"YulIf","src":"3711:117:26"},{"nodeType":"YulAssignment","src":"3842:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3898:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3909:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3894:3:26"},"nodeType":"YulFunctionCall","src":"3894:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3918:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3852:41:26"},"nodeType":"YulFunctionCall","src":"3852:74:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3842:6:26"}]}]},{"nodeType":"YulBlock","src":"3946:292:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3961:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3985:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3996:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3981:3:26"},"nodeType":"YulFunctionCall","src":"3981:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3975:5:26"},"nodeType":"YulFunctionCall","src":"3975:25:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3965:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4047:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"4049:77:26"},"nodeType":"YulFunctionCall","src":"4049:79:26"},"nodeType":"YulExpressionStatement","src":"4049:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4019:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4027:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4016:2:26"},"nodeType":"YulFunctionCall","src":"4016:30:26"},"nodeType":"YulIf","src":"4013:117:26"},{"nodeType":"YulAssignment","src":"4144:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:26"},"nodeType":"YulFunctionCall","src":"4196:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4154:41:26"},"nodeType":"YulFunctionCall","src":"4154:74:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4144:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3321:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3332:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3344:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3352:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3360:6:26","type":""}],"src":"3236:1009:26"},{"body":{"nodeType":"YulBlock","src":"4310:40:26","statements":[{"nodeType":"YulAssignment","src":"4321:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4337:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4331:5:26"},"nodeType":"YulFunctionCall","src":"4331:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4321:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4293:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4303:6:26","type":""}],"src":"4251:99:26"},{"body":{"nodeType":"YulBlock","src":"4470:34:26","statements":[{"nodeType":"YulAssignment","src":"4480:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"4495:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4480:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4442:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4447:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4458:11:26","type":""}],"src":"4356:148:26"},{"body":{"nodeType":"YulBlock","src":"4620:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4630:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4677:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4644:32:26"},"nodeType":"YulFunctionCall","src":"4644:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4634:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4692:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4776:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4781:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"4699:76:26"},"nodeType":"YulFunctionCall","src":"4699:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4692:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4823:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4830:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4819:3:26"},"nodeType":"YulFunctionCall","src":"4819:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"4837:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4842:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4797:21:26"},"nodeType":"YulFunctionCall","src":"4797:52:26"},"nodeType":"YulExpressionStatement","src":"4797:52:26"},{"nodeType":"YulAssignment","src":"4858:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4869:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4874:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4865:3:26"},"nodeType":"YulFunctionCall","src":"4865:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4858:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4601:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4608:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4616:3:26","type":""}],"src":"4510:377:26"},{"body":{"nodeType":"YulBlock","src":"5029:139:26","statements":[{"nodeType":"YulAssignment","src":"5040:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5129:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"5138:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5047:81:26"},"nodeType":"YulFunctionCall","src":"5047:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5040:3:26"}]},{"nodeType":"YulAssignment","src":"5152:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"5159:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5152:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5008:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5014:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5025:3:26","type":""}],"src":"4893:275:26"},{"body":{"nodeType":"YulBlock","src":"5358:251:26","statements":[{"nodeType":"YulAssignment","src":"5369:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5458:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"5467:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5376:81:26"},"nodeType":"YulFunctionCall","src":"5376:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5369:3:26"}]},{"nodeType":"YulAssignment","src":"5481:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5570:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"5579:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5488:81:26"},"nodeType":"YulFunctionCall","src":"5488:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5481:3:26"}]},{"nodeType":"YulAssignment","src":"5593:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"5600:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"5593:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"5329:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5335:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5343:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"5354:3:26","type":""}],"src":"5174:435:26"},{"body":{"nodeType":"YulBlock","src":"5660:32:26","statements":[{"nodeType":"YulAssignment","src":"5670:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5681:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5670:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5642:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5652:7:26","type":""}],"src":"5615:77:26"},{"body":{"nodeType":"YulBlock","src":"5726:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5743:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5746:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5736:6:26"},"nodeType":"YulFunctionCall","src":"5736:88:26"},"nodeType":"YulExpressionStatement","src":"5736:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5840:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5843:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5833:6:26"},"nodeType":"YulFunctionCall","src":"5833:15:26"},"nodeType":"YulExpressionStatement","src":"5833:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5864:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5867:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5857:6:26"},"nodeType":"YulFunctionCall","src":"5857:15:26"},"nodeType":"YulExpressionStatement","src":"5857:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"5698:180:26"},{"body":{"nodeType":"YulBlock","src":"5928:261:26","statements":[{"nodeType":"YulAssignment","src":"5938:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"5961:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5943:17:26"},"nodeType":"YulFunctionCall","src":"5943:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"5938:1:26"}]},{"nodeType":"YulAssignment","src":"5972:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"5995:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5977:17:26"},"nodeType":"YulFunctionCall","src":"5977:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"5972:1:26"}]},{"body":{"nodeType":"YulBlock","src":"6135:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6137:16:26"},"nodeType":"YulFunctionCall","src":"6137:18:26"},"nodeType":"YulExpressionStatement","src":"6137:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6056:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6063:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6131:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6059:3:26"},"nodeType":"YulFunctionCall","src":"6059:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6053:2:26"},"nodeType":"YulFunctionCall","src":"6053:81:26"},"nodeType":"YulIf","src":"6050:107:26"},{"nodeType":"YulAssignment","src":"6167:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6178:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"6181:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6174:3:26"},"nodeType":"YulFunctionCall","src":"6174:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6167:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"5915:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"5918:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"5924:3:26","type":""}],"src":"5884:305:26"},{"body":{"nodeType":"YulBlock","src":"6223:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6240:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6243:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6233:6:26"},"nodeType":"YulFunctionCall","src":"6233:88:26"},"nodeType":"YulExpressionStatement","src":"6233:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6337:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6340:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6330:6:26"},"nodeType":"YulFunctionCall","src":"6330:15:26"},"nodeType":"YulExpressionStatement","src":"6330:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6361:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6364:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6354:6:26"},"nodeType":"YulFunctionCall","src":"6354:15:26"},"nodeType":"YulExpressionStatement","src":"6354:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"6195:180:26"},{"body":{"nodeType":"YulBlock","src":"6423:143:26","statements":[{"nodeType":"YulAssignment","src":"6433:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6456:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6438:17:26"},"nodeType":"YulFunctionCall","src":"6438:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6433:1:26"}]},{"nodeType":"YulAssignment","src":"6467:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6490:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6472:17:26"},"nodeType":"YulFunctionCall","src":"6472:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6467:1:26"}]},{"body":{"nodeType":"YulBlock","src":"6514:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"6516:16:26"},"nodeType":"YulFunctionCall","src":"6516:18:26"},"nodeType":"YulExpressionStatement","src":"6516:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6511:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6504:6:26"},"nodeType":"YulFunctionCall","src":"6504:9:26"},"nodeType":"YulIf","src":"6501:35:26"},{"nodeType":"YulAssignment","src":"6546:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6555:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"6558:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6551:3:26"},"nodeType":"YulFunctionCall","src":"6551:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6546:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6412:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"6415:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"6421:1:26","type":""}],"src":"6381:185:26"},{"body":{"nodeType":"YulBlock","src":"6620:300:26","statements":[{"nodeType":"YulAssignment","src":"6630:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6653:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6635:17:26"},"nodeType":"YulFunctionCall","src":"6635:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6630:1:26"}]},{"nodeType":"YulAssignment","src":"6664:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6687:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6669:17:26"},"nodeType":"YulFunctionCall","src":"6669:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6664:1:26"}]},{"body":{"nodeType":"YulBlock","src":"6862:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6864:16:26"},"nodeType":"YulFunctionCall","src":"6864:18:26"},"nodeType":"YulExpressionStatement","src":"6864:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6774:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6767:6:26"},"nodeType":"YulFunctionCall","src":"6767:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6760:6:26"},"nodeType":"YulFunctionCall","src":"6760:17:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6782:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6789:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"6857:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6785:3:26"},"nodeType":"YulFunctionCall","src":"6785:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6779:2:26"},"nodeType":"YulFunctionCall","src":"6779:81:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6756:3:26"},"nodeType":"YulFunctionCall","src":"6756:105:26"},"nodeType":"YulIf","src":"6753:131:26"},{"nodeType":"YulAssignment","src":"6894:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6909:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"6912:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6905:3:26"},"nodeType":"YulFunctionCall","src":"6905:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"6894:7:26"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6603:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"6606:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"6612:7:26","type":""}],"src":"6572:348:26"},{"body":{"nodeType":"YulBlock","src":"6954:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6971:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6974:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6964:6:26"},"nodeType":"YulFunctionCall","src":"6964:88:26"},"nodeType":"YulExpressionStatement","src":"6964:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7068:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7071:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7061:6:26"},"nodeType":"YulFunctionCall","src":"7061:15:26"},"nodeType":"YulExpressionStatement","src":"7061:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7092:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7095:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7085:6:26"},"nodeType":"YulFunctionCall","src":"7085:15:26"},"nodeType":"YulExpressionStatement","src":"7085:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6926:180:26"},{"body":{"nodeType":"YulBlock","src":"7163:269:26","statements":[{"nodeType":"YulAssignment","src":"7173:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7187:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7193:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7183:3:26"},"nodeType":"YulFunctionCall","src":"7183:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7173:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7204:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7234:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7240:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7230:3:26"},"nodeType":"YulFunctionCall","src":"7230:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"7208:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7281:51:26","statements":[{"nodeType":"YulAssignment","src":"7295:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7309:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7317:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7305:3:26"},"nodeType":"YulFunctionCall","src":"7305:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7295:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7261:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7254:6:26"},"nodeType":"YulFunctionCall","src":"7254:26:26"},"nodeType":"YulIf","src":"7251:81:26"},{"body":{"nodeType":"YulBlock","src":"7384:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"7398:16:26"},"nodeType":"YulFunctionCall","src":"7398:18:26"},"nodeType":"YulExpressionStatement","src":"7398:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"7348:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7371:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7379:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7368:2:26"},"nodeType":"YulFunctionCall","src":"7368:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"7345:2:26"},"nodeType":"YulFunctionCall","src":"7345:38:26"},"nodeType":"YulIf","src":"7342:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7147:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7156:6:26","type":""}],"src":"7112:320:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3805 CODESIZE SUB DUP1 PUSH3 0x3805 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x655 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44796E616D696320535647204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44534E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xBB SWAP3 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xD4 SWAP3 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0xF0 DUP3 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x107 SWAP3 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST POP PUSH3 0x119 DUP2 PUSH3 0x171 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x8 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x130 SWAP3 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP POP POP PUSH3 0x940 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH3 0x1E6 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1C6 SWAP2 SWAP1 PUSH3 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH3 0x215 PUSH1 0x20 SHL PUSH3 0xD44 OR PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH3 0x1FD SWAP3 SWAP2 SWAP1 PUSH3 0x755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH3 0x23A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH3 0x39E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x37C5 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH3 0x26C SWAP2 SWAP1 PUSH3 0x7B6 JUMP JUMPDEST PUSH3 0x278 SWAP2 SWAP1 PUSH3 0x842 JUMP JUMPDEST PUSH1 0x4 PUSH3 0x286 SWAP2 SWAP1 PUSH3 0x87A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH3 0x299 SWAP2 SWAP1 PUSH3 0x7B6 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2B5 JUMPI PUSH3 0x2B4 PUSH3 0x4E7 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH3 0x2E8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH3 0x359 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH3 0x2FC JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH3 0x376 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x387 JUMPI PUSH3 0x392 JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH3 0x392 JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x3B1 SWAP1 PUSH3 0x90A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3D5 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x421 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3F0 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x421 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x421 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x420 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x403 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x430 SWAP2 SWAP1 PUSH3 0x434 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x44F JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x435 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x494 DUP3 PUSH3 0x467 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4A6 DUP2 PUSH3 0x487 JUMP JUMPDEST DUP2 EQ PUSH3 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4C6 DUP2 PUSH3 0x49B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x521 DUP3 PUSH3 0x4D6 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x543 JUMPI PUSH3 0x542 PUSH3 0x4E7 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x558 PUSH3 0x453 JUMP JUMPDEST SWAP1 POP PUSH3 0x566 DUP3 DUP3 PUSH3 0x516 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x589 JUMPI PUSH3 0x588 PUSH3 0x4E7 JUMP JUMPDEST JUMPDEST PUSH3 0x594 DUP3 PUSH3 0x4D6 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5C1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5A4 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x5D1 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EE PUSH3 0x5E8 DUP5 PUSH3 0x56B JUMP JUMPDEST PUSH3 0x54C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x60D JUMPI PUSH3 0x60C PUSH3 0x4D1 JUMP JUMPDEST JUMPDEST PUSH3 0x61A DUP5 DUP3 DUP6 PUSH3 0x5A1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x63A JUMPI PUSH3 0x639 PUSH3 0x4CC JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x64C DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5D7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x671 JUMPI PUSH3 0x670 PUSH3 0x45D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x681 DUP7 DUP3 DUP8 ADD PUSH3 0x4B5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6A5 JUMPI PUSH3 0x6A4 PUSH3 0x462 JUMP JUMPDEST JUMPDEST PUSH3 0x6B3 DUP7 DUP3 DUP8 ADD PUSH3 0x622 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6D7 JUMPI PUSH3 0x6D6 PUSH3 0x462 JUMP JUMPDEST JUMPDEST PUSH3 0x6E5 DUP7 DUP3 DUP8 ADD PUSH3 0x622 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x712 DUP3 PUSH3 0x6EF JUMP JUMPDEST PUSH3 0x71E DUP2 DUP6 PUSH3 0x6FA JUMP JUMPDEST SWAP4 POP PUSH3 0x730 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH3 0x5A1 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x74A DUP3 DUP5 PUSH3 0x705 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x763 DUP3 DUP6 PUSH3 0x705 JUMP JUMPDEST SWAP2 POP PUSH3 0x771 DUP3 DUP5 PUSH3 0x705 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x7C3 DUP3 PUSH3 0x77D JUMP JUMPDEST SWAP2 POP PUSH3 0x7D0 DUP4 PUSH3 0x77D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH3 0x808 JUMPI PUSH3 0x807 PUSH3 0x787 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x84F DUP3 PUSH3 0x77D JUMP JUMPDEST SWAP2 POP PUSH3 0x85C DUP4 PUSH3 0x77D JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0x86F JUMPI PUSH3 0x86E PUSH3 0x813 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x887 DUP3 PUSH3 0x77D JUMP JUMPDEST SWAP2 POP PUSH3 0x894 DUP4 PUSH3 0x77D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x8D0 JUMPI PUSH3 0x8CF PUSH3 0x787 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x923 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x93A JUMPI PUSH3 0x939 PUSH3 0x8DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH2 0x2E66 PUSH3 0x95F PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0xA5D ADD MSTORE PUSH2 0x2E66 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE12F64B5 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x339 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP3 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BE PUSH2 0xF72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5ED JUMPI POP PUSH2 0x5EC DUP2 PUSH2 0x5E7 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x2342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP4 DUP4 PUSH2 0xF7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x661 CALLER PUSH1 0x6 SLOAD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x3431855AA1E5D3C46426C18BF530200C661B04A7F8C56945FBC40A94980ED0C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BE PUSH2 0xF72 JUMP JUMPDEST DUP3 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP4 DUP4 DUP4 PUSH2 0x10E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x779 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD44 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D2 DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x940 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x962 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x9A2 PUSH2 0xF72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x141D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x9B8 PUSH2 0xF72 JUMP JUMPDEST DUP4 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 DUP5 DUP5 DUP5 DUP5 PUSH2 0x158A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x26C6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB0E SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB3A SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xC36 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xBB5 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE1 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xC3E PUSH2 0x1627 JUMP JUMPDEST PUSH2 0xC6F PUSH2 0xC49 PUSH2 0x44B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC5B SWAP3 SWAP2 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC80 SWAP3 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DF1 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0xDA0 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x29B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDD6 JUMPI PUSH2 0xDD5 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE08 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xEA1 JUMPI PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFED DUP4 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x104D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1664 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x105D DUP4 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x109F JUMPI POP PUSH2 0x109E DUP2 DUP6 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x10DD JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C5 DUP5 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1106 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16BF JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F9 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13DB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x157D SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1595 DUP5 DUP5 DUP5 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x15A1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D7 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1608 DUP4 PUSH2 0x13E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x166E DUP4 DUP4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x167B PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B1 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A80 JUMP JUMPDEST ISZERO PUSH2 0x1855 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1715 PUSH2 0xF72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1737 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1782 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1805 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F4 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x185A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C9 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1912 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0x1932 DUP2 PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x1972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1969 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A7C PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEC DUP2 PUSH2 0x1AB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B09 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B25 JUMPI PUSH2 0x1B24 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B91 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDD DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1BE7 DUP2 DUP6 PUSH2 0x1B7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1C00 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C25 DUP2 DUP5 PUSH2 0x1BD2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5D DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP3 PUSH2 0x1C90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCB DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF5 DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D12 DUP2 PUSH2 0x1CEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D3D DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4E DUP6 DUP3 DUP7 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6B DUP2 PUSH2 0x1D58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D88 DUP2 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA4 JUMPI PUSH2 0x1DA3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 DUP7 DUP3 DUP8 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DF3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E04 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E50 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8E DUP3 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB7 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 PUSH2 0x1EE1 DUP5 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x1E13 JUMP JUMPDEST JUMPDEST PUSH2 0x1F0D DUP5 DUP3 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x1AB2 JUMP JUMPDEST JUMPDEST PUSH2 0x1F83 DUP5 DUP3 DUP6 ADD PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA2 JUMPI PUSH2 0x1FA1 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2009 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2034 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2045 DUP6 DUP3 DUP7 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x2073 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH2 0x208E DUP5 PUSH2 0x204F JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1E13 JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP5 DUP3 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D7 JUMPI PUSH2 0x20D6 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2080 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x210A JUMPI PUSH2 0x2109 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP8 DUP3 DUP9 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2129 DUP8 DUP3 DUP9 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x213A DUP8 DUP3 DUP9 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x1AB2 JUMP JUMPDEST JUMPDEST PUSH2 0x2167 DUP8 DUP3 DUP9 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x1D58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2224 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x21DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229A PUSH1 0x21 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x22A5 DUP3 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22C9 DUP2 PUSH2 0x228D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232C PUSH1 0x3D DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2337 DUP3 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x231F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239C DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x23A7 DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2362 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 PUSH1 0x2D DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP3 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2472 DUP2 PUSH2 0x2436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x2499 DUP2 DUP6 PUSH2 0x2479 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C1 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D8 DUP3 DUP6 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E4 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x18 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x29 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x1F DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2679 DUP2 PUSH2 0x265A JUMP JUMPDEST DUP2 EQ PUSH2 0x2684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2696 DUP2 PUSH2 0x2670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26AB DUP2 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26C0 DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x26E2 JUMPI PUSH2 0x26E1 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F0 DUP9 DUP3 DUP10 ADD PUSH2 0x2687 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2701 DUP9 DUP3 DUP10 ADD PUSH2 0x269C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2712 DUP9 DUP3 DUP10 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2723 DUP9 DUP3 DUP10 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2734 DUP9 DUP3 DUP10 ADD PUSH2 0x2687 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2777 PUSH1 0x9 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x2782 DUP3 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280F PUSH1 0x44 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x281A DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A7 PUSH1 0x43 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B2 DUP3 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F3 PUSH1 0x2 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP3 PUSH2 0x276A JUMP JUMPDEST SWAP2 POP PUSH2 0x2920 DUP3 DUP6 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x292B DUP3 PUSH2 0x2802 JUMP JUMPDEST SWAP2 POP PUSH2 0x2936 DUP3 PUSH2 0x289A JUMP JUMPDEST SWAP2 POP PUSH2 0x2942 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x294D DUP3 PUSH2 0x28E6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2993 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x299E DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29AE JUMPI PUSH2 0x29AD PUSH2 0x2959 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C4 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29CF DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A08 JUMPI PUSH2 0x2A07 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6F PUSH1 0x25 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9E DUP2 PUSH2 0x2A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B01 PUSH1 0x24 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B30 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x19 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFF PUSH1 0x32 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C2E DUP2 PUSH2 0x2BF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C DUP3 PUSH2 0x2C35 JUMP JUMPDEST PUSH2 0x2C66 DUP2 DUP6 PUSH2 0x2C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C76 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x2C7F DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C9F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2CAC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2CCB DUP2 DUP5 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CE5 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D01 JUMPI PUSH2 0x2D00 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D0F DUP5 DUP3 DUP6 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4E PUSH1 0x20 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D59 DUP3 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7D DUP2 PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBA PUSH1 0x1C DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC5 DUP3 PUSH2 0x2D84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DE9 DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xD2 PUSH9 0x64B25DCB397130CD43 0x24 0xA9 RETURN MSIZE 0xDE PUSH9 0xFCDA93524EE5A887E4 0xA6 NOT SELFBALANCE RETURN CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2F00000000000000 ","sourceMap":"234:2621:23:-:0;;;653:349;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;831:1:23::1;814:14;:18;;;;859:21;873:6;859:13;;;:21;;:::i;:::-;843:13;:37;;;;;;;;;;;;:::i;:::-;;908:22;922:7;908:13;;;:22;;:::i;:::-;891:14;:39;;;;;;;;;;;;:::i;:::-;;977:16;941:53;;;;;;;;;;::::0;::::1;653:349:::0;;;234:2621;;1010:313;1073:13;1099:21;:52;;;;;;;;;;;;;;;;;;;1162:30;1195:51;1239:3;1222:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1195:13;;;;;:51;;:::i;:::-;1162:84;;1288:7;1297:16;1271:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1257:58;;;;1010:313;;;:::o;777:1861:21:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;234:2621:23:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:117::-;954:1;951;944:12;968:117;1077:1;1074;1067:12;1091:102;1132:6;1183:2;1179:7;1174:2;1167:5;1163:14;1159:28;1149:38;;1091:102;;;:::o;1199:180::-;1247:77;1244:1;1237:88;1344:4;1341:1;1334:15;1368:4;1365:1;1358:15;1385:281;1468:27;1490:4;1468:27;:::i;:::-;1460:6;1456:40;1598:6;1586:10;1583:22;1562:18;1550:10;1547:34;1544:62;1541:88;;;1609:18;;:::i;:::-;1541:88;1649:10;1645:2;1638:22;1428:238;1385:281;;:::o;1672:129::-;1706:6;1733:20;;:::i;:::-;1723:30;;1762:33;1790:4;1782:6;1762:33;:::i;:::-;1672:129;;;:::o;1807:308::-;1869:4;1959:18;1951:6;1948:30;1945:56;;;1981:18;;:::i;:::-;1945:56;2019:29;2041:6;2019:29;:::i;:::-;2011:37;;2103:4;2097;2093:15;2085:23;;1807:308;;;:::o;2121:307::-;2189:1;2199:113;2213:6;2210:1;2207:13;2199:113;;;2298:1;2293:3;2289:11;2283:18;2279:1;2274:3;2270:11;2263:39;2235:2;2232:1;2228:10;2223:15;;2199:113;;;2330:6;2327:1;2324:13;2321:101;;;2410:1;2401:6;2396:3;2392:16;2385:27;2321:101;2170:258;2121:307;;;:::o;2434:421::-;2523:5;2548:66;2564:49;2606:6;2564:49;:::i;:::-;2548:66;:::i;:::-;2539:75;;2637:6;2630:5;2623:21;2675:4;2668:5;2664:16;2713:3;2704:6;2699:3;2695:16;2692:25;2689:112;;;2720:79;;:::i;:::-;2689:112;2810:39;2842:6;2837:3;2832;2810:39;:::i;:::-;2529:326;2434:421;;;;;:::o;2875:355::-;2942:5;2991:3;2984:4;2976:6;2972:17;2968:27;2958:122;;2999:79;;:::i;:::-;2958:122;3109:6;3103:13;3134:90;3220:3;3212:6;3205:4;3197:6;3193:17;3134:90;:::i;:::-;3125:99;;2948:282;2875:355;;;;:::o;3236:1009::-;3344:6;3352;3360;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;;:::i;:::-;3377:119;3535:1;3560:64;3616:7;3607:6;3596:9;3592:22;3560:64;:::i;:::-;3550:74;;3506:128;3694:2;3683:9;3679:18;3673:25;3725:18;3717:6;3714:30;3711:117;;;3747:79;;:::i;:::-;3711:117;3852:74;3918:7;3909:6;3898:9;3894:22;3852:74;:::i;:::-;3842:84;;3644:292;3996:2;3985:9;3981:18;3975:25;4027:18;4019:6;4016:30;4013:117;;;4049:79;;:::i;:::-;4013:117;4154:74;4220:7;4211:6;4200:9;4196:22;4154:74;:::i;:::-;4144:84;;3946:292;3236:1009;;;;;:::o;4251:99::-;4303:6;4337:5;4331:12;4321:22;;4251:99;;;:::o;4356:148::-;4458:11;4495:3;4480:18;;4356:148;;;;:::o;4510:377::-;4616:3;4644:39;4677:5;4644:39;:::i;:::-;4699:89;4781:6;4776:3;4699:89;:::i;:::-;4692:96;;4797:52;4842:6;4837:3;4830:4;4823:5;4819:16;4797:52;:::i;:::-;4874:6;4869:3;4865:16;4858:23;;4620:267;4510:377;;;;:::o;4893:275::-;5025:3;5047:95;5138:3;5129:6;5047:95;:::i;:::-;5040:102;;5159:3;5152:10;;4893:275;;;;:::o;5174:435::-;5354:3;5376:95;5467:3;5458:6;5376:95;:::i;:::-;5369:102;;5488:95;5579:3;5570:6;5488:95;:::i;:::-;5481:102;;5600:3;5593:10;;5174:435;;;;;:::o;5615:77::-;5652:7;5681:5;5670:16;;5615:77;;;:::o;5698:180::-;5746:77;5743:1;5736:88;5843:4;5840:1;5833:15;5867:4;5864:1;5857:15;5884:305;5924:3;5943:20;5961:1;5943:20;:::i;:::-;5938:25;;5977:20;5995:1;5977:20;:::i;:::-;5972:25;;6131:1;6063:66;6059:74;6056:1;6053:81;6050:107;;;6137:18;;:::i;:::-;6050:107;6181:1;6178;6174:9;6167:16;;5884:305;;;;:::o;6195:180::-;6243:77;6240:1;6233:88;6340:4;6337:1;6330:15;6364:4;6361:1;6354:15;6381:185;6421:1;6438:20;6456:1;6438:20;:::i;:::-;6433:25;;6472:20;6490:1;6472:20;:::i;:::-;6467:25;;6511:1;6501:35;;6516:18;;:::i;:::-;6501:35;6558:1;6555;6551:9;6546:14;;6381:185;;;;:::o;6572:348::-;6612:7;6635:20;6653:1;6635:20;:::i;:::-;6630:25;;6669:20;6687:1;6669:20;:::i;:::-;6664:25;;6857:1;6789:66;6785:74;6782:1;6779:81;6774:1;6767:9;6760:17;6756:105;6753:131;;;6864:18;;:::i;:::-;6753:131;6912:1;6909;6905:9;6894:20;;6572:348;;;;:::o;6926:180::-;6974:77;6971:1;6964:88;7071:4;7068:1;7061:15;7095:4;7092:1;7085:15;7112:320;7156:6;7193:1;7187:4;7183:12;7173:22;;7240:1;7234:4;7230:12;7261:18;7251:81;;7317:4;7309:6;7305:17;7295:27;;7251:81;7379:2;7371:6;7368:14;7348:18;7345:38;7342:84;;;7398:18;;:::i;:::-;7342:84;7163:269;7112:320;;;:::o;234:2621:23:-;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2209":{"entryPoint":5829,"id":2209,"parameterSlots":4,"returnSlots":0},"@_approve_2075":{"entryPoint":3962,"id":2075,"parameterSlots":2,"returnSlots":0},"@_baseURI_4448":{"entryPoint":5671,"id":4448,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2196":{"entryPoint":5823,"id":2196,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2183":{"entryPoint":5835,"id":2183,"parameterSlots":4,"returnSlots":1},"@_exists_1744":{"entryPoint":5606,"id":1744,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1778":{"entryPoint":4177,"id":1778,"parameterSlots":2,"returnSlots":1},"@_mint_1899":{"entryPoint":6242,"id":1899,"parameterSlots":2,"returnSlots":0},"@_msgSender_2884":{"entryPoint":3954,"id":2884,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1726":{"entryPoint":5088,"id":1726,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2121":{"entryPoint":3879,"id":2121,"parameterSlots":1,"returnSlots":0},"@_safeMint_1793":{"entryPoint":4147,"id":1793,"parameterSlots":2,"returnSlots":0},"@_safeMint_1822":{"entryPoint":5732,"id":1822,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1713":{"entryPoint":5514,"id":1713,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2107":{"entryPoint":5149,"id":2107,"parameterSlots":3,"returnSlots":0},"@_transfer_2051":{"entryPoint":4326,"id":2051,"parameterSlots":3,"returnSlots":0},"@approve_1555":{"entryPoint":1315,"id":1555,"parameterSlots":2,"returnSlots":0},"@balanceOf_1416":{"entryPoint":2125,"id":1416,"parameterSlots":1,"returnSlots":1},"@encode_4183":{"entryPoint":3396,"id":4183,"parameterSlots":1,"returnSlots":1},"@getApproved_1573":{"entryPoint":1245,"id":1573,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_1608":{"entryPoint":3248,"id":1608,"parameterSlots":2,"returnSlots":1},"@isContract_2560":{"entryPoint":6784,"id":2560,"parameterSlots":1,"returnSlots":1},"@mintNft_4439":{"entryPoint":1595,"id":4439,"parameterSlots":1,"returnSlots":0},"@name_1454":{"entryPoint":1099,"id":1454,"parameterSlots":0,"returnSlots":1},"@ownerOf_1444":{"entryPoint":1990,"id":1444,"parameterSlots":1,"returnSlots":1},"@s_tokenIdHighValue_4331":{"entryPoint":3224,"id":4331,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1654":{"entryPoint":1958,"id":1654,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1684":{"entryPoint":2477,"id":1684,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1590":{"entryPoint":2455,"id":1590,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1392":{"entryPoint":873,"id":1392,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3146":{"entryPoint":3773,"id":3146,"parameterSlots":1,"returnSlots":1},"@svgToImageURI_4410":{"entryPoint":1811,"id":4410,"parameterSlots":1,"returnSlots":1},"@symbol_1464":{"entryPoint":2309,"id":1464,"parameterSlots":0,"returnSlots":1},"@tokenURI_4510":{"entryPoint":2575,"id":4510,"parameterSlots":1,"returnSlots":1},"@transferFrom_1635":{"entryPoint":1715,"id":1635,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8320,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":7891,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7427,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":11478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8386,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256":{"entryPoint":7545,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_int256_fromMemory":{"entryPoint":9884,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":7957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7246,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":9905,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint80_fromMemory":{"entryPoint":9863,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8076,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8605,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7611,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8432,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8207,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7448,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":11499,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_int256":{"entryPoint":7566,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":8003,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7267,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory":{"entryPoint":9926,"id":null,"parameterSlots":2,"returnSlots":5},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7362,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6984,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":11345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_int256_to_t_int256_fromStack":{"entryPoint":8563,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7122,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9348,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":9270,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":11250,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":10850,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":11693,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":10996,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":11104,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":9643,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10242,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10470,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":11585,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":9497,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":8845,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":8991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack":{"entryPoint":9751,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":10394,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8121,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9397,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":9420,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10505,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7377,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":11402,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed":{"entryPoint":8578,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7179,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9305,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11285,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11728,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11031,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11139,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9678,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11620,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9532,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8880,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9026,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9786,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8136,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7800,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6819,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8271,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":7827,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":11317,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7026,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":11328,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7037,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":9337,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":9105,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10632,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10681,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7344,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6972,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6839,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_int256":{"entryPoint":7512,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7312,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7213,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint80":{"entryPoint":9818,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":7876,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":7054,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8716,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7751,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x11":{"entryPoint":9058,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":10585,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8669,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7704,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7694,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7699,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6834,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6829,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7105,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":9191,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832":{"entryPoint":10049,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":11171,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":10771,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":11652,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":10917,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":11063,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":9564,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574":{"entryPoint":10125,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475":{"entryPoint":10429,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":11544,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":9456,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":8766,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":8912,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30":{"entryPoint":9710,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b":{"entryPoint":10277,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7404,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8163,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6883,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_int256":{"entryPoint":7522,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7223,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint80":{"entryPoint":9840,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:36118:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1847:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:26"},"nodeType":"YulFunctionCall","src":"1947:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:26"},"nodeType":"YulFunctionCall","src":"1966:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:26"},"nodeType":"YulFunctionCall","src":"1960:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:26"},"nodeType":"YulFunctionCall","src":"1940:39:26"},"nodeType":"YulExpressionStatement","src":"1940:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:26"},"nodeType":"YulFunctionCall","src":"1884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:26","statements":[{"nodeType":"YulAssignment","src":"1900:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:26"},"nodeType":"YulFunctionCall","src":"1905:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:26","statements":[]},"src":"1876:113:26"},{"body":{"nodeType":"YulBlock","src":"2023:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:26"},"nodeType":"YulFunctionCall","src":"2062:27:26"},"nodeType":"YulExpressionStatement","src":"2062:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:26"},"nodeType":"YulFunctionCall","src":"2001:13:26"},"nodeType":"YulIf","src":"1998:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:26","type":""}],"src":"1798:307:26"},{"body":{"nodeType":"YulBlock","src":"2159:54:26","statements":[{"nodeType":"YulAssignment","src":"2169:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:26"},"nodeType":"YulFunctionCall","src":"2183:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:26"},"nodeType":"YulFunctionCall","src":"2199:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:26"},"nodeType":"YulFunctionCall","src":"2179:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:26","type":""}],"src":"2111:102:26"},{"body":{"nodeType":"YulBlock","src":"2311:272:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:26"},"nodeType":"YulFunctionCall","src":"2335:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:26"},"nodeType":"YulFunctionCall","src":"2390:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:26"},"nodeType":"YulFunctionCall","src":"2492:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:26"},"nodeType":"YulFunctionCall","src":"2470:52:26"},"nodeType":"YulExpressionStatement","src":"2470:52:26"},{"nodeType":"YulAssignment","src":"2531:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:26"},"nodeType":"YulFunctionCall","src":"2547:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:26"},"nodeType":"YulFunctionCall","src":"2538:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:26","type":""}],"src":"2219:364:26"},{"body":{"nodeType":"YulBlock","src":"2707:195:26","statements":[{"nodeType":"YulAssignment","src":"2717:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:26"},"nodeType":"YulFunctionCall","src":"2760:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:26"},"nodeType":"YulFunctionCall","src":"2779:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:26"},"nodeType":"YulFunctionCall","src":"2753:47:26"},"nodeType":"YulExpressionStatement","src":"2753:47:26"},{"nodeType":"YulAssignment","src":"2809:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:26"},"nodeType":"YulFunctionCall","src":"2817:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:26","type":""}],"src":"2589:313:26"},{"body":{"nodeType":"YulBlock","src":"2953:32:26","statements":[{"nodeType":"YulAssignment","src":"2963:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:26","type":""}],"src":"2908:77:26"},{"body":{"nodeType":"YulBlock","src":"3034:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:26"},"nodeType":"YulFunctionCall","src":"3093:12:26"},"nodeType":"YulExpressionStatement","src":"3093:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:26"},"nodeType":"YulFunctionCall","src":"3064:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:26"},"nodeType":"YulFunctionCall","src":"3054:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:26"},"nodeType":"YulFunctionCall","src":"3047:43:26"},"nodeType":"YulIf","src":"3044:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:26","type":""}],"src":"2991:122:26"},{"body":{"nodeType":"YulBlock","src":"3171:87:26","statements":[{"nodeType":"YulAssignment","src":"3181:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:26"},"nodeType":"YulFunctionCall","src":"3190:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:26"},"nodeType":"YulFunctionCall","src":"3219:33:26"},"nodeType":"YulExpressionStatement","src":"3219:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:26","type":""}],"src":"3119:139:26"},{"body":{"nodeType":"YulBlock","src":"3330:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:26"},"nodeType":"YulFunctionCall","src":"3378:79:26"},"nodeType":"YulExpressionStatement","src":"3378:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:26"},"nodeType":"YulFunctionCall","src":"3347:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:26"},"nodeType":"YulFunctionCall","src":"3343:32:26"},"nodeType":"YulIf","src":"3340:119:26"},{"nodeType":"YulBlock","src":"3469:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:26"},"nodeType":"YulFunctionCall","src":"3544:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:26"},"nodeType":"YulFunctionCall","src":"3523:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:26","type":""}],"src":"3264:329:26"},{"body":{"nodeType":"YulBlock","src":"3644:81:26","statements":[{"nodeType":"YulAssignment","src":"3654:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:26"},"nodeType":"YulFunctionCall","src":"3665:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:26","type":""}],"src":"3599:126:26"},{"body":{"nodeType":"YulBlock","src":"3776:51:26","statements":[{"nodeType":"YulAssignment","src":"3786:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:26"},"nodeType":"YulFunctionCall","src":"3797:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:26","type":""}],"src":"3731:96:26"},{"body":{"nodeType":"YulBlock","src":"3898:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:26"},"nodeType":"YulFunctionCall","src":"3920:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:26"},"nodeType":"YulFunctionCall","src":"3908:37:26"},"nodeType":"YulExpressionStatement","src":"3908:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:26","type":""}],"src":"3833:118:26"},{"body":{"nodeType":"YulBlock","src":"4055:124:26","statements":[{"nodeType":"YulAssignment","src":"4065:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:26"},"nodeType":"YulFunctionCall","src":"4073:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:26"},"nodeType":"YulFunctionCall","src":"4154:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:26"},"nodeType":"YulFunctionCall","src":"4101:71:26"},"nodeType":"YulExpressionStatement","src":"4101:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:26","type":""}],"src":"3957:222:26"},{"body":{"nodeType":"YulBlock","src":"4228:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:26"},"nodeType":"YulFunctionCall","src":"4287:12:26"},"nodeType":"YulExpressionStatement","src":"4287:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:26"},"nodeType":"YulFunctionCall","src":"4258:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:26"},"nodeType":"YulFunctionCall","src":"4248:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:26"},"nodeType":"YulFunctionCall","src":"4241:43:26"},"nodeType":"YulIf","src":"4238:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:26","type":""}],"src":"4185:122:26"},{"body":{"nodeType":"YulBlock","src":"4365:87:26","statements":[{"nodeType":"YulAssignment","src":"4375:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:26"},"nodeType":"YulFunctionCall","src":"4384:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:26"},"nodeType":"YulFunctionCall","src":"4413:33:26"},"nodeType":"YulExpressionStatement","src":"4413:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:26","type":""}],"src":"4313:139:26"},{"body":{"nodeType":"YulBlock","src":"4541:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:26"},"nodeType":"YulFunctionCall","src":"4589:79:26"},"nodeType":"YulExpressionStatement","src":"4589:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:26"},"nodeType":"YulFunctionCall","src":"4558:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:32:26"},"nodeType":"YulIf","src":"4551:119:26"},{"nodeType":"YulBlock","src":"4680:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:26"},"nodeType":"YulFunctionCall","src":"4755:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:26"},"nodeType":"YulFunctionCall","src":"4734:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:26"}]}]},{"nodeType":"YulBlock","src":"4807:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:26"},"nodeType":"YulFunctionCall","src":"4883:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:26"},"nodeType":"YulFunctionCall","src":"4862:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:26","type":""}],"src":"4458:474:26"},{"body":{"nodeType":"YulBlock","src":"4982:32:26","statements":[{"nodeType":"YulAssignment","src":"4992:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5003:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4992:7:26"}]}]},"name":"cleanup_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4964:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4974:7:26","type":""}],"src":"4938:76:26"},{"body":{"nodeType":"YulBlock","src":"5062:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"5118:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5127:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5130:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5120:6:26"},"nodeType":"YulFunctionCall","src":"5120:12:26"},"nodeType":"YulExpressionStatement","src":"5120:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5085:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5109:5:26"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"5092:16:26"},"nodeType":"YulFunctionCall","src":"5092:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5082:2:26"},"nodeType":"YulFunctionCall","src":"5082:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5075:6:26"},"nodeType":"YulFunctionCall","src":"5075:42:26"},"nodeType":"YulIf","src":"5072:62:26"}]},"name":"validator_revert_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5055:5:26","type":""}],"src":"5020:120:26"},{"body":{"nodeType":"YulBlock","src":"5197:86:26","statements":[{"nodeType":"YulAssignment","src":"5207:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5229:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5216:12:26"},"nodeType":"YulFunctionCall","src":"5216:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5207:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5271:5:26"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"5245:25:26"},"nodeType":"YulFunctionCall","src":"5245:32:26"},"nodeType":"YulExpressionStatement","src":"5245:32:26"}]},"name":"abi_decode_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5175:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5183:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"5191:5:26","type":""}],"src":"5146:137:26"},{"body":{"nodeType":"YulBlock","src":"5354:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"5400:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5402:77:26"},"nodeType":"YulFunctionCall","src":"5402:79:26"},"nodeType":"YulExpressionStatement","src":"5402:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5375:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5384:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5371:3:26"},"nodeType":"YulFunctionCall","src":"5371:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5396:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5367:3:26"},"nodeType":"YulFunctionCall","src":"5367:32:26"},"nodeType":"YulIf","src":"5364:119:26"},{"nodeType":"YulBlock","src":"5493:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5508:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5522:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5512:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5537:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5571:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5582:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5567:3:26"},"nodeType":"YulFunctionCall","src":"5567:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5591:7:26"}],"functionName":{"name":"abi_decode_t_int256","nodeType":"YulIdentifier","src":"5547:19:26"},"nodeType":"YulFunctionCall","src":"5547:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5537:6:26"}]}]}]},"name":"abi_decode_tuple_t_int256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5324:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5335:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5347:6:26","type":""}],"src":"5289:327:26"},{"body":{"nodeType":"YulBlock","src":"5722:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"5768:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5770:77:26"},"nodeType":"YulFunctionCall","src":"5770:79:26"},"nodeType":"YulExpressionStatement","src":"5770:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5743:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5752:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5739:3:26"},"nodeType":"YulFunctionCall","src":"5739:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5764:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5735:3:26"},"nodeType":"YulFunctionCall","src":"5735:32:26"},"nodeType":"YulIf","src":"5732:119:26"},{"nodeType":"YulBlock","src":"5861:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5876:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5890:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5880:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5905:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5940:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5951:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5936:3:26"},"nodeType":"YulFunctionCall","src":"5936:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5960:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5915:20:26"},"nodeType":"YulFunctionCall","src":"5915:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5905:6:26"}]}]},{"nodeType":"YulBlock","src":"5988:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6003:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6017:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6007:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6033:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6068:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6079:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6064:3:26"},"nodeType":"YulFunctionCall","src":"6064:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6088:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6043:20:26"},"nodeType":"YulFunctionCall","src":"6043:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6033:6:26"}]}]},{"nodeType":"YulBlock","src":"6116:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6131:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6145:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6135:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6161:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6196:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6207:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6192:3:26"},"nodeType":"YulFunctionCall","src":"6192:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6216:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6171:20:26"},"nodeType":"YulFunctionCall","src":"6171:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"6161:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5676:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5687:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5699:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5707:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5715:6:26","type":""}],"src":"5622:619:26"},{"body":{"nodeType":"YulBlock","src":"6336:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6353:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6356:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6346:6:26"},"nodeType":"YulFunctionCall","src":"6346:12:26"},"nodeType":"YulExpressionStatement","src":"6346:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6247:117:26"},{"body":{"nodeType":"YulBlock","src":"6459:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6476:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6479:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6469:6:26"},"nodeType":"YulFunctionCall","src":"6469:12:26"},"nodeType":"YulExpressionStatement","src":"6469:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"6370:117:26"},{"body":{"nodeType":"YulBlock","src":"6521:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6538:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6541:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6531:6:26"},"nodeType":"YulFunctionCall","src":"6531:88:26"},"nodeType":"YulExpressionStatement","src":"6531:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6635:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6638:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6628:6:26"},"nodeType":"YulFunctionCall","src":"6628:15:26"},"nodeType":"YulExpressionStatement","src":"6628:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6659:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6662:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6652:6:26"},"nodeType":"YulFunctionCall","src":"6652:15:26"},"nodeType":"YulExpressionStatement","src":"6652:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"6493:180:26"},{"body":{"nodeType":"YulBlock","src":"6722:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6732:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6754:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6784:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6762:21:26"},"nodeType":"YulFunctionCall","src":"6762:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6750:3:26"},"nodeType":"YulFunctionCall","src":"6750:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6736:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6901:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6903:16:26"},"nodeType":"YulFunctionCall","src":"6903:18:26"},"nodeType":"YulExpressionStatement","src":"6903:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6844:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"6856:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6841:2:26"},"nodeType":"YulFunctionCall","src":"6841:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6880:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6892:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6877:2:26"},"nodeType":"YulFunctionCall","src":"6877:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6838:2:26"},"nodeType":"YulFunctionCall","src":"6838:62:26"},"nodeType":"YulIf","src":"6835:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6939:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6943:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6932:6:26"},"nodeType":"YulFunctionCall","src":"6932:22:26"},"nodeType":"YulExpressionStatement","src":"6932:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6708:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"6716:4:26","type":""}],"src":"6679:281:26"},{"body":{"nodeType":"YulBlock","src":"7007:88:26","statements":[{"nodeType":"YulAssignment","src":"7017:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7027:18:26"},"nodeType":"YulFunctionCall","src":"7027:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7017:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7076:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"7084:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7056:19:26"},"nodeType":"YulFunctionCall","src":"7056:33:26"},"nodeType":"YulExpressionStatement","src":"7056:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6991:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7000:6:26","type":""}],"src":"6966:129:26"},{"body":{"nodeType":"YulBlock","src":"7168:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"7273:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7275:16:26"},"nodeType":"YulFunctionCall","src":"7275:18:26"},"nodeType":"YulExpressionStatement","src":"7275:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7245:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7253:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7242:2:26"},"nodeType":"YulFunctionCall","src":"7242:30:26"},"nodeType":"YulIf","src":"7239:56:26"},{"nodeType":"YulAssignment","src":"7305:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7335:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7313:21:26"},"nodeType":"YulFunctionCall","src":"7313:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7305:4:26"}]},{"nodeType":"YulAssignment","src":"7379:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7391:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"7397:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7387:3:26"},"nodeType":"YulFunctionCall","src":"7387:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7379:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7152:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7163:4:26","type":""}],"src":"7101:308:26"},{"body":{"nodeType":"YulBlock","src":"7466:103:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7489:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"7494:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7499:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"7476:12:26"},"nodeType":"YulFunctionCall","src":"7476:30:26"},"nodeType":"YulExpressionStatement","src":"7476:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7547:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7552:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7543:3:26"},"nodeType":"YulFunctionCall","src":"7543:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"7561:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:26"},"nodeType":"YulFunctionCall","src":"7536:27:26"},"nodeType":"YulExpressionStatement","src":"7536:27:26"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7448:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7453:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7458:6:26","type":""}],"src":"7415:154:26"},{"body":{"nodeType":"YulBlock","src":"7659:328:26","statements":[{"nodeType":"YulAssignment","src":"7669:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7736:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7694:41:26"},"nodeType":"YulFunctionCall","src":"7694:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7678:15:26"},"nodeType":"YulFunctionCall","src":"7678:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7669:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7760:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"7767:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7753:6:26"},"nodeType":"YulFunctionCall","src":"7753:21:26"},"nodeType":"YulExpressionStatement","src":"7753:21:26"},{"nodeType":"YulVariableDeclaration","src":"7783:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7798:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"7805:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7794:3:26"},"nodeType":"YulFunctionCall","src":"7794:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7787:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7848:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"7850:77:26"},"nodeType":"YulFunctionCall","src":"7850:79:26"},"nodeType":"YulExpressionStatement","src":"7850:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7829:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7834:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7825:3:26"},"nodeType":"YulFunctionCall","src":"7825:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"7843:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7822:2:26"},"nodeType":"YulFunctionCall","src":"7822:25:26"},"nodeType":"YulIf","src":"7819:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7964:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"7969:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"7974:6:26"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"7940:23:26"},"nodeType":"YulFunctionCall","src":"7940:41:26"},"nodeType":"YulExpressionStatement","src":"7940:41:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7632:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"7637:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"7645:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7653:5:26","type":""}],"src":"7575:412:26"},{"body":{"nodeType":"YulBlock","src":"8069:278:26","statements":[{"body":{"nodeType":"YulBlock","src":"8118:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8120:77:26"},"nodeType":"YulFunctionCall","src":"8120:79:26"},"nodeType":"YulExpressionStatement","src":"8120:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8097:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8105:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8093:3:26"},"nodeType":"YulFunctionCall","src":"8093:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"8112:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8089:3:26"},"nodeType":"YulFunctionCall","src":"8089:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8082:6:26"},"nodeType":"YulFunctionCall","src":"8082:35:26"},"nodeType":"YulIf","src":"8079:122:26"},{"nodeType":"YulVariableDeclaration","src":"8210:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8237:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8224:12:26"},"nodeType":"YulFunctionCall","src":"8224:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8214:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8253:88:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8314:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8322:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8310:3:26"},"nodeType":"YulFunctionCall","src":"8310:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"8329:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"8337:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8262:47:26"},"nodeType":"YulFunctionCall","src":"8262:79:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8253:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8047:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"8055:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8063:5:26","type":""}],"src":"8007:340:26"},{"body":{"nodeType":"YulBlock","src":"8429:433:26","statements":[{"body":{"nodeType":"YulBlock","src":"8475:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8477:77:26"},"nodeType":"YulFunctionCall","src":"8477:79:26"},"nodeType":"YulExpressionStatement","src":"8477:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8450:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8459:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8446:3:26"},"nodeType":"YulFunctionCall","src":"8446:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8471:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8442:3:26"},"nodeType":"YulFunctionCall","src":"8442:32:26"},"nodeType":"YulIf","src":"8439:119:26"},{"nodeType":"YulBlock","src":"8568:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8583:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8614:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8625:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8610:3:26"},"nodeType":"YulFunctionCall","src":"8610:17:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8597:12:26"},"nodeType":"YulFunctionCall","src":"8597:31:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8587:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8675:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"8677:77:26"},"nodeType":"YulFunctionCall","src":"8677:79:26"},"nodeType":"YulExpressionStatement","src":"8677:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8647:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8655:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8644:2:26"},"nodeType":"YulFunctionCall","src":"8644:30:26"},"nodeType":"YulIf","src":"8641:117:26"},{"nodeType":"YulAssignment","src":"8772:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8817:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"8828:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8813:3:26"},"nodeType":"YulFunctionCall","src":"8813:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8837:7:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8782:30:26"},"nodeType":"YulFunctionCall","src":"8782:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8772:6:26"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8399:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8410:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8422:6:26","type":""}],"src":"8353:509:26"},{"body":{"nodeType":"YulBlock","src":"8934:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"8980:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8982:77:26"},"nodeType":"YulFunctionCall","src":"8982:79:26"},"nodeType":"YulExpressionStatement","src":"8982:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8955:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8964:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8951:3:26"},"nodeType":"YulFunctionCall","src":"8951:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8976:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8947:3:26"},"nodeType":"YulFunctionCall","src":"8947:32:26"},"nodeType":"YulIf","src":"8944:119:26"},{"nodeType":"YulBlock","src":"9073:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9088:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9102:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9092:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9117:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9152:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"9163:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:26"},"nodeType":"YulFunctionCall","src":"9148:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9172:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9127:20:26"},"nodeType":"YulFunctionCall","src":"9127:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9117:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8904:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8915:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8927:6:26","type":""}],"src":"8868:329:26"},{"body":{"nodeType":"YulBlock","src":"9268:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9285:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9308:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"9290:17:26"},"nodeType":"YulFunctionCall","src":"9290:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9278:6:26"},"nodeType":"YulFunctionCall","src":"9278:37:26"},"nodeType":"YulExpressionStatement","src":"9278:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9256:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9263:3:26","type":""}],"src":"9203:118:26"},{"body":{"nodeType":"YulBlock","src":"9425:124:26","statements":[{"nodeType":"YulAssignment","src":"9435:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9447:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9458:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9443:3:26"},"nodeType":"YulFunctionCall","src":"9443:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9435:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9515:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9528:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9539:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9524:3:26"},"nodeType":"YulFunctionCall","src":"9524:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"9471:43:26"},"nodeType":"YulFunctionCall","src":"9471:71:26"},"nodeType":"YulExpressionStatement","src":"9471:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9397:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9409:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9420:4:26","type":""}],"src":"9327:222:26"},{"body":{"nodeType":"YulBlock","src":"9595:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"9649:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9658:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9661:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9651:6:26"},"nodeType":"YulFunctionCall","src":"9651:12:26"},"nodeType":"YulExpressionStatement","src":"9651:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9618:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9640:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"9625:14:26"},"nodeType":"YulFunctionCall","src":"9625:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9615:2:26"},"nodeType":"YulFunctionCall","src":"9615:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9608:6:26"},"nodeType":"YulFunctionCall","src":"9608:40:26"},"nodeType":"YulIf","src":"9605:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9588:5:26","type":""}],"src":"9555:116:26"},{"body":{"nodeType":"YulBlock","src":"9726:84:26","statements":[{"nodeType":"YulAssignment","src":"9736:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9758:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9745:12:26"},"nodeType":"YulFunctionCall","src":"9745:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9736:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9798:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"9774:23:26"},"nodeType":"YulFunctionCall","src":"9774:30:26"},"nodeType":"YulExpressionStatement","src":"9774:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9704:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"9712:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9720:5:26","type":""}],"src":"9677:133:26"},{"body":{"nodeType":"YulBlock","src":"9896:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"9942:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9944:77:26"},"nodeType":"YulFunctionCall","src":"9944:79:26"},"nodeType":"YulExpressionStatement","src":"9944:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9917:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9913:3:26"},"nodeType":"YulFunctionCall","src":"9913:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"9938:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9909:3:26"},"nodeType":"YulFunctionCall","src":"9909:32:26"},"nodeType":"YulIf","src":"9906:119:26"},{"nodeType":"YulBlock","src":"10035:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10050:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10064:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10054:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10079:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10114:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10125:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10110:3:26"},"nodeType":"YulFunctionCall","src":"10110:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10134:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10089:20:26"},"nodeType":"YulFunctionCall","src":"10089:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10079:6:26"}]}]},{"nodeType":"YulBlock","src":"10162:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10177:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10191:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10181:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10207:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10239:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"10250:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10235:3:26"},"nodeType":"YulFunctionCall","src":"10235:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10259:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"10217:17:26"},"nodeType":"YulFunctionCall","src":"10217:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10207:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9858:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9869:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9881:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9889:6:26","type":""}],"src":"9816:468:26"},{"body":{"nodeType":"YulBlock","src":"10356:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"10461:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"10463:16:26"},"nodeType":"YulFunctionCall","src":"10463:18:26"},"nodeType":"YulExpressionStatement","src":"10463:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10433:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10441:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10430:2:26"},"nodeType":"YulFunctionCall","src":"10430:30:26"},"nodeType":"YulIf","src":"10427:56:26"},{"nodeType":"YulAssignment","src":"10493:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10523:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"10501:21:26"},"nodeType":"YulFunctionCall","src":"10501:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10493:4:26"}]},{"nodeType":"YulAssignment","src":"10567:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"10579:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"10585:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10575:3:26"},"nodeType":"YulFunctionCall","src":"10575:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"10567:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"10340:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"10351:4:26","type":""}],"src":"10290:307:26"},{"body":{"nodeType":"YulBlock","src":"10686:327:26","statements":[{"nodeType":"YulAssignment","src":"10696:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10762:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10721:40:26"},"nodeType":"YulFunctionCall","src":"10721:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"10705:15:26"},"nodeType":"YulFunctionCall","src":"10705:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"10696:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10786:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"10793:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10779:6:26"},"nodeType":"YulFunctionCall","src":"10779:21:26"},"nodeType":"YulExpressionStatement","src":"10779:21:26"},{"nodeType":"YulVariableDeclaration","src":"10809:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"10824:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"10831:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10820:3:26"},"nodeType":"YulFunctionCall","src":"10820:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"10813:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10874:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"10876:77:26"},"nodeType":"YulFunctionCall","src":"10876:79:26"},"nodeType":"YulExpressionStatement","src":"10876:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10855:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"10860:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10851:3:26"},"nodeType":"YulFunctionCall","src":"10851:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"10869:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10848:2:26"},"nodeType":"YulFunctionCall","src":"10848:25:26"},"nodeType":"YulIf","src":"10845:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"10990:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"10995:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11000:6:26"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"10966:23:26"},"nodeType":"YulFunctionCall","src":"10966:41:26"},"nodeType":"YulExpressionStatement","src":"10966:41:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"10659:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"10664:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"10672:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"10680:5:26","type":""}],"src":"10603:410:26"},{"body":{"nodeType":"YulBlock","src":"11093:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"11142:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"11144:77:26"},"nodeType":"YulFunctionCall","src":"11144:79:26"},"nodeType":"YulExpressionStatement","src":"11144:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11121:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11129:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11117:3:26"},"nodeType":"YulFunctionCall","src":"11117:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"11136:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11113:3:26"},"nodeType":"YulFunctionCall","src":"11113:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11106:6:26"},"nodeType":"YulFunctionCall","src":"11106:35:26"},"nodeType":"YulIf","src":"11103:122:26"},{"nodeType":"YulVariableDeclaration","src":"11234:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11261:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11248:12:26"},"nodeType":"YulFunctionCall","src":"11248:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11238:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11277:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11337:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11345:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11333:3:26"},"nodeType":"YulFunctionCall","src":"11333:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"11352:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"11360:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"11286:46:26"},"nodeType":"YulFunctionCall","src":"11286:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11277:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11071:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"11079:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11087:5:26","type":""}],"src":"11032:338:26"},{"body":{"nodeType":"YulBlock","src":"11502:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"11549:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11551:77:26"},"nodeType":"YulFunctionCall","src":"11551:79:26"},"nodeType":"YulExpressionStatement","src":"11551:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11523:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11532:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11519:3:26"},"nodeType":"YulFunctionCall","src":"11519:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11544:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11515:3:26"},"nodeType":"YulFunctionCall","src":"11515:33:26"},"nodeType":"YulIf","src":"11512:120:26"},{"nodeType":"YulBlock","src":"11642:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11657:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11671:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11661:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11686:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11721:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11732:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11717:3:26"},"nodeType":"YulFunctionCall","src":"11717:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11741:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11696:20:26"},"nodeType":"YulFunctionCall","src":"11696:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11686:6:26"}]}]},{"nodeType":"YulBlock","src":"11769:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11784:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11798:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11788:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11814:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11849:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11860:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11845:3:26"},"nodeType":"YulFunctionCall","src":"11845:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11869:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11824:20:26"},"nodeType":"YulFunctionCall","src":"11824:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11814:6:26"}]}]},{"nodeType":"YulBlock","src":"11897:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11912:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11926:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11916:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11942:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11977:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11988:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11973:3:26"},"nodeType":"YulFunctionCall","src":"11973:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11997:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11952:20:26"},"nodeType":"YulFunctionCall","src":"11952:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"11942:6:26"}]}]},{"nodeType":"YulBlock","src":"12025:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12040:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12071:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12082:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12067:3:26"},"nodeType":"YulFunctionCall","src":"12067:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12054:12:26"},"nodeType":"YulFunctionCall","src":"12054:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12044:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12133:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12135:77:26"},"nodeType":"YulFunctionCall","src":"12135:79:26"},"nodeType":"YulExpressionStatement","src":"12135:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12105:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12113:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12102:2:26"},"nodeType":"YulFunctionCall","src":"12102:30:26"},"nodeType":"YulIf","src":"12099:117:26"},{"nodeType":"YulAssignment","src":"12230:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12274:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12285:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12270:3:26"},"nodeType":"YulFunctionCall","src":"12270:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12294:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"12240:29:26"},"nodeType":"YulFunctionCall","src":"12240:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"12230:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11448:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11459:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11471:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11479:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11487:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"11495:6:26","type":""}],"src":"11376:943:26"},{"body":{"nodeType":"YulBlock","src":"12388:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12405:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12427:5:26"}],"functionName":{"name":"cleanup_t_int256","nodeType":"YulIdentifier","src":"12410:16:26"},"nodeType":"YulFunctionCall","src":"12410:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12398:6:26"},"nodeType":"YulFunctionCall","src":"12398:36:26"},"nodeType":"YulExpressionStatement","src":"12398:36:26"}]},"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12376:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12383:3:26","type":""}],"src":"12325:115:26"},{"body":{"nodeType":"YulBlock","src":"12542:122:26","statements":[{"nodeType":"YulAssignment","src":"12552:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12564:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12575:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12560:3:26"},"nodeType":"YulFunctionCall","src":"12560:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12552:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12630:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12654:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:26"},"nodeType":"YulFunctionCall","src":"12639:17:26"}],"functionName":{"name":"abi_encode_t_int256_to_t_int256_fromStack","nodeType":"YulIdentifier","src":"12588:41:26"},"nodeType":"YulFunctionCall","src":"12588:69:26"},"nodeType":"YulExpressionStatement","src":"12588:69:26"}]},"name":"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12514:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12526:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12537:4:26","type":""}],"src":"12446:218:26"},{"body":{"nodeType":"YulBlock","src":"12753:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"12799:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12801:77:26"},"nodeType":"YulFunctionCall","src":"12801:79:26"},"nodeType":"YulExpressionStatement","src":"12801:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12774:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"12783:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12770:3:26"},"nodeType":"YulFunctionCall","src":"12770:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"12795:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12766:3:26"},"nodeType":"YulFunctionCall","src":"12766:32:26"},"nodeType":"YulIf","src":"12763:119:26"},{"nodeType":"YulBlock","src":"12892:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12907:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12921:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12911:6:26","type":""}]},{"nodeType":"YulAssignment","src":"12936:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12971:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"12982:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12967:3:26"},"nodeType":"YulFunctionCall","src":"12967:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12991:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12946:20:26"},"nodeType":"YulFunctionCall","src":"12946:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12936:6:26"}]}]},{"nodeType":"YulBlock","src":"13019:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"13034:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"13048:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13038:6:26","type":""}]},{"nodeType":"YulAssignment","src":"13064:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13099:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"13110:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13095:3:26"},"nodeType":"YulFunctionCall","src":"13095:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13119:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13074:20:26"},"nodeType":"YulFunctionCall","src":"13074:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13064:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12715:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12726:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12738:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12746:6:26","type":""}],"src":"12670:474:26"},{"body":{"nodeType":"YulBlock","src":"13178:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13195:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13198:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13188:6:26"},"nodeType":"YulFunctionCall","src":"13188:88:26"},"nodeType":"YulExpressionStatement","src":"13188:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13292:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13295:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13285:6:26"},"nodeType":"YulFunctionCall","src":"13285:15:26"},"nodeType":"YulExpressionStatement","src":"13285:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13316:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13319:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13309:6:26"},"nodeType":"YulFunctionCall","src":"13309:15:26"},"nodeType":"YulExpressionStatement","src":"13309:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"13150:180:26"},{"body":{"nodeType":"YulBlock","src":"13387:269:26","statements":[{"nodeType":"YulAssignment","src":"13397:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13411:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"13417:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"13407:3:26"},"nodeType":"YulFunctionCall","src":"13407:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13397:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"13428:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"13458:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"13464:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13454:3:26"},"nodeType":"YulFunctionCall","src":"13454:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"13432:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13505:51:26","statements":[{"nodeType":"YulAssignment","src":"13519:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13533:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13541:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"13529:3:26"},"nodeType":"YulFunctionCall","src":"13529:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13519:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13485:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13478:6:26"},"nodeType":"YulFunctionCall","src":"13478:26:26"},"nodeType":"YulIf","src":"13475:81:26"},{"body":{"nodeType":"YulBlock","src":"13608:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"13622:16:26"},"nodeType":"YulFunctionCall","src":"13622:18:26"},"nodeType":"YulExpressionStatement","src":"13622:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"13572:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13595:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13603:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13592:2:26"},"nodeType":"YulFunctionCall","src":"13592:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"13569:2:26"},"nodeType":"YulFunctionCall","src":"13569:38:26"},"nodeType":"YulIf","src":"13566:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"13371:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13380:6:26","type":""}],"src":"13336:320:26"},{"body":{"nodeType":"YulBlock","src":"13768:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13790:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13798:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13786:3:26"},"nodeType":"YulFunctionCall","src":"13786:14:26"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"13802:34:26","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13779:6:26"},"nodeType":"YulFunctionCall","src":"13779:58:26"},"nodeType":"YulExpressionStatement","src":"13779:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13858:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13866:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13854:3:26"},"nodeType":"YulFunctionCall","src":"13854:15:26"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"13871:3:26","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13847:6:26"},"nodeType":"YulFunctionCall","src":"13847:28:26"},"nodeType":"YulExpressionStatement","src":"13847:28:26"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13760:6:26","type":""}],"src":"13662:220:26"},{"body":{"nodeType":"YulBlock","src":"14034:220:26","statements":[{"nodeType":"YulAssignment","src":"14044:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14110:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14115:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14051:58:26"},"nodeType":"YulFunctionCall","src":"14051:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14044:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14216:3:26"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"14127:88:26"},"nodeType":"YulFunctionCall","src":"14127:93:26"},"nodeType":"YulExpressionStatement","src":"14127:93:26"},{"nodeType":"YulAssignment","src":"14229:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14240:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"14245:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14236:3:26"},"nodeType":"YulFunctionCall","src":"14236:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14229:3:26"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14022:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14030:3:26","type":""}],"src":"13888:366:26"},{"body":{"nodeType":"YulBlock","src":"14431:248:26","statements":[{"nodeType":"YulAssignment","src":"14441:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14453:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14464:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14449:3:26"},"nodeType":"YulFunctionCall","src":"14449:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14441:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14488:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14499:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14484:3:26"},"nodeType":"YulFunctionCall","src":"14484:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14507:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14513:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14503:3:26"},"nodeType":"YulFunctionCall","src":"14503:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14477:6:26"},"nodeType":"YulFunctionCall","src":"14477:47:26"},"nodeType":"YulExpressionStatement","src":"14477:47:26"},{"nodeType":"YulAssignment","src":"14533:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14667:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14541:124:26"},"nodeType":"YulFunctionCall","src":"14541:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14533:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14411:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14426:4:26","type":""}],"src":"14260:419:26"},{"body":{"nodeType":"YulBlock","src":"14791:142:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14813:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14821:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14809:3:26"},"nodeType":"YulFunctionCall","src":"14809:14:26"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"14825:34:26","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14802:6:26"},"nodeType":"YulFunctionCall","src":"14802:58:26"},"nodeType":"YulExpressionStatement","src":"14802:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14881:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14889:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14877:3:26"},"nodeType":"YulFunctionCall","src":"14877:15:26"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"14894:31:26","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14870:6:26"},"nodeType":"YulFunctionCall","src":"14870:56:26"},"nodeType":"YulExpressionStatement","src":"14870:56:26"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14783:6:26","type":""}],"src":"14685:248:26"},{"body":{"nodeType":"YulBlock","src":"15085:220:26","statements":[{"nodeType":"YulAssignment","src":"15095:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15161:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15166:2:26","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15102:58:26"},"nodeType":"YulFunctionCall","src":"15102:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15095:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15267:3:26"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"15178:88:26"},"nodeType":"YulFunctionCall","src":"15178:93:26"},"nodeType":"YulExpressionStatement","src":"15178:93:26"},{"nodeType":"YulAssignment","src":"15280:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15291:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"15296:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15287:3:26"},"nodeType":"YulFunctionCall","src":"15287:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15280:3:26"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15073:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15081:3:26","type":""}],"src":"14939:366:26"},{"body":{"nodeType":"YulBlock","src":"15482:248:26","statements":[{"nodeType":"YulAssignment","src":"15492:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15504:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15515:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15500:3:26"},"nodeType":"YulFunctionCall","src":"15500:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15492:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15539:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15550:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15535:3:26"},"nodeType":"YulFunctionCall","src":"15535:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15558:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15564:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15554:3:26"},"nodeType":"YulFunctionCall","src":"15554:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15528:6:26"},"nodeType":"YulFunctionCall","src":"15528:47:26"},"nodeType":"YulExpressionStatement","src":"15528:47:26"},{"nodeType":"YulAssignment","src":"15584:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15718:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15592:124:26"},"nodeType":"YulFunctionCall","src":"15592:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15584:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15462:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15477:4:26","type":""}],"src":"15311:419:26"},{"body":{"nodeType":"YulBlock","src":"15764:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15781:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15784:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15774:6:26"},"nodeType":"YulFunctionCall","src":"15774:88:26"},"nodeType":"YulExpressionStatement","src":"15774:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15878:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15881:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15871:6:26"},"nodeType":"YulFunctionCall","src":"15871:15:26"},"nodeType":"YulExpressionStatement","src":"15871:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15902:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15905:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15895:6:26"},"nodeType":"YulFunctionCall","src":"15895:15:26"},"nodeType":"YulExpressionStatement","src":"15895:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"15736:180:26"},{"body":{"nodeType":"YulBlock","src":"15966:261:26","statements":[{"nodeType":"YulAssignment","src":"15976:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"15999:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"15981:17:26"},"nodeType":"YulFunctionCall","src":"15981:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"15976:1:26"}]},{"nodeType":"YulAssignment","src":"16010:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"16033:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"16015:17:26"},"nodeType":"YulFunctionCall","src":"16015:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"16010:1:26"}]},{"body":{"nodeType":"YulBlock","src":"16173:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"16175:16:26"},"nodeType":"YulFunctionCall","src":"16175:18:26"},"nodeType":"YulExpressionStatement","src":"16175:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16094:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16101:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"16169:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16097:3:26"},"nodeType":"YulFunctionCall","src":"16097:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16091:2:26"},"nodeType":"YulFunctionCall","src":"16091:81:26"},"nodeType":"YulIf","src":"16088:107:26"},{"nodeType":"YulAssignment","src":"16205:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"16216:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"16219:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16212:3:26"},"nodeType":"YulFunctionCall","src":"16212:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"16205:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"15953:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"15956:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"15962:3:26","type":""}],"src":"15922:305:26"},{"body":{"nodeType":"YulBlock","src":"16339:126:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16361:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16369:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:26"},"nodeType":"YulFunctionCall","src":"16357:14:26"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"16373:34:26","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16350:6:26"},"nodeType":"YulFunctionCall","src":"16350:58:26"},"nodeType":"YulExpressionStatement","src":"16350:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16429:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16437:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16425:3:26"},"nodeType":"YulFunctionCall","src":"16425:15:26"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"16442:15:26","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16418:6:26"},"nodeType":"YulFunctionCall","src":"16418:40:26"},"nodeType":"YulExpressionStatement","src":"16418:40:26"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16331:6:26","type":""}],"src":"16233:232:26"},{"body":{"nodeType":"YulBlock","src":"16617:220:26","statements":[{"nodeType":"YulAssignment","src":"16627:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16693:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16698:2:26","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16634:58:26"},"nodeType":"YulFunctionCall","src":"16634:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16627:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16799:3:26"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"16710:88:26"},"nodeType":"YulFunctionCall","src":"16710:93:26"},"nodeType":"YulExpressionStatement","src":"16710:93:26"},{"nodeType":"YulAssignment","src":"16812:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16823:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16828:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16819:3:26"},"nodeType":"YulFunctionCall","src":"16819:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16812:3:26"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16605:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16613:3:26","type":""}],"src":"16471:366:26"},{"body":{"nodeType":"YulBlock","src":"17014:248:26","statements":[{"nodeType":"YulAssignment","src":"17024:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17036:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17047:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17032:3:26"},"nodeType":"YulFunctionCall","src":"17032:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17024:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17071:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17082:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17067:3:26"},"nodeType":"YulFunctionCall","src":"17067:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17090:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17096:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17086:3:26"},"nodeType":"YulFunctionCall","src":"17086:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17060:6:26"},"nodeType":"YulFunctionCall","src":"17060:47:26"},"nodeType":"YulExpressionStatement","src":"17060:47:26"},{"nodeType":"YulAssignment","src":"17116:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17250:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17124:124:26"},"nodeType":"YulFunctionCall","src":"17124:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17116:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16994:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17009:4:26","type":""}],"src":"16843:419:26"},{"body":{"nodeType":"YulBlock","src":"17382:34:26","statements":[{"nodeType":"YulAssignment","src":"17392:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"17407:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17392:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17354:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"17359:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17370:11:26","type":""}],"src":"17268:148:26"},{"body":{"nodeType":"YulBlock","src":"17532:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"17542:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17589:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17556:32:26"},"nodeType":"YulFunctionCall","src":"17556:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17546:6:26","type":""}]},{"nodeType":"YulAssignment","src":"17604:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17688:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"17693:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17611:76:26"},"nodeType":"YulFunctionCall","src":"17611:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17604:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17735:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"17742:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17731:3:26"},"nodeType":"YulFunctionCall","src":"17731:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"17749:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"17754:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"17709:21:26"},"nodeType":"YulFunctionCall","src":"17709:52:26"},"nodeType":"YulExpressionStatement","src":"17709:52:26"},{"nodeType":"YulAssignment","src":"17770:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17781:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"17786:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17777:3:26"},"nodeType":"YulFunctionCall","src":"17777:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17770:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17513:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17520:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17528:3:26","type":""}],"src":"17422:377:26"},{"body":{"nodeType":"YulBlock","src":"17941:139:26","statements":[{"nodeType":"YulAssignment","src":"17952:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18041:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"18050:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"17959:81:26"},"nodeType":"YulFunctionCall","src":"17959:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17952:3:26"}]},{"nodeType":"YulAssignment","src":"18064:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"18071:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18064:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17920:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17926:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17937:3:26","type":""}],"src":"17805:275:26"},{"body":{"nodeType":"YulBlock","src":"18270:251:26","statements":[{"nodeType":"YulAssignment","src":"18281:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18370:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"18379:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18288:81:26"},"nodeType":"YulFunctionCall","src":"18288:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18281:3:26"}]},{"nodeType":"YulAssignment","src":"18393:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18482:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"18491:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"18400:81:26"},"nodeType":"YulFunctionCall","src":"18400:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18393:3:26"}]},{"nodeType":"YulAssignment","src":"18505:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"18512:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18505:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18241:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18247:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18255:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18266:3:26","type":""}],"src":"18086:435:26"},{"body":{"nodeType":"YulBlock","src":"18633:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18655:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18663:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18651:3:26"},"nodeType":"YulFunctionCall","src":"18651:14:26"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"18667:26:26","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18644:6:26"},"nodeType":"YulFunctionCall","src":"18644:50:26"},"nodeType":"YulExpressionStatement","src":"18644:50:26"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18625:6:26","type":""}],"src":"18527:174:26"},{"body":{"nodeType":"YulBlock","src":"18853:220:26","statements":[{"nodeType":"YulAssignment","src":"18863:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18929:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18934:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18870:58:26"},"nodeType":"YulFunctionCall","src":"18870:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18863:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19035:3:26"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"18946:88:26"},"nodeType":"YulFunctionCall","src":"18946:93:26"},"nodeType":"YulExpressionStatement","src":"18946:93:26"},{"nodeType":"YulAssignment","src":"19048:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19059:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19064:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19055:3:26"},"nodeType":"YulFunctionCall","src":"19055:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19048:3:26"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18841:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18849:3:26","type":""}],"src":"18707:366:26"},{"body":{"nodeType":"YulBlock","src":"19250:248:26","statements":[{"nodeType":"YulAssignment","src":"19260:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19272:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19283:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19268:3:26"},"nodeType":"YulFunctionCall","src":"19268:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19260:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19307:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19318:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19303:3:26"},"nodeType":"YulFunctionCall","src":"19303:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19326:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19332:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19322:3:26"},"nodeType":"YulFunctionCall","src":"19322:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19296:6:26"},"nodeType":"YulFunctionCall","src":"19296:47:26"},"nodeType":"YulExpressionStatement","src":"19296:47:26"},{"nodeType":"YulAssignment","src":"19352:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19486:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19360:124:26"},"nodeType":"YulFunctionCall","src":"19360:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19352:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19230:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19245:4:26","type":""}],"src":"19079:419:26"},{"body":{"nodeType":"YulBlock","src":"19610:122:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19632:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19640:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19628:3:26"},"nodeType":"YulFunctionCall","src":"19628:14:26"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"19644:34:26","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19621:6:26"},"nodeType":"YulFunctionCall","src":"19621:58:26"},"nodeType":"YulExpressionStatement","src":"19621:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19700:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"19708:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19696:3:26"},"nodeType":"YulFunctionCall","src":"19696:15:26"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"19713:11:26","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19689:6:26"},"nodeType":"YulFunctionCall","src":"19689:36:26"},"nodeType":"YulExpressionStatement","src":"19689:36:26"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19602:6:26","type":""}],"src":"19504:228:26"},{"body":{"nodeType":"YulBlock","src":"19884:220:26","statements":[{"nodeType":"YulAssignment","src":"19894:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19960:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19965:2:26","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19901:58:26"},"nodeType":"YulFunctionCall","src":"19901:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19894:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20066:3:26"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"19977:88:26"},"nodeType":"YulFunctionCall","src":"19977:93:26"},"nodeType":"YulExpressionStatement","src":"19977:93:26"},{"nodeType":"YulAssignment","src":"20079:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20090:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20095:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20086:3:26"},"nodeType":"YulFunctionCall","src":"20086:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20079:3:26"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19872:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19880:3:26","type":""}],"src":"19738:366:26"},{"body":{"nodeType":"YulBlock","src":"20281:248:26","statements":[{"nodeType":"YulAssignment","src":"20291:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20303:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20314:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20299:3:26"},"nodeType":"YulFunctionCall","src":"20299:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20291:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20338:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20349:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20334:3:26"},"nodeType":"YulFunctionCall","src":"20334:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20357:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20363:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20353:3:26"},"nodeType":"YulFunctionCall","src":"20353:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20327:6:26"},"nodeType":"YulFunctionCall","src":"20327:47:26"},"nodeType":"YulExpressionStatement","src":"20327:47:26"},{"nodeType":"YulAssignment","src":"20383:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20517:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20391:124:26"},"nodeType":"YulFunctionCall","src":"20391:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20383:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20261:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20276:4:26","type":""}],"src":"20110:419:26"},{"body":{"nodeType":"YulBlock","src":"20641:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20663:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20671:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20659:3:26"},"nodeType":"YulFunctionCall","src":"20659:14:26"},{"hexValue":"55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"20675:33:26","type":"","value":"URI Query for nonexistent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20652:6:26"},"nodeType":"YulFunctionCall","src":"20652:57:26"},"nodeType":"YulExpressionStatement","src":"20652:57:26"}]},"name":"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20633:6:26","type":""}],"src":"20535:181:26"},{"body":{"nodeType":"YulBlock","src":"20868:220:26","statements":[{"nodeType":"YulAssignment","src":"20878:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20944:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20949:2:26","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20885:58:26"},"nodeType":"YulFunctionCall","src":"20885:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20878:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21050:3:26"}],"functionName":{"name":"store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30","nodeType":"YulIdentifier","src":"20961:88:26"},"nodeType":"YulFunctionCall","src":"20961:93:26"},"nodeType":"YulExpressionStatement","src":"20961:93:26"},{"nodeType":"YulAssignment","src":"21063:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21074:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21079:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21070:3:26"},"nodeType":"YulFunctionCall","src":"21070:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21063:3:26"}]}]},"name":"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20856:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20864:3:26","type":""}],"src":"20722:366:26"},{"body":{"nodeType":"YulBlock","src":"21265:248:26","statements":[{"nodeType":"YulAssignment","src":"21275:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21287:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21298:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21283:3:26"},"nodeType":"YulFunctionCall","src":"21283:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21275:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21322:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21333:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21318:3:26"},"nodeType":"YulFunctionCall","src":"21318:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21341:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21347:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21337:3:26"},"nodeType":"YulFunctionCall","src":"21337:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21311:6:26"},"nodeType":"YulFunctionCall","src":"21311:47:26"},"nodeType":"YulExpressionStatement","src":"21311:47:26"},{"nodeType":"YulAssignment","src":"21367:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21501:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21375:124:26"},"nodeType":"YulFunctionCall","src":"21375:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21367:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21245:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21260:4:26","type":""}],"src":"21094:419:26"},{"body":{"nodeType":"YulBlock","src":"21563:61:26","statements":[{"nodeType":"YulAssignment","src":"21573:45:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21588:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"21595:22:26","type":"","value":"0xffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21584:3:26"},"nodeType":"YulFunctionCall","src":"21584:34:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"21573:7:26"}]}]},"name":"cleanup_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21545:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"21555:7:26","type":""}],"src":"21519:105:26"},{"body":{"nodeType":"YulBlock","src":"21672:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"21728:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21737:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21740:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21730:6:26"},"nodeType":"YulFunctionCall","src":"21730:12:26"},"nodeType":"YulExpressionStatement","src":"21730:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21695:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21719:5:26"}],"functionName":{"name":"cleanup_t_uint80","nodeType":"YulIdentifier","src":"21702:16:26"},"nodeType":"YulFunctionCall","src":"21702:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21692:2:26"},"nodeType":"YulFunctionCall","src":"21692:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21685:6:26"},"nodeType":"YulFunctionCall","src":"21685:42:26"},"nodeType":"YulIf","src":"21682:62:26"}]},"name":"validator_revert_t_uint80","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21665:5:26","type":""}],"src":"21630:120:26"},{"body":{"nodeType":"YulBlock","src":"21818:79:26","statements":[{"nodeType":"YulAssignment","src":"21828:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21843:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21837:5:26"},"nodeType":"YulFunctionCall","src":"21837:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21828:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21885:5:26"}],"functionName":{"name":"validator_revert_t_uint80","nodeType":"YulIdentifier","src":"21859:25:26"},"nodeType":"YulFunctionCall","src":"21859:32:26"},"nodeType":"YulExpressionStatement","src":"21859:32:26"}]},"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21796:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"21804:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21812:5:26","type":""}],"src":"21756:141:26"},{"body":{"nodeType":"YulBlock","src":"21965:79:26","statements":[{"nodeType":"YulAssignment","src":"21975:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"21990:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21984:5:26"},"nodeType":"YulFunctionCall","src":"21984:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"21975:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22032:5:26"}],"functionName":{"name":"validator_revert_t_int256","nodeType":"YulIdentifier","src":"22006:25:26"},"nodeType":"YulFunctionCall","src":"22006:32:26"},"nodeType":"YulExpressionStatement","src":"22006:32:26"}]},"name":"abi_decode_t_int256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"21943:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"21951:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"21959:5:26","type":""}],"src":"21903:141:26"},{"body":{"nodeType":"YulBlock","src":"22113:80:26","statements":[{"nodeType":"YulAssignment","src":"22123:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22138:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22132:5:26"},"nodeType":"YulFunctionCall","src":"22132:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22123:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22181:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"22154:26:26"},"nodeType":"YulFunctionCall","src":"22154:33:26"},"nodeType":"YulExpressionStatement","src":"22154:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22091:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"22099:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22107:5:26","type":""}],"src":"22050:143:26"},{"body":{"nodeType":"YulBlock","src":"22341:829:26","statements":[{"body":{"nodeType":"YulBlock","src":"22388:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22390:77:26"},"nodeType":"YulFunctionCall","src":"22390:79:26"},"nodeType":"YulExpressionStatement","src":"22390:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22362:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22371:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22358:3:26"},"nodeType":"YulFunctionCall","src":"22358:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"22383:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22354:3:26"},"nodeType":"YulFunctionCall","src":"22354:33:26"},"nodeType":"YulIf","src":"22351:120:26"},{"nodeType":"YulBlock","src":"22481:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22496:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22510:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22500:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22525:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22570:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22581:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22566:3:26"},"nodeType":"YulFunctionCall","src":"22566:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22590:7:26"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"22535:30:26"},"nodeType":"YulFunctionCall","src":"22535:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22525:6:26"}]}]},{"nodeType":"YulBlock","src":"22618:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22633:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22647:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22637:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22663:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22708:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22719:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22704:3:26"},"nodeType":"YulFunctionCall","src":"22704:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22728:7:26"}],"functionName":{"name":"abi_decode_t_int256_fromMemory","nodeType":"YulIdentifier","src":"22673:30:26"},"nodeType":"YulFunctionCall","src":"22673:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"22663:6:26"}]}]},{"nodeType":"YulBlock","src":"22756:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22771:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22785:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22775:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22801:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22847:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22858:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22843:3:26"},"nodeType":"YulFunctionCall","src":"22843:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22867:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22811:31:26"},"nodeType":"YulFunctionCall","src":"22811:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"22801:6:26"}]}]},{"nodeType":"YulBlock","src":"22895:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"22910:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"22924:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22914:6:26","type":""}]},{"nodeType":"YulAssignment","src":"22940:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22986:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"22997:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22982:3:26"},"nodeType":"YulFunctionCall","src":"22982:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23006:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"22950:31:26"},"nodeType":"YulFunctionCall","src":"22950:64:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"22940:6:26"}]}]},{"nodeType":"YulBlock","src":"23034:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"23049:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"23063:3:26","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23053:6:26","type":""}]},{"nodeType":"YulAssignment","src":"23080:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23125:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23136:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23121:3:26"},"nodeType":"YulFunctionCall","src":"23121:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23145:7:26"}],"functionName":{"name":"abi_decode_t_uint80_fromMemory","nodeType":"YulIdentifier","src":"23090:30:26"},"nodeType":"YulFunctionCall","src":"23090:63:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23080:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22279:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22290:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22302:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22310:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22318:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22326:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22334:6:26","type":""}],"src":"22199:971:26"},{"body":{"nodeType":"YulBlock","src":"23282:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23304:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23312:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23300:3:26"},"nodeType":"YulFunctionCall","src":"23300:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"23316:66:26","type":"","value":"0x7b226e616d65223a220000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23293:6:26"},"nodeType":"YulFunctionCall","src":"23293:90:26"},"nodeType":"YulExpressionStatement","src":"23293:90:26"}]},"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23274:6:26","type":""}],"src":"23176:214:26"},{"body":{"nodeType":"YulBlock","src":"23560:236:26","statements":[{"nodeType":"YulAssignment","src":"23570:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23654:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23659:1:26","type":"","value":"9"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"23577:76:26"},"nodeType":"YulFunctionCall","src":"23577:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23570:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23759:3:26"}],"functionName":{"name":"store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832","nodeType":"YulIdentifier","src":"23670:88:26"},"nodeType":"YulFunctionCall","src":"23670:93:26"},"nodeType":"YulExpressionStatement","src":"23670:93:26"},{"nodeType":"YulAssignment","src":"23772:18:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23783:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"23788:1:26","type":"","value":"9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23779:3:26"},"nodeType":"YulFunctionCall","src":"23779:11:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23772:3:26"}]}]},"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23548:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23556:3:26","type":""}],"src":"23396:400:26"},{"body":{"nodeType":"YulBlock","src":"23908:278:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23930:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23938:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23926:3:26"},"nodeType":"YulFunctionCall","src":"23926:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"23942:66:26","type":"","value":"0x222c20226465736372697074696f6e223a22416e204e46542074686174206368"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23919:6:26"},"nodeType":"YulFunctionCall","src":"23919:90:26"},"nodeType":"YulExpressionStatement","src":"23919:90:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24030:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"24038:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24026:3:26"},"nodeType":"YulFunctionCall","src":"24026:15:26"},{"hexValue":"616e676573206261736564206f6e2074686520436861696e6c696e6b20466565","kind":"string","nodeType":"YulLiteral","src":"24043:34:26","type":"","value":"anges based on the Chainlink Fee"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24019:6:26"},"nodeType":"YulFunctionCall","src":"24019:59:26"},"nodeType":"YulExpressionStatement","src":"24019:59:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24099:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"24107:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24095:3:26"},"nodeType":"YulFunctionCall","src":"24095:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"24112:66:26","type":"","value":"0x64222c2000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24088:6:26"},"nodeType":"YulFunctionCall","src":"24088:91:26"},"nodeType":"YulExpressionStatement","src":"24088:91:26"}]},"name":"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23900:6:26","type":""}],"src":"23802:384:26"},{"body":{"nodeType":"YulBlock","src":"24356:238:26","statements":[{"nodeType":"YulAssignment","src":"24366:92:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24450:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24455:2:26","type":"","value":"68"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"24373:76:26"},"nodeType":"YulFunctionCall","src":"24373:85:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24366:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24556:3:26"}],"functionName":{"name":"store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574","nodeType":"YulIdentifier","src":"24467:88:26"},"nodeType":"YulFunctionCall","src":"24467:93:26"},"nodeType":"YulExpressionStatement","src":"24467:93:26"},{"nodeType":"YulAssignment","src":"24569:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24580:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"24585:2:26","type":"","value":"68"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24576:3:26"},"nodeType":"YulFunctionCall","src":"24576:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24569:3:26"}]}]},"name":"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24344:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24352:3:26","type":""}],"src":"24192:402:26"},{"body":{"nodeType":"YulBlock","src":"24706:310:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24728:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"24736:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24724:3:26"},"nodeType":"YulFunctionCall","src":"24724:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"24740:66:26","type":"","value":"0x2261747472696275746573223a205b7b2274726169745f74797065223a202263"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24717:6:26"},"nodeType":"YulFunctionCall","src":"24717:90:26"},"nodeType":"YulExpressionStatement","src":"24717:90:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24828:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"24836:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24824:3:26"},"nodeType":"YulFunctionCall","src":"24824:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"24841:66:26","type":"","value":"0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24817:6:26"},"nodeType":"YulFunctionCall","src":"24817:91:26"},"nodeType":"YulExpressionStatement","src":"24817:91:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24929:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"24937:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24925:3:26"},"nodeType":"YulFunctionCall","src":"24925:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"24942:66:26","type":"","value":"0x223a220000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24918:6:26"},"nodeType":"YulFunctionCall","src":"24918:91:26"},"nodeType":"YulExpressionStatement","src":"24918:91:26"}]},"name":"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24698:6:26","type":""}],"src":"24600:416:26"},{"body":{"nodeType":"YulBlock","src":"25186:238:26","statements":[{"nodeType":"YulAssignment","src":"25196:92:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25280:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"25285:2:26","type":"","value":"67"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25203:76:26"},"nodeType":"YulFunctionCall","src":"25203:85:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25196:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25386:3:26"}],"functionName":{"name":"store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b","nodeType":"YulIdentifier","src":"25297:88:26"},"nodeType":"YulFunctionCall","src":"25297:93:26"},"nodeType":"YulExpressionStatement","src":"25297:93:26"},{"nodeType":"YulAssignment","src":"25399:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25410:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"25415:2:26","type":"","value":"67"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25406:3:26"},"nodeType":"YulFunctionCall","src":"25406:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25399:3:26"}]}]},"name":"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25174:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25182:3:26","type":""}],"src":"25022:402:26"},{"body":{"nodeType":"YulBlock","src":"25536:108:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25558:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"25566:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25554:3:26"},"nodeType":"YulFunctionCall","src":"25554:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"25570:66:26","type":"","value":"0x227d000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25547:6:26"},"nodeType":"YulFunctionCall","src":"25547:90:26"},"nodeType":"YulExpressionStatement","src":"25547:90:26"}]},"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25528:6:26","type":""}],"src":"25430:214:26"},{"body":{"nodeType":"YulBlock","src":"25814:236:26","statements":[{"nodeType":"YulAssignment","src":"25824:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25908:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"25913:1:26","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25831:76:26"},"nodeType":"YulFunctionCall","src":"25831:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25824:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26013:3:26"}],"functionName":{"name":"store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475","nodeType":"YulIdentifier","src":"25924:88:26"},"nodeType":"YulFunctionCall","src":"25924:93:26"},"nodeType":"YulExpressionStatement","src":"25924:93:26"},{"nodeType":"YulAssignment","src":"26026:18:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26037:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26042:1:26","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26033:3:26"},"nodeType":"YulFunctionCall","src":"26033:11:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26026:3:26"}]}]},"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25802:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25810:3:26","type":""}],"src":"25650:400:26"},{"body":{"nodeType":"YulBlock","src":"26644:911:26","statements":[{"nodeType":"YulAssignment","src":"26655:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26806:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26662:142:26"},"nodeType":"YulFunctionCall","src":"26662:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26655:3:26"}]},{"nodeType":"YulAssignment","src":"26820:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26909:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"26918:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26827:81:26"},"nodeType":"YulFunctionCall","src":"26827:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26820:3:26"}]},{"nodeType":"YulAssignment","src":"26932:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27083:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26939:142:26"},"nodeType":"YulFunctionCall","src":"26939:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26932:3:26"}]},{"nodeType":"YulAssignment","src":"27097:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27248:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27104:142:26"},"nodeType":"YulFunctionCall","src":"27104:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27097:3:26"}]},{"nodeType":"YulAssignment","src":"27262:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"27351:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"27360:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27269:81:26"},"nodeType":"YulFunctionCall","src":"27269:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27262:3:26"}]},{"nodeType":"YulAssignment","src":"27374:155:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27525:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27381:142:26"},"nodeType":"YulFunctionCall","src":"27381:148:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27374:3:26"}]},{"nodeType":"YulAssignment","src":"27539:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"27546:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27539:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26615:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26621:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26629:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26640:3:26","type":""}],"src":"26056:1499:26"},{"body":{"nodeType":"YulBlock","src":"27589:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27606:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27609:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27599:6:26"},"nodeType":"YulFunctionCall","src":"27599:88:26"},"nodeType":"YulExpressionStatement","src":"27599:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27703:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27706:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27696:6:26"},"nodeType":"YulFunctionCall","src":"27696:15:26"},"nodeType":"YulExpressionStatement","src":"27696:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27727:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27730:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27720:6:26"},"nodeType":"YulFunctionCall","src":"27720:15:26"},"nodeType":"YulExpressionStatement","src":"27720:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27561:180:26"},{"body":{"nodeType":"YulBlock","src":"27789:143:26","statements":[{"nodeType":"YulAssignment","src":"27799:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27822:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27804:17:26"},"nodeType":"YulFunctionCall","src":"27804:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27799:1:26"}]},{"nodeType":"YulAssignment","src":"27833:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27856:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27838:17:26"},"nodeType":"YulFunctionCall","src":"27838:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27833:1:26"}]},{"body":{"nodeType":"YulBlock","src":"27880:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27882:16:26"},"nodeType":"YulFunctionCall","src":"27882:18:26"},"nodeType":"YulExpressionStatement","src":"27882:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27877:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27870:6:26"},"nodeType":"YulFunctionCall","src":"27870:9:26"},"nodeType":"YulIf","src":"27867:35:26"},{"nodeType":"YulAssignment","src":"27912:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27921:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"27924:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27917:3:26"},"nodeType":"YulFunctionCall","src":"27917:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27912:1:26"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27778:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"27781:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27787:1:26","type":""}],"src":"27747:185:26"},{"body":{"nodeType":"YulBlock","src":"27986:300:26","statements":[{"nodeType":"YulAssignment","src":"27996:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28019:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28001:17:26"},"nodeType":"YulFunctionCall","src":"28001:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27996:1:26"}]},{"nodeType":"YulAssignment","src":"28030:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28053:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"28035:17:26"},"nodeType":"YulFunctionCall","src":"28035:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"28030:1:26"}]},{"body":{"nodeType":"YulBlock","src":"28228:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"28230:16:26"},"nodeType":"YulFunctionCall","src":"28230:18:26"},"nodeType":"YulExpressionStatement","src":"28230:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28140:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28133:6:26"},"nodeType":"YulFunctionCall","src":"28133:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"28126:6:26"},"nodeType":"YulFunctionCall","src":"28126:17:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"28148:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28155:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"28223:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"28151:3:26"},"nodeType":"YulFunctionCall","src":"28151:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28145:2:26"},"nodeType":"YulFunctionCall","src":"28145:81:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28122:3:26"},"nodeType":"YulFunctionCall","src":"28122:105:26"},"nodeType":"YulIf","src":"28119:131:26"},{"nodeType":"YulAssignment","src":"28260:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"28275:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"28278:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28271:3:26"},"nodeType":"YulFunctionCall","src":"28271:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"28260:7:26"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27969:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"27972:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"27978:7:26","type":""}],"src":"27938:348:26"},{"body":{"nodeType":"YulBlock","src":"28398:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28420:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28428:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28416:3:26"},"nodeType":"YulFunctionCall","src":"28416:14:26"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28432:34:26","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28409:6:26"},"nodeType":"YulFunctionCall","src":"28409:58:26"},"nodeType":"YulExpressionStatement","src":"28409:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28488:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28496:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28484:3:26"},"nodeType":"YulFunctionCall","src":"28484:15:26"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28501:7:26","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28477:6:26"},"nodeType":"YulFunctionCall","src":"28477:32:26"},"nodeType":"YulExpressionStatement","src":"28477:32:26"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28390:6:26","type":""}],"src":"28292:224:26"},{"body":{"nodeType":"YulBlock","src":"28668:220:26","statements":[{"nodeType":"YulAssignment","src":"28678:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28744:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28749:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28685:58:26"},"nodeType":"YulFunctionCall","src":"28685:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28678:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28850:3:26"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28761:88:26"},"nodeType":"YulFunctionCall","src":"28761:93:26"},"nodeType":"YulExpressionStatement","src":"28761:93:26"},{"nodeType":"YulAssignment","src":"28863:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28874:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28879:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28870:3:26"},"nodeType":"YulFunctionCall","src":"28870:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28863:3:26"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28656:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28664:3:26","type":""}],"src":"28522:366:26"},{"body":{"nodeType":"YulBlock","src":"29065:248:26","statements":[{"nodeType":"YulAssignment","src":"29075:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29087:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29098:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29083:3:26"},"nodeType":"YulFunctionCall","src":"29083:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29075:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29122:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29133:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29118:3:26"},"nodeType":"YulFunctionCall","src":"29118:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29141:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"29147:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29137:3:26"},"nodeType":"YulFunctionCall","src":"29137:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29111:6:26"},"nodeType":"YulFunctionCall","src":"29111:47:26"},"nodeType":"YulExpressionStatement","src":"29111:47:26"},{"nodeType":"YulAssignment","src":"29167:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29301:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29175:124:26"},"nodeType":"YulFunctionCall","src":"29175:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29167:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29045:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29060:4:26","type":""}],"src":"28894:419:26"},{"body":{"nodeType":"YulBlock","src":"29425:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29447:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29455:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29443:3:26"},"nodeType":"YulFunctionCall","src":"29443:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29459:34:26","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29436:6:26"},"nodeType":"YulFunctionCall","src":"29436:58:26"},"nodeType":"YulExpressionStatement","src":"29436:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29515:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29523:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29511:3:26"},"nodeType":"YulFunctionCall","src":"29511:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29528:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29504:6:26"},"nodeType":"YulFunctionCall","src":"29504:31:26"},"nodeType":"YulExpressionStatement","src":"29504:31:26"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29417:6:26","type":""}],"src":"29319:223:26"},{"body":{"nodeType":"YulBlock","src":"29694:220:26","statements":[{"nodeType":"YulAssignment","src":"29704:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29770:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29775:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29711:58:26"},"nodeType":"YulFunctionCall","src":"29711:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29704:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29876:3:26"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29787:88:26"},"nodeType":"YulFunctionCall","src":"29787:93:26"},"nodeType":"YulExpressionStatement","src":"29787:93:26"},{"nodeType":"YulAssignment","src":"29889:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29900:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29905:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29896:3:26"},"nodeType":"YulFunctionCall","src":"29896:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29889:3:26"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29682:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29690:3:26","type":""}],"src":"29548:366:26"},{"body":{"nodeType":"YulBlock","src":"30091:248:26","statements":[{"nodeType":"YulAssignment","src":"30101:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30113:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30124:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30109:3:26"},"nodeType":"YulFunctionCall","src":"30109:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30101:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30148:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30159:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30144:3:26"},"nodeType":"YulFunctionCall","src":"30144:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30167:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"30173:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30163:3:26"},"nodeType":"YulFunctionCall","src":"30163:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30137:6:26"},"nodeType":"YulFunctionCall","src":"30137:47:26"},"nodeType":"YulExpressionStatement","src":"30137:47:26"},{"nodeType":"YulAssignment","src":"30193:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30327:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30201:124:26"},"nodeType":"YulFunctionCall","src":"30201:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30193:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30071:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30086:4:26","type":""}],"src":"29920:419:26"},{"body":{"nodeType":"YulBlock","src":"30451:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30473:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"30481:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30469:3:26"},"nodeType":"YulFunctionCall","src":"30469:14:26"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"30485:27:26","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30462:6:26"},"nodeType":"YulFunctionCall","src":"30462:51:26"},"nodeType":"YulExpressionStatement","src":"30462:51:26"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30443:6:26","type":""}],"src":"30345:175:26"},{"body":{"nodeType":"YulBlock","src":"30672:220:26","statements":[{"nodeType":"YulAssignment","src":"30682:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30748:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30753:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30689:58:26"},"nodeType":"YulFunctionCall","src":"30689:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30682:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30854:3:26"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"30765:88:26"},"nodeType":"YulFunctionCall","src":"30765:93:26"},"nodeType":"YulExpressionStatement","src":"30765:93:26"},{"nodeType":"YulAssignment","src":"30867:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30878:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30883:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30874:3:26"},"nodeType":"YulFunctionCall","src":"30874:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30867:3:26"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30660:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30668:3:26","type":""}],"src":"30526:366:26"},{"body":{"nodeType":"YulBlock","src":"31069:248:26","statements":[{"nodeType":"YulAssignment","src":"31079:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31091:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31102:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31087:3:26"},"nodeType":"YulFunctionCall","src":"31087:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31079:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31126:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31137:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31122:3:26"},"nodeType":"YulFunctionCall","src":"31122:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31145:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"31151:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31141:3:26"},"nodeType":"YulFunctionCall","src":"31141:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31115:6:26"},"nodeType":"YulFunctionCall","src":"31115:47:26"},"nodeType":"YulExpressionStatement","src":"31115:47:26"},{"nodeType":"YulAssignment","src":"31171:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31305:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31179:124:26"},"nodeType":"YulFunctionCall","src":"31179:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31171:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31049:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31064:4:26","type":""}],"src":"30898:419:26"},{"body":{"nodeType":"YulBlock","src":"31429:131:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31451:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31459:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31447:3:26"},"nodeType":"YulFunctionCall","src":"31447:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"31463:34:26","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31440:6:26"},"nodeType":"YulFunctionCall","src":"31440:58:26"},"nodeType":"YulExpressionStatement","src":"31440:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31519:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31527:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31515:3:26"},"nodeType":"YulFunctionCall","src":"31515:15:26"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"31532:20:26","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31508:6:26"},"nodeType":"YulFunctionCall","src":"31508:45:26"},"nodeType":"YulExpressionStatement","src":"31508:45:26"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31421:6:26","type":""}],"src":"31323:237:26"},{"body":{"nodeType":"YulBlock","src":"31712:220:26","statements":[{"nodeType":"YulAssignment","src":"31722:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31788:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31793:2:26","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31729:58:26"},"nodeType":"YulFunctionCall","src":"31729:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31722:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31894:3:26"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"31805:88:26"},"nodeType":"YulFunctionCall","src":"31805:93:26"},"nodeType":"YulExpressionStatement","src":"31805:93:26"},{"nodeType":"YulAssignment","src":"31907:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31918:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31923:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31914:3:26"},"nodeType":"YulFunctionCall","src":"31914:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31907:3:26"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31700:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31708:3:26","type":""}],"src":"31566:366:26"},{"body":{"nodeType":"YulBlock","src":"32109:248:26","statements":[{"nodeType":"YulAssignment","src":"32119:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32131:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32142:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32127:3:26"},"nodeType":"YulFunctionCall","src":"32127:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32119:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32166:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32177:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32162:3:26"},"nodeType":"YulFunctionCall","src":"32162:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32185:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32191:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32181:3:26"},"nodeType":"YulFunctionCall","src":"32181:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32155:6:26"},"nodeType":"YulFunctionCall","src":"32155:47:26"},"nodeType":"YulExpressionStatement","src":"32155:47:26"},{"nodeType":"YulAssignment","src":"32211:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32345:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32219:124:26"},"nodeType":"YulFunctionCall","src":"32219:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32211:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32089:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32104:4:26","type":""}],"src":"31938:419:26"},{"body":{"nodeType":"YulBlock","src":"32421:40:26","statements":[{"nodeType":"YulAssignment","src":"32432:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32448:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32442:5:26"},"nodeType":"YulFunctionCall","src":"32442:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32432:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32404:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"32414:6:26","type":""}],"src":"32363:98:26"},{"body":{"nodeType":"YulBlock","src":"32562:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32579:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"32584:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32572:6:26"},"nodeType":"YulFunctionCall","src":"32572:19:26"},"nodeType":"YulExpressionStatement","src":"32572:19:26"},{"nodeType":"YulAssignment","src":"32600:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32619:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32624:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32615:3:26"},"nodeType":"YulFunctionCall","src":"32615:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"32600:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32534:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"32539:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32550:11:26","type":""}],"src":"32467:168:26"},{"body":{"nodeType":"YulBlock","src":"32731:270:26","statements":[{"nodeType":"YulVariableDeclaration","src":"32741:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32787:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"32755:31:26"},"nodeType":"YulFunctionCall","src":"32755:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"32745:6:26","type":""}]},{"nodeType":"YulAssignment","src":"32802:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32867:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"32872:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32809:57:26"},"nodeType":"YulFunctionCall","src":"32809:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32802:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32914:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"32921:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32910:3:26"},"nodeType":"YulFunctionCall","src":"32910:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"32928:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"32933:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"32888:21:26"},"nodeType":"YulFunctionCall","src":"32888:52:26"},"nodeType":"YulExpressionStatement","src":"32888:52:26"},{"nodeType":"YulAssignment","src":"32949:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32960:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"32987:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"32965:21:26"},"nodeType":"YulFunctionCall","src":"32965:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32956:3:26"},"nodeType":"YulFunctionCall","src":"32956:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32949:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32712:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"32719:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32727:3:26","type":""}],"src":"32641:360:26"},{"body":{"nodeType":"YulBlock","src":"33207:440:26","statements":[{"nodeType":"YulAssignment","src":"33217:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33229:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33240:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33225:3:26"},"nodeType":"YulFunctionCall","src":"33225:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33217:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33298:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33311:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33322:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33307:3:26"},"nodeType":"YulFunctionCall","src":"33307:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33254:43:26"},"nodeType":"YulFunctionCall","src":"33254:71:26"},"nodeType":"YulExpressionStatement","src":"33254:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33379:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33392:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33403:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33388:3:26"},"nodeType":"YulFunctionCall","src":"33388:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33335:43:26"},"nodeType":"YulFunctionCall","src":"33335:72:26"},"nodeType":"YulExpressionStatement","src":"33335:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33461:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33474:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33485:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33470:3:26"},"nodeType":"YulFunctionCall","src":"33470:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33417:43:26"},"nodeType":"YulFunctionCall","src":"33417:72:26"},"nodeType":"YulExpressionStatement","src":"33417:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33510:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33521:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33506:3:26"},"nodeType":"YulFunctionCall","src":"33506:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33530:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33536:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33526:3:26"},"nodeType":"YulFunctionCall","src":"33526:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33499:6:26"},"nodeType":"YulFunctionCall","src":"33499:48:26"},"nodeType":"YulExpressionStatement","src":"33499:48:26"},{"nodeType":"YulAssignment","src":"33556:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"33626:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"33635:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33564:61:26"},"nodeType":"YulFunctionCall","src":"33564:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33556:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33155:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33167:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33175:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33183:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33191:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33202:4:26","type":""}],"src":"33007:640:26"},{"body":{"nodeType":"YulBlock","src":"33715:79:26","statements":[{"nodeType":"YulAssignment","src":"33725:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"33740:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"33734:5:26"},"nodeType":"YulFunctionCall","src":"33734:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"33725:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33782:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"33756:25:26"},"nodeType":"YulFunctionCall","src":"33756:32:26"},"nodeType":"YulExpressionStatement","src":"33756:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"33693:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"33701:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"33709:5:26","type":""}],"src":"33653:141:26"},{"body":{"nodeType":"YulBlock","src":"33876:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"33922:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"33924:77:26"},"nodeType":"YulFunctionCall","src":"33924:79:26"},"nodeType":"YulExpressionStatement","src":"33924:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"33897:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33906:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33893:3:26"},"nodeType":"YulFunctionCall","src":"33893:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"33918:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"33889:3:26"},"nodeType":"YulFunctionCall","src":"33889:32:26"},"nodeType":"YulIf","src":"33886:119:26"},{"nodeType":"YulBlock","src":"34015:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34030:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"34044:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34034:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34059:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34104:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"34115:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34100:3:26"},"nodeType":"YulFunctionCall","src":"34100:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34124:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"34069:30:26"},"nodeType":"YulFunctionCall","src":"34069:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34059:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33846:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"33857:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"33869:6:26","type":""}],"src":"33800:349:26"},{"body":{"nodeType":"YulBlock","src":"34261:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34283:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"34291:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34279:3:26"},"nodeType":"YulFunctionCall","src":"34279:14:26"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"34295:34:26","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34272:6:26"},"nodeType":"YulFunctionCall","src":"34272:58:26"},"nodeType":"YulExpressionStatement","src":"34272:58:26"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34253:6:26","type":""}],"src":"34155:182:26"},{"body":{"nodeType":"YulBlock","src":"34489:220:26","statements":[{"nodeType":"YulAssignment","src":"34499:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34565:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34570:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34506:58:26"},"nodeType":"YulFunctionCall","src":"34506:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34499:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34671:3:26"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"34582:88:26"},"nodeType":"YulFunctionCall","src":"34582:93:26"},"nodeType":"YulExpressionStatement","src":"34582:93:26"},{"nodeType":"YulAssignment","src":"34684:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34695:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34700:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34691:3:26"},"nodeType":"YulFunctionCall","src":"34691:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34684:3:26"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34477:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34485:3:26","type":""}],"src":"34343:366:26"},{"body":{"nodeType":"YulBlock","src":"34886:248:26","statements":[{"nodeType":"YulAssignment","src":"34896:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34908:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34919:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34904:3:26"},"nodeType":"YulFunctionCall","src":"34904:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34896:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34943:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34954:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34939:3:26"},"nodeType":"YulFunctionCall","src":"34939:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34962:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"34968:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34958:3:26"},"nodeType":"YulFunctionCall","src":"34958:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34932:6:26"},"nodeType":"YulFunctionCall","src":"34932:47:26"},"nodeType":"YulExpressionStatement","src":"34932:47:26"},{"nodeType":"YulAssignment","src":"34988:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35122:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34996:124:26"},"nodeType":"YulFunctionCall","src":"34996:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34988:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34866:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34881:4:26","type":""}],"src":"34715:419:26"},{"body":{"nodeType":"YulBlock","src":"35246:72:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35268:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"35276:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35264:3:26"},"nodeType":"YulFunctionCall","src":"35264:14:26"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"35280:30:26","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35257:6:26"},"nodeType":"YulFunctionCall","src":"35257:54:26"},"nodeType":"YulExpressionStatement","src":"35257:54:26"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35238:6:26","type":""}],"src":"35140:178:26"},{"body":{"nodeType":"YulBlock","src":"35470:220:26","statements":[{"nodeType":"YulAssignment","src":"35480:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35546:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35551:2:26","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35487:58:26"},"nodeType":"YulFunctionCall","src":"35487:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35480:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35652:3:26"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"35563:88:26"},"nodeType":"YulFunctionCall","src":"35563:93:26"},"nodeType":"YulExpressionStatement","src":"35563:93:26"},{"nodeType":"YulAssignment","src":"35665:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35676:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"35681:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35672:3:26"},"nodeType":"YulFunctionCall","src":"35672:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35665:3:26"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35458:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35466:3:26","type":""}],"src":"35324:366:26"},{"body":{"nodeType":"YulBlock","src":"35867:248:26","statements":[{"nodeType":"YulAssignment","src":"35877:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35889:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35900:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35885:3:26"},"nodeType":"YulFunctionCall","src":"35885:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35877:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35924:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35935:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35920:3:26"},"nodeType":"YulFunctionCall","src":"35920:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35943:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35949:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35939:3:26"},"nodeType":"YulFunctionCall","src":"35939:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35913:6:26"},"nodeType":"YulFunctionCall","src":"35913:47:26"},"nodeType":"YulExpressionStatement","src":"35913:47:26"},{"nodeType":"YulAssignment","src":"35969:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36103:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35977:124:26"},"nodeType":"YulFunctionCall","src":"35977:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35969:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35847:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35862:4:26","type":""}],"src":"35696:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_int256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_int256_to_t_int256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_int256(value))\n    }\n\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_int256_to_t_int256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30(memPtr) {\n\n        mstore(add(memPtr, 0), \"URI Query for nonexistent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3c2f48b528752f34e1c72b197dea3968e0a211eedde5e2726a8a7928b77ef30_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(memPtr) {\n\n        mstore(add(memPtr, 0), 0x7b226e616d65223a220000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 9)\n        store_literal_in_memory_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832(pos)\n        end := add(pos, 9)\n    }\n\n    function store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(memPtr) {\n\n        mstore(add(memPtr, 0), 0x222c20226465736372697074696f6e223a22416e204e46542074686174206368)\n\n        mstore(add(memPtr, 32), \"anges based on the Chainlink Fee\")\n\n        mstore(add(memPtr, 64), 0x64222c2000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 68)\n        store_literal_in_memory_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574(pos)\n        end := add(pos, 68)\n    }\n\n    function store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(memPtr) {\n\n        mstore(add(memPtr, 0), 0x2261747472696275746573223a205b7b2274726169745f74797065223a202263)\n\n        mstore(add(memPtr, 32), 0x6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d616765)\n\n        mstore(add(memPtr, 64), 0x223a220000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 67)\n        store_literal_in_memory_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b(pos)\n        end := add(pos, 67)\n    }\n\n    function store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(memPtr) {\n\n        mstore(add(memPtr, 0), 0x227d000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475(pos)\n        end := add(pos, 2)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_t_string_memory_ptr_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_t_string_memory_ptr_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_14271abadab347880c45d45d3abf3dce36bb4aa23c658e4207d08ac9b3f38832_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_76a9acf9351af4a2b564aee168f637436b635f5c049291152cc83de2bf1e9574_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_stringliteral_eec1017ae2cc3fb30e992b0f7eb2b1bf087a2459e64be6d4982acb726b2e277b_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        pos := abi_encode_t_stringliteral_835b459273672627bbafc3a2eded65187a632f4128bdc79e126c7ef579a27475_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"4327":[{"length":32,"start":2653}]},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101005760003560e01c80636352211e11610097578063b88d4fde11610066578063b88d4fde146102bd578063c87b56dd146102d9578063e12f64b514610309578063e985e9c51461033957610100565b80636352211e1461022357806370a082311461025357806395d89b4114610283578063a22cb465146102a157610100565b80631e930812116100d35780631e9308121461019f57806323b872dd146101bb57806330d871c6146101d757806342842e0e1461020757610100565b806301ffc9a71461010557806306fdde0314610135578063081812fc14610153578063095ea7b314610183575b600080fd5b61011f600480360381019061011a9190611b0f565b610369565b60405161012c9190611b57565b60405180910390f35b61013d61044b565b60405161014a9190611c0b565b60405180910390f35b61016d60048036038101906101689190611c63565b6104dd565b60405161017a9190611cd1565b60405180910390f35b61019d60048036038101906101989190611d18565b610523565b005b6101b960048036038101906101b49190611d8e565b61063b565b005b6101d560048036038101906101d09190611dbb565b6106b3565b005b6101f160048036038101906101ec9190611f43565b610713565b6040516101fe9190611c0b565b60405180910390f35b610221600480360381019061021c9190611dbb565b6107a6565b005b61023d60048036038101906102389190611c63565b6107c6565b60405161024a9190611cd1565b60405180910390f35b61026d60048036038101906102689190611f8c565b61084d565b60405161027a9190611fc8565b60405180910390f35b61028b610905565b6040516102989190611c0b565b60405180910390f35b6102bb60048036038101906102b6919061200f565b610997565b005b6102d760048036038101906102d291906120f0565b6109ad565b005b6102f360048036038101906102ee9190611c63565b610a0f565b6040516103009190611c0b565b60405180910390f35b610323600480360381019061031e9190611c63565b610c98565b6040516103309190612182565b60405180910390f35b610353600480360381019061034e919061219d565b610cb0565b6040516103609190611b57565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043457507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610444575061044382610ebd565b5b9050919050565b60606000805461045a9061220c565b80601f01602080910402602001604051908101604052809291908181526020018280546104869061220c565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b5050505050905090565b60006104e882610f27565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061052e826107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561059f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610596906122b0565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166105be610f72565b73ffffffffffffffffffffffffffffffffffffffff1614806105ed57506105ec816105e7610f72565b610cb0565b5b61062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390612342565b60405180910390fd5b6106368383610f7a565b505050565b806009600060065481526020019081526020016000208190555061066133600654611033565b60016006546106709190612391565b6006819055506006547f3431855aa1e5d3c46426c18bf530200c661b04a7f8c56945fbc40a94980ed0c4826040516106a89190612182565b60405180910390a250565b6106c46106be610f72565b82611051565b610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90612459565b60405180910390fd5b61070e8383836110e6565b505050565b606060006040518060400160405280601a81526020017f646174613a696d6167652f7376672b786d6c3b6261736536342c000000000000815250905060006107798460405160200161076591906124b5565b604051602081830303815290604052610d44565b9050818160405160200161078e9291906124cc565b60405160208183030381529060405292505050919050565b6107c1838383604051806020016040528060008152506109ad565b505050565b6000806107d2836113e0565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610844576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083b9061253c565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b5906125ce565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600180546109149061220c565b80601f01602080910402602001604051908101604052809291908181526020018280546109409061220c565b801561098d5780601f106109625761010080835404028352916020019161098d565b820191906000526020600020905b81548152906001019060200180831161097057829003601f168201915b5050505050905090565b6109a96109a2610f72565b838361141d565b5050565b6109be6109b8610f72565b83611051565b6109fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f490612459565b60405180910390fd5b610a098484848461158a565b50505050565b6060610a1a826115e6565b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a509061263a565b60405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610ac157600080fd5b505afa158015610ad5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af991906126c6565b505050915050600060078054610b0e9061220c565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3a9061220c565b8015610b875780601f10610b5c57610100808354040283529160200191610b87565b820191906000526020600020905b815481529060010190602001808311610b6a57829003601f168201915b5050505050905060096000858152602001908152602001600020548212610c365760088054610bb59061220c565b80601f0160208091040260200160405190810160405280929190818152602001828054610be19061220c565b8015610c2e5780601f10610c0357610100808354040283529160200191610c2e565b820191906000526020600020905b815481529060010190602001808311610c1157829003601f168201915b505050505090505b610c3e611627565b610c6f610c4961044b565b83604051602001610c5b929190612909565b604051602081830303815290604052610d44565b604051602001610c809291906124cc565b60405160208183030381529060405292505050919050565b60096020528060005260406000206000915090505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6060600082511415610d6757604051806020016040528060008152509050610eb8565b6000604051806060016040528060408152602001612df16040913990506000600360028551610d969190612391565b610da09190612988565b6004610dac91906129b9565b90506000602082610dbd9190612391565b67ffffffffffffffff811115610dd657610dd5611e18565b5b6040519080825280601f01601f191660200182016040528015610e085781602001600182028036833780820191505090505b509050818152600183018586518101602084015b81831015610e77576003830192508251603f8160121c168501518253600182019150603f81600c1c168501518253600182019150603f8160061c168501518253600182019150603f8116850151825360018201915050610e1c565b600389510660018114610e915760028114610ea157610eac565b613d3d60f01b6002830352610eac565b603d60f81b60018303525b50505050508093505050505b919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b610f30816115e6565b610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f669061253c565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610fed836107c6565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b61104d828260405180602001604052806000815250611664565b5050565b60008061105d836107c6565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061109f575061109e8185610cb0565b5b806110dd57508373ffffffffffffffffffffffffffffffffffffffff166110c5846104dd565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16611106826107c6565b73ffffffffffffffffffffffffffffffffffffffff161461115c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115390612a85565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156111cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c390612b17565b60405180910390fd5b6111d983838360016116bf565b8273ffffffffffffffffffffffffffffffffffffffff166111f9826107c6565b73ffffffffffffffffffffffffffffffffffffffff161461124f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124690612a85565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46113db83838360016116c5565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561148c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148390612b83565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161157d9190611b57565b60405180910390a3505050565b6115958484846110e6565b6115a1848484846116cb565b6115e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115d790612c15565b60405180910390fd5b50505050565b60008073ffffffffffffffffffffffffffffffffffffffff16611608836113e0565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b60606040518060400160405280601d81526020017f646174613a6170706c69636174696f6e2f6a736f6e3b6261736536342c000000815250905090565b61166e8383611862565b61167b60008484846116cb565b6116ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b190612c15565b60405180910390fd5b505050565b50505050565b50505050565b60006116ec8473ffffffffffffffffffffffffffffffffffffffff16611a80565b15611855578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611715610f72565b8786866040518563ffffffff1660e01b81526004016117379493929190612c8a565b602060405180830381600087803b15801561175157600080fd5b505af192505050801561178257506040513d601f19601f8201168201806040525081019061177f9190612ceb565b60015b611805573d80600081146117b2576040519150601f19603f3d011682016040523d82523d6000602084013e6117b7565b606091505b506000815114156117fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117f490612c15565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061185a565b600190505b949350505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c990612d64565b60405180910390fd5b6118db816115e6565b1561191b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161191290612dd0565b60405180910390fd5b6119296000838360016116bf565b611932816115e6565b15611972576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196990612dd0565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4611a7c6000838360016116c5565b5050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611aec81611ab7565b8114611af757600080fd5b50565b600081359050611b0981611ae3565b92915050565b600060208284031215611b2557611b24611aad565b5b6000611b3384828501611afa565b91505092915050565b60008115159050919050565b611b5181611b3c565b82525050565b6000602082019050611b6c6000830184611b48565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bac578082015181840152602081019050611b91565b83811115611bbb576000848401525b50505050565b6000601f19601f8301169050919050565b6000611bdd82611b72565b611be78185611b7d565b9350611bf7818560208601611b8e565b611c0081611bc1565b840191505092915050565b60006020820190508181036000830152611c258184611bd2565b905092915050565b6000819050919050565b611c4081611c2d565b8114611c4b57600080fd5b50565b600081359050611c5d81611c37565b92915050565b600060208284031215611c7957611c78611aad565b5b6000611c8784828501611c4e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cbb82611c90565b9050919050565b611ccb81611cb0565b82525050565b6000602082019050611ce66000830184611cc2565b92915050565b611cf581611cb0565b8114611d0057600080fd5b50565b600081359050611d1281611cec565b92915050565b60008060408385031215611d2f57611d2e611aad565b5b6000611d3d85828601611d03565b9250506020611d4e85828601611c4e565b9150509250929050565b6000819050919050565b611d6b81611d58565b8114611d7657600080fd5b50565b600081359050611d8881611d62565b92915050565b600060208284031215611da457611da3611aad565b5b6000611db284828501611d79565b91505092915050565b600080600060608486031215611dd457611dd3611aad565b5b6000611de286828701611d03565b9350506020611df386828701611d03565b9250506040611e0486828701611c4e565b9150509250925092565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e5082611bc1565b810181811067ffffffffffffffff82111715611e6f57611e6e611e18565b5b80604052505050565b6000611e82611aa3565b9050611e8e8282611e47565b919050565b600067ffffffffffffffff821115611eae57611ead611e18565b5b611eb782611bc1565b9050602081019050919050565b82818337600083830152505050565b6000611ee6611ee184611e93565b611e78565b905082815260208101848484011115611f0257611f01611e13565b5b611f0d848285611ec4565b509392505050565b600082601f830112611f2a57611f29611e0e565b5b8135611f3a848260208601611ed3565b91505092915050565b600060208284031215611f5957611f58611aad565b5b600082013567ffffffffffffffff811115611f7757611f76611ab2565b5b611f8384828501611f15565b91505092915050565b600060208284031215611fa257611fa1611aad565b5b6000611fb084828501611d03565b91505092915050565b611fc281611c2d565b82525050565b6000602082019050611fdd6000830184611fb9565b92915050565b611fec81611b3c565b8114611ff757600080fd5b50565b60008135905061200981611fe3565b92915050565b6000806040838503121561202657612025611aad565b5b600061203485828601611d03565b925050602061204585828601611ffa565b9150509250929050565b600067ffffffffffffffff82111561206a57612069611e18565b5b61207382611bc1565b9050602081019050919050565b600061209361208e8461204f565b611e78565b9050828152602081018484840111156120af576120ae611e13565b5b6120ba848285611ec4565b509392505050565b600082601f8301126120d7576120d6611e0e565b5b81356120e7848260208601612080565b91505092915050565b6000806000806080858703121561210a57612109611aad565b5b600061211887828801611d03565b945050602061212987828801611d03565b935050604061213a87828801611c4e565b925050606085013567ffffffffffffffff81111561215b5761215a611ab2565b5b612167878288016120c2565b91505092959194509250565b61217c81611d58565b82525050565b60006020820190506121976000830184612173565b92915050565b600080604083850312156121b4576121b3611aad565b5b60006121c285828601611d03565b92505060206121d385828601611d03565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061222457607f821691505b60208210811415612238576122376121dd565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b600061229a602183611b7d565b91506122a58261223e565b604082019050919050565b600060208201905081810360008301526122c98161228d565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b600061232c603d83611b7d565b9150612337826122d0565b604082019050919050565b6000602082019050818103600083015261235b8161231f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061239c82611c2d565b91506123a783611c2d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156123dc576123db612362565b5b828201905092915050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000612443602d83611b7d565b915061244e826123e7565b604082019050919050565b6000602082019050818103600083015261247281612436565b9050919050565b600081905092915050565b600061248f82611b72565b6124998185612479565b93506124a9818560208601611b8e565b80840191505092915050565b60006124c18284612484565b915081905092915050565b60006124d88285612484565b91506124e48284612484565b91508190509392505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000612526601883611b7d565b9150612531826124f0565b602082019050919050565b6000602082019050818103600083015261255581612519565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006125b8602983611b7d565b91506125c38261255c565b604082019050919050565b600060208201905081810360008301526125e7816125ab565b9050919050565b7f55524920517565727920666f72206e6f6e6578697374656e7420746f6b656e00600082015250565b6000612624601f83611b7d565b915061262f826125ee565b602082019050919050565b6000602082019050818103600083015261265381612617565b9050919050565b600069ffffffffffffffffffff82169050919050565b6126798161265a565b811461268457600080fd5b50565b60008151905061269681612670565b92915050565b6000815190506126ab81611d62565b92915050565b6000815190506126c081611c37565b92915050565b600080600080600060a086880312156126e2576126e1611aad565b5b60006126f088828901612687565b95505060206127018882890161269c565b9450506040612712888289016126b1565b9350506060612723888289016126b1565b925050608061273488828901612687565b9150509295509295909350565b7f7b226e616d65223a220000000000000000000000000000000000000000000000600082015250565b6000612777600983612479565b915061278282612741565b600982019050919050565b7f222c20226465736372697074696f6e223a22416e204e4654207468617420636860008201527f616e676573206261736564206f6e2074686520436861696e6c696e6b2046656560208201527f64222c2000000000000000000000000000000000000000000000000000000000604082015250565b600061280f604483612479565b915061281a8261278d565b604482019050919050565b7f2261747472696275746573223a205b7b2274726169745f74797065223a20226360008201527f6f6f6c6e657373222c202276616c7565223a203130307d5d2c2022696d61676560208201527f223a220000000000000000000000000000000000000000000000000000000000604082015250565b60006128a7604383612479565b91506128b282612825565b604382019050919050565b7f227d000000000000000000000000000000000000000000000000000000000000600082015250565b60006128f3600283612479565b91506128fe826128bd565b600282019050919050565b60006129148261276a565b91506129208285612484565b915061292b82612802565b91506129368261289a565b91506129428284612484565b915061294d826128e6565b91508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061299382611c2d565b915061299e83611c2d565b9250826129ae576129ad612959565b5b828204905092915050565b60006129c482611c2d565b91506129cf83611c2d565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612a0857612a07612362565b5b828202905092915050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000612a6f602583611b7d565b9150612a7a82612a13565b604082019050919050565b60006020820190508181036000830152612a9e81612a62565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000612b01602483611b7d565b9150612b0c82612aa5565b604082019050919050565b60006020820190508181036000830152612b3081612af4565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000612b6d601983611b7d565b9150612b7882612b37565b602082019050919050565b60006020820190508181036000830152612b9c81612b60565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000612bff603283611b7d565b9150612c0a82612ba3565b604082019050919050565b60006020820190508181036000830152612c2e81612bf2565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000612c5c82612c35565b612c668185612c40565b9350612c76818560208601611b8e565b612c7f81611bc1565b840191505092915050565b6000608082019050612c9f6000830187611cc2565b612cac6020830186611cc2565b612cb96040830185611fb9565b8181036060830152612ccb8184612c51565b905095945050505050565b600081519050612ce581611ae3565b92915050565b600060208284031215612d0157612d00611aad565b5b6000612d0f84828501612cd6565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000612d4e602083611b7d565b9150612d5982612d18565b602082019050919050565b60006020820190508181036000830152612d7d81612d41565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000612dba601c83611b7d565b9150612dc582612d84565b602082019050919050565b60006020820190508181036000830152612de981612dad565b905091905056fe4142434445464748494a4b4c4d4e4f505152535455565758595a6162636465666768696a6b6c6d6e6f707172737475767778797a303132333435363738392b2fa264697066735822122036d26864b25dcb397130cd4324a9f359de68fcda93524ee5a887e4a61947f33964736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE12F64B5 EQ PUSH2 0x309 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x339 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A1 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1E930812 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x1E930812 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x30D871C6 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x207 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0x1B0F JUMP JUMPDEST PUSH2 0x369 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D18 JUMP JUMPDEST PUSH2 0x523 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x1D8E JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x6B3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x1F43 JUMP JUMPDEST PUSH2 0x713 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x1DBB JUMP JUMPDEST PUSH2 0x7A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24A SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x268 SWAP2 SWAP1 PUSH2 0x1F8C JUMP JUMPDEST PUSH2 0x84D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1FC8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28B PUSH2 0x905 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x298 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B6 SWAP2 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH2 0x997 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x20F0 JUMP JUMPDEST PUSH2 0x9AD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x300 SWAP2 SWAP1 PUSH2 0x1C0B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31E SWAP2 SWAP1 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x330 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x353 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34E SWAP2 SWAP1 PUSH2 0x219D JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x360 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x434 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x444 JUMPI POP PUSH2 0x443 DUP3 PUSH2 0xEBD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x45A SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x486 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4A8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4B6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E8 DUP3 PUSH2 0xF27 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x52E DUP3 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x59F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x596 SWAP1 PUSH2 0x22B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5BE PUSH2 0xF72 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5ED JUMPI POP PUSH2 0x5EC DUP2 PUSH2 0x5E7 PUSH2 0xF72 JUMP JUMPDEST PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST PUSH2 0x62C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x623 SWAP1 PUSH2 0x2342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x636 DUP4 DUP4 PUSH2 0xF7A JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x9 PUSH1 0x0 PUSH1 0x6 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x661 CALLER PUSH1 0x6 SLOAD PUSH2 0x1033 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 SLOAD PUSH2 0x670 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH32 0x3431855AA1E5D3C46426C18BF530200C661B04A7F8C56945FBC40A94980ED0C4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x6A8 SWAP2 SWAP1 PUSH2 0x2182 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x6C4 PUSH2 0x6BE PUSH2 0xF72 JUMP JUMPDEST DUP3 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x70E DUP4 DUP4 DUP4 PUSH2 0x10E6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A696D6167652F7376672B786D6C3B6261736536342C000000000000 DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 PUSH2 0x779 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0x24B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD44 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x78E SWAP3 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C1 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x7D2 DUP4 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x844 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83B SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8BE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B5 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x914 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x940 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0x98D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x962 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x98D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x970 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A9 PUSH2 0x9A2 PUSH2 0xF72 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x141D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9BE PUSH2 0x9B8 PUSH2 0xF72 JUMP JUMPDEST DUP4 PUSH2 0x1051 JUMP JUMPDEST PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F4 SWAP1 PUSH2 0x2459 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA09 DUP5 DUP5 DUP5 DUP5 PUSH2 0x158A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA1A DUP3 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x263A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAD5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAF9 SWAP2 SWAP1 PUSH2 0x26C6 JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 PUSH1 0x7 DUP1 SLOAD PUSH2 0xB0E SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB3A SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB5C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x9 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 SLT PUSH2 0xC36 JUMPI PUSH1 0x8 DUP1 SLOAD PUSH2 0xBB5 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBE1 SWAP1 PUSH2 0x220C JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC2E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC03 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC2E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC11 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP JUMPDEST PUSH2 0xC3E PUSH2 0x1627 JUMP JUMPDEST PUSH2 0xC6F PUSH2 0xC49 PUSH2 0x44B JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC5B SWAP3 SWAP2 SWAP1 PUSH2 0x2909 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xD44 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC80 SWAP3 SWAP2 SWAP1 PUSH2 0x24CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD EQ ISZERO PUSH2 0xD67 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP PUSH2 0xEB8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x40 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2DF1 PUSH1 0x40 SWAP2 CODECOPY SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x2 DUP6 MLOAD PUSH2 0xD96 SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH2 0xDA0 SWAP2 SWAP1 PUSH2 0x2988 JUMP JUMPDEST PUSH1 0x4 PUSH2 0xDAC SWAP2 SWAP1 PUSH2 0x29B9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x20 DUP3 PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x2391 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xDD6 JUMPI PUSH2 0xDD5 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE08 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP6 DUP7 MLOAD DUP2 ADD PUSH1 0x20 DUP5 ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 POP DUP3 MLOAD PUSH1 0x3F DUP2 PUSH1 0x12 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0xC SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 PUSH1 0x6 SHR AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x3F DUP2 AND DUP6 ADD MLOAD DUP3 MSTORE8 PUSH1 0x1 DUP3 ADD SWAP2 POP POP PUSH2 0xE1C JUMP JUMPDEST PUSH1 0x3 DUP10 MLOAD MOD PUSH1 0x1 DUP2 EQ PUSH2 0xE91 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xEA1 JUMPI PUSH2 0xEAC JUMP JUMPDEST PUSH2 0x3D3D PUSH1 0xF0 SHL PUSH1 0x2 DUP4 SUB MSTORE PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x3D PUSH1 0xF8 SHL PUSH1 0x1 DUP4 SUB MSTORE JUMPDEST POP POP POP POP POP DUP1 SWAP4 POP POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF30 DUP2 PUSH2 0x15E6 JUMP JUMPDEST PUSH2 0xF6F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF66 SWAP1 PUSH2 0x253C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFED DUP4 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x104D DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1664 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x105D DUP4 PUSH2 0x7C6 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x109F JUMPI POP PUSH2 0x109E DUP2 DUP6 PUSH2 0xCB0 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x10DD JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10C5 DUP5 PUSH2 0x4DD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1106 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x11CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C3 SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11D9 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16BF JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11F9 DUP3 PUSH2 0x7C6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x124F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1246 SWAP1 PUSH2 0x2A85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x13DB DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x148C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1483 SWAP1 PUSH2 0x2B83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x157D SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1595 DUP5 DUP5 DUP5 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x15A1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x15E0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15D7 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1608 DUP4 PUSH2 0x13E0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x646174613A6170706C69636174696F6E2F6A736F6E3B6261736536342C000000 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x166E DUP4 DUP4 PUSH2 0x1862 JUMP JUMPDEST PUSH2 0x167B PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x16CB JUMP JUMPDEST PUSH2 0x16BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B1 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16EC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A80 JUMP JUMPDEST ISZERO PUSH2 0x1855 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1715 PUSH2 0xF72 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1737 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1751 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1782 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x177F SWAP2 SWAP1 PUSH2 0x2CEB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1805 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x17B2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x17B7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x17FD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17F4 SWAP1 PUSH2 0x2C15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x185A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x18D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C9 SWAP1 PUSH2 0x2D64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18DB DUP2 PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x191B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1912 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1929 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16BF JUMP JUMPDEST PUSH2 0x1932 DUP2 PUSH2 0x15E6 JUMP JUMPDEST ISZERO PUSH2 0x1972 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1969 SWAP1 PUSH2 0x2DD0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1A7C PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x16C5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AEC DUP2 PUSH2 0x1AB7 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B09 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B25 JUMPI PUSH2 0x1B24 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B33 DUP5 DUP3 DUP6 ADD PUSH2 0x1AFA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B51 DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B6C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1B48 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1BAC JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1B91 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1BBB JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BDD DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x1BE7 DUP2 DUP6 PUSH2 0x1B7D JUMP JUMPDEST SWAP4 POP PUSH2 0x1BF7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x1C00 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C25 DUP2 DUP5 PUSH2 0x1BD2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C40 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP2 EQ PUSH2 0x1C4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C5D DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C79 JUMPI PUSH2 0x1C78 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C87 DUP5 DUP3 DUP6 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBB DUP3 PUSH2 0x1C90 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CCB DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CE6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CC2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CF5 DUP2 PUSH2 0x1CB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D12 DUP2 PUSH2 0x1CEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D2F JUMPI PUSH2 0x1D2E PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D3D DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D4E DUP6 DUP3 DUP7 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6B DUP2 PUSH2 0x1D58 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D88 DUP2 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DA4 JUMPI PUSH2 0x1DA3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1DD4 JUMPI PUSH2 0x1DD3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE2 DUP7 DUP3 DUP8 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1DF3 DUP7 DUP3 DUP8 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E04 DUP7 DUP3 DUP8 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1E50 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E82 PUSH2 0x1AA3 JUMP JUMPDEST SWAP1 POP PUSH2 0x1E8E DUP3 DUP3 PUSH2 0x1E47 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1EAE JUMPI PUSH2 0x1EAD PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x1EB7 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EE6 PUSH2 0x1EE1 DUP5 PUSH2 0x1E93 JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x1E13 JUMP JUMPDEST JUMPDEST PUSH2 0x1F0D DUP5 DUP3 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1F2A JUMPI PUSH2 0x1F29 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1F3A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1ED3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F59 JUMPI PUSH2 0x1F58 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F76 PUSH2 0x1AB2 JUMP JUMPDEST JUMPDEST PUSH2 0x1F83 DUP5 DUP3 DUP6 ADD PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA2 JUMPI PUSH2 0x1FA1 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FB0 DUP5 DUP3 DUP6 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FC2 DUP2 PUSH2 0x1C2D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FDD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FEC DUP2 PUSH2 0x1B3C JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2009 DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2026 JUMPI PUSH2 0x2025 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2034 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2045 DUP6 DUP3 DUP7 ADD PUSH2 0x1FFA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x206A JUMPI PUSH2 0x2069 PUSH2 0x1E18 JUMP JUMPDEST JUMPDEST PUSH2 0x2073 DUP3 PUSH2 0x1BC1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2093 PUSH2 0x208E DUP5 PUSH2 0x204F JUMP JUMPDEST PUSH2 0x1E78 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x20AF JUMPI PUSH2 0x20AE PUSH2 0x1E13 JUMP JUMPDEST JUMPDEST PUSH2 0x20BA DUP5 DUP3 DUP6 PUSH2 0x1EC4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20D7 JUMPI PUSH2 0x20D6 PUSH2 0x1E0E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x20E7 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2080 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x210A JUMPI PUSH2 0x2109 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2118 DUP8 DUP3 DUP9 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2129 DUP8 DUP3 DUP9 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x213A DUP8 DUP3 DUP9 ADD PUSH2 0x1C4E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x215B JUMPI PUSH2 0x215A PUSH2 0x1AB2 JUMP JUMPDEST JUMPDEST PUSH2 0x2167 DUP8 DUP3 DUP9 ADD PUSH2 0x20C2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x217C DUP2 PUSH2 0x1D58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2197 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2173 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21B4 JUMPI PUSH2 0x21B3 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21C2 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21D3 DUP6 DUP3 DUP7 ADD PUSH2 0x1D03 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2224 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2238 JUMPI PUSH2 0x2237 PUSH2 0x21DD JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x229A PUSH1 0x21 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x22A5 DUP3 PUSH2 0x223E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x22C9 DUP2 PUSH2 0x228D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232C PUSH1 0x3D DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2337 DUP3 PUSH2 0x22D0 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x231F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x239C DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x23A7 DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x23DC JUMPI PUSH2 0x23DB PUSH2 0x2362 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2443 PUSH1 0x2D DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x244E DUP3 PUSH2 0x23E7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2472 DUP2 PUSH2 0x2436 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x248F DUP3 PUSH2 0x1B72 JUMP JUMPDEST PUSH2 0x2499 DUP2 DUP6 PUSH2 0x2479 JUMP JUMPDEST SWAP4 POP PUSH2 0x24A9 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24C1 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24D8 DUP3 DUP6 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E4 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2526 PUSH1 0x18 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2531 DUP3 PUSH2 0x24F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2555 DUP2 PUSH2 0x2519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25B8 PUSH1 0x29 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x25C3 DUP3 PUSH2 0x255C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x25E7 DUP2 PUSH2 0x25AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x55524920517565727920666F72206E6F6E6578697374656E7420746F6B656E00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2624 PUSH1 0x1F DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x262F DUP3 PUSH2 0x25EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2653 DUP2 PUSH2 0x2617 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2679 DUP2 PUSH2 0x265A JUMP JUMPDEST DUP2 EQ PUSH2 0x2684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2696 DUP2 PUSH2 0x2670 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26AB DUP2 PUSH2 0x1D62 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x26C0 DUP2 PUSH2 0x1C37 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x26E2 JUMPI PUSH2 0x26E1 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26F0 DUP9 DUP3 DUP10 ADD PUSH2 0x2687 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2701 DUP9 DUP3 DUP10 ADD PUSH2 0x269C JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2712 DUP9 DUP3 DUP10 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2723 DUP9 DUP3 DUP10 ADD PUSH2 0x26B1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2734 DUP9 DUP3 DUP10 ADD PUSH2 0x2687 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x7B226E616D65223A220000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2777 PUSH1 0x9 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x2782 DUP3 PUSH2 0x2741 JUMP JUMPDEST PUSH1 0x9 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x222C20226465736372697074696F6E223A22416E204E46542074686174206368 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616E676573206261736564206F6E2074686520436861696E6C696E6B20466565 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x64222C2000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x280F PUSH1 0x44 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x281A DUP3 PUSH2 0x278D JUMP JUMPDEST PUSH1 0x44 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x2261747472696275746573223A205B7B2274726169745F74797065223A202263 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F6F6C6E657373222C202276616C7565223A203130307D5D2C2022696D616765 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x223A220000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28A7 PUSH1 0x43 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x28B2 DUP3 PUSH2 0x2825 JUMP JUMPDEST PUSH1 0x43 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x227D000000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x28F3 PUSH1 0x2 DUP4 PUSH2 0x2479 JUMP JUMPDEST SWAP2 POP PUSH2 0x28FE DUP3 PUSH2 0x28BD JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2914 DUP3 PUSH2 0x276A JUMP JUMPDEST SWAP2 POP PUSH2 0x2920 DUP3 DUP6 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x292B DUP3 PUSH2 0x2802 JUMP JUMPDEST SWAP2 POP PUSH2 0x2936 DUP3 PUSH2 0x289A JUMP JUMPDEST SWAP2 POP PUSH2 0x2942 DUP3 DUP5 PUSH2 0x2484 JUMP JUMPDEST SWAP2 POP PUSH2 0x294D DUP3 PUSH2 0x28E6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2993 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x299E DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29AE JUMPI PUSH2 0x29AD PUSH2 0x2959 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29C4 DUP3 PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP PUSH2 0x29CF DUP4 PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2A08 JUMPI PUSH2 0x2A07 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A6F PUSH1 0x25 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2A7A DUP3 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2A9E DUP2 PUSH2 0x2A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B01 PUSH1 0x24 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2AA5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B30 DUP2 PUSH2 0x2AF4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B6D PUSH1 0x19 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2B78 DUP3 PUSH2 0x2B37 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2B9C DUP2 PUSH2 0x2B60 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BFF PUSH1 0x32 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2C0A DUP3 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2C2E DUP2 PUSH2 0x2BF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C5C DUP3 PUSH2 0x2C35 JUMP JUMPDEST PUSH2 0x2C66 DUP2 DUP6 PUSH2 0x2C40 JUMP JUMPDEST SWAP4 POP PUSH2 0x2C76 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0x2C7F DUP2 PUSH2 0x1BC1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2C9F PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2CAC PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x2CB9 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB9 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2CCB DUP2 DUP5 PUSH2 0x2C51 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2CE5 DUP2 PUSH2 0x1AE3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D01 JUMPI PUSH2 0x2D00 PUSH2 0x1AAD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2D0F DUP5 DUP3 DUP6 ADD PUSH2 0x2CD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D4E PUSH1 0x20 DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2D59 DUP3 PUSH2 0x2D18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2D7D DUP2 PUSH2 0x2D41 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DBA PUSH1 0x1C DUP4 PUSH2 0x1B7D JUMP JUMPDEST SWAP2 POP PUSH2 0x2DC5 DUP3 PUSH2 0x2D84 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2DE9 DUP2 PUSH2 0x2DAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID COINBASE TIMESTAMP NUMBER DIFFICULTY GASLIMIT CHAINID SELFBALANCE BASEFEE 0x49 0x4A 0x4B 0x4C 0x4D 0x4E 0x4F POP MLOAD MSTORE MSTORE8 SLOAD SSTORE JUMP JUMPI PC MSIZE GAS PUSH2 0x6263 PUSH5 0x6566676869 PUSH11 0x6B6C6D6E6F707172737475 PUSH23 0x7778797A303132333435363738392B2FA2646970667358 0x22 SLT KECCAK256 CALLDATASIZE 0xD2 PUSH9 0x64B25DCB397130CD43 0x24 0xA9 RETURN MSIZE 0xDE PUSH9 0xFCDA93524EE5A887E4 0xA6 NOT SELFBALANCE RETURN CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD ADDMOD STOP CALLER ","sourceMap":"234:2621:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1331:253:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1010:313:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4974:149:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1724:1128:23;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;525:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;1331:253:23:-;1421:9;1384:18;:34;1403:14;;1384:34;;;;;;;;;;;:46;;;;1441:37;1451:10;1463:14;;1441:9;:37::i;:::-;1523:1;1506:14;;:18;;;;:::i;:::-;1489:14;:35;;;;1550:14;;1540:36;1566:9;1540:36;;;;;;:::i;:::-;;;;;;;;1331:253;:::o;4612:296:9:-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;1010:313:23:-;1073:13;1099:21;:52;;;;;;;;;;;;;;;;;;;1162:30;1195:51;1239:3;1222:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;1195:13;:51::i;:::-;1162:84;;1288:7;1297:16;1271:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1257:58;;;;1010:313;;;:::o;4974:149:9:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;1724:1128:23:-;1789:13;1823:16;1831:7;1823;:16::i;:::-;1815:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1891:12;1913:11;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1888:54;;;;;;1953:22;1978:13;1953:38;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2015:18;:27;2034:7;2015:27;;;;;;;;;;;;2006:5;:36;2002:94;;2070:14;2059:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2002:94;2192:10;:8;:10::i;:::-;2225:585;2398:6;:4;:6::i;:::-;2682:8;2301:459;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2225:13;:585::i;:::-;2153:676;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2108:736;;;;1724:1128;;;:::o;525:52::-;;;;;;;;;;;;;;;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;777:1861:21:-;835:13;879:1;864:4;:11;:16;860:31;;;882:9;;;;;;;;;;;;;;;;860:31;940:19;962:12;;;;;;;;;;;;;;;;;940:34;;1023:18;1069:1;1064;1050:4;:11;:15;;;;:::i;:::-;1049:21;;;;:::i;:::-;1044:1;:27;;;;:::i;:::-;1023:48;;1151:20;1198:2;1185:10;:15;;;;:::i;:::-;1174:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1151:50;;1294:10;1286:6;1279:26;1386:1;1379:5;1375:13;1442:4;1492;1486:11;1477:7;1473:25;1585:2;1577:6;1573:15;1655:739;1674:6;1665:7;1662:19;1655:739;;;1771:1;1762:7;1758:15;1747:26;;1809:7;1803:14;1932:4;1924:5;1920:2;1916:14;1912:25;1902:8;1898:40;1892:47;1881:9;1873:67;1985:1;1974:9;1970:17;1957:30;;2063:4;2055:5;2051:2;2047:14;2043:25;2033:8;2029:40;2023:47;2012:9;2004:67;2116:1;2105:9;2101:17;2088:30;;2194:4;2186:5;2183:1;2178:14;2174:25;2164:8;2160:40;2154:47;2143:9;2135:67;2247:1;2236:9;2232:17;2219:30;;2325:4;2317:5;2305:25;2295:8;2291:40;2285:47;2274:9;2266:67;2378:1;2367:9;2363:17;2350:30;;1697:697;1655:739;;;2464:1;2457:4;2451:11;2447:19;2484:1;2479:54;;;;2551:1;2546:52;;;;2440:158;;2479:54;2523:6;2518:3;2514:16;2510:1;2499:9;2495:17;2488:43;2479:54;;2546:52;2590:4;2585:3;2581:14;2577:1;2566:9;2562:17;2555:41;2440:158;;1221:1387;;;;2625:6;2618:13;;;;;777:1861;;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:9:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12572:171:9:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;:::-;7995:108;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;7120:126::-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;1592:124:23:-;1644:13;1670:38;;;;;;;;;;;;;;;;;;;1592:124;:::o;8324:279:9:-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8324:279;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;8925:920::-;9018:1;9004:16;;:2;:16;;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;1412:320:14:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:76::-;4974:7;5003:5;4992:16;;4938:76;;;:::o;5020:120::-;5092:23;5109:5;5092:23;:::i;:::-;5085:5;5082:34;5072:62;;5130:1;5127;5120:12;5072:62;5020:120;:::o;5146:137::-;5191:5;5229:6;5216:20;5207:29;;5245:32;5271:5;5245:32;:::i;:::-;5146:137;;;;:::o;5289:327::-;5347:6;5396:2;5384:9;5375:7;5371:23;5367:32;5364:119;;;5402:79;;:::i;:::-;5364:119;5522:1;5547:52;5591:7;5582:6;5571:9;5567:22;5547:52;:::i;:::-;5537:62;;5493:116;5289:327;;;;:::o;5622:619::-;5699:6;5707;5715;5764:2;5752:9;5743:7;5739:23;5735:32;5732:119;;;5770:79;;:::i;:::-;5732:119;5890:1;5915:53;5960:7;5951:6;5940:9;5936:22;5915:53;:::i;:::-;5905:63;;5861:117;6017:2;6043:53;6088:7;6079:6;6068:9;6064:22;6043:53;:::i;:::-;6033:63;;5988:118;6145:2;6171:53;6216:7;6207:6;6196:9;6192:22;6171:53;:::i;:::-;6161:63;;6116:118;5622:619;;;;;:::o;6247:117::-;6356:1;6353;6346:12;6370:117;6479:1;6476;6469:12;6493:180;6541:77;6538:1;6531:88;6638:4;6635:1;6628:15;6662:4;6659:1;6652:15;6679:281;6762:27;6784:4;6762:27;:::i;:::-;6754:6;6750:40;6892:6;6880:10;6877:22;6856:18;6844:10;6841:34;6838:62;6835:88;;;6903:18;;:::i;:::-;6835:88;6943:10;6939:2;6932:22;6722:238;6679:281;;:::o;6966:129::-;7000:6;7027:20;;:::i;:::-;7017:30;;7056:33;7084:4;7076:6;7056:33;:::i;:::-;6966:129;;;:::o;7101:308::-;7163:4;7253:18;7245:6;7242:30;7239:56;;;7275:18;;:::i;:::-;7239:56;7313:29;7335:6;7313:29;:::i;:::-;7305:37;;7397:4;7391;7387:15;7379:23;;7101:308;;;:::o;7415:154::-;7499:6;7494:3;7489;7476:30;7561:1;7552:6;7547:3;7543:16;7536:27;7415:154;;;:::o;7575:412::-;7653:5;7678:66;7694:49;7736:6;7694:49;:::i;:::-;7678:66;:::i;:::-;7669:75;;7767:6;7760:5;7753:21;7805:4;7798:5;7794:16;7843:3;7834:6;7829:3;7825:16;7822:25;7819:112;;;7850:79;;:::i;:::-;7819:112;7940:41;7974:6;7969:3;7964;7940:41;:::i;:::-;7659:328;7575:412;;;;;:::o;8007:340::-;8063:5;8112:3;8105:4;8097:6;8093:17;8089:27;8079:122;;8120:79;;:::i;:::-;8079:122;8237:6;8224:20;8262:79;8337:3;8329:6;8322:4;8314:6;8310:17;8262:79;:::i;:::-;8253:88;;8069:278;8007:340;;;;:::o;8353:509::-;8422:6;8471:2;8459:9;8450:7;8446:23;8442:32;8439:119;;;8477:79;;:::i;:::-;8439:119;8625:1;8614:9;8610:17;8597:31;8655:18;8647:6;8644:30;8641:117;;;8677:79;;:::i;:::-;8641:117;8782:63;8837:7;8828:6;8817:9;8813:22;8782:63;:::i;:::-;8772:73;;8568:287;8353:509;;;;:::o;8868:329::-;8927:6;8976:2;8964:9;8955:7;8951:23;8947:32;8944:119;;;8982:79;;:::i;:::-;8944:119;9102:1;9127:53;9172:7;9163:6;9152:9;9148:22;9127:53;:::i;:::-;9117:63;;9073:117;8868:329;;;;:::o;9203:118::-;9290:24;9308:5;9290:24;:::i;:::-;9285:3;9278:37;9203:118;;:::o;9327:222::-;9420:4;9458:2;9447:9;9443:18;9435:26;;9471:71;9539:1;9528:9;9524:17;9515:6;9471:71;:::i;:::-;9327:222;;;;:::o;9555:116::-;9625:21;9640:5;9625:21;:::i;:::-;9618:5;9615:32;9605:60;;9661:1;9658;9651:12;9605:60;9555:116;:::o;9677:133::-;9720:5;9758:6;9745:20;9736:29;;9774:30;9798:5;9774:30;:::i;:::-;9677:133;;;;:::o;9816:468::-;9881:6;9889;9938:2;9926:9;9917:7;9913:23;9909:32;9906:119;;;9944:79;;:::i;:::-;9906:119;10064:1;10089:53;10134:7;10125:6;10114:9;10110:22;10089:53;:::i;:::-;10079:63;;10035:117;10191:2;10217:50;10259:7;10250:6;10239:9;10235:22;10217:50;:::i;:::-;10207:60;;10162:115;9816:468;;;;;:::o;10290:307::-;10351:4;10441:18;10433:6;10430:30;10427:56;;;10463:18;;:::i;:::-;10427:56;10501:29;10523:6;10501:29;:::i;:::-;10493:37;;10585:4;10579;10575:15;10567:23;;10290:307;;;:::o;10603:410::-;10680:5;10705:65;10721:48;10762:6;10721:48;:::i;:::-;10705:65;:::i;:::-;10696:74;;10793:6;10786:5;10779:21;10831:4;10824:5;10820:16;10869:3;10860:6;10855:3;10851:16;10848:25;10845:112;;;10876:79;;:::i;:::-;10845:112;10966:41;11000:6;10995:3;10990;10966:41;:::i;:::-;10686:327;10603:410;;;;;:::o;11032:338::-;11087:5;11136:3;11129:4;11121:6;11117:17;11113:27;11103:122;;11144:79;;:::i;:::-;11103:122;11261:6;11248:20;11286:78;11360:3;11352:6;11345:4;11337:6;11333:17;11286:78;:::i;:::-;11277:87;;11093:277;11032:338;;;;:::o;11376:943::-;11471:6;11479;11487;11495;11544:3;11532:9;11523:7;11519:23;11515:33;11512:120;;;11551:79;;:::i;:::-;11512:120;11671:1;11696:53;11741:7;11732:6;11721:9;11717:22;11696:53;:::i;:::-;11686:63;;11642:117;11798:2;11824:53;11869:7;11860:6;11849:9;11845:22;11824:53;:::i;:::-;11814:63;;11769:118;11926:2;11952:53;11997:7;11988:6;11977:9;11973:22;11952:53;:::i;:::-;11942:63;;11897:118;12082:2;12071:9;12067:18;12054:32;12113:18;12105:6;12102:30;12099:117;;;12135:79;;:::i;:::-;12099:117;12240:62;12294:7;12285:6;12274:9;12270:22;12240:62;:::i;:::-;12230:72;;12025:287;11376:943;;;;;;;:::o;12325:115::-;12410:23;12427:5;12410:23;:::i;:::-;12405:3;12398:36;12325:115;;:::o;12446:218::-;12537:4;12575:2;12564:9;12560:18;12552:26;;12588:69;12654:1;12643:9;12639:17;12630:6;12588:69;:::i;:::-;12446:218;;;;:::o;12670:474::-;12738:6;12746;12795:2;12783:9;12774:7;12770:23;12766:32;12763:119;;;12801:79;;:::i;:::-;12763:119;12921:1;12946:53;12991:7;12982:6;12971:9;12967:22;12946:53;:::i;:::-;12936:63;;12892:117;13048:2;13074:53;13119:7;13110:6;13099:9;13095:22;13074:53;:::i;:::-;13064:63;;13019:118;12670:474;;;;;:::o;13150:180::-;13198:77;13195:1;13188:88;13295:4;13292:1;13285:15;13319:4;13316:1;13309:15;13336:320;13380:6;13417:1;13411:4;13407:12;13397:22;;13464:1;13458:4;13454:12;13485:18;13475:81;;13541:4;13533:6;13529:17;13519:27;;13475:81;13603:2;13595:6;13592:14;13572:18;13569:38;13566:84;;;13622:18;;:::i;:::-;13566:84;13387:269;13336:320;;;:::o;13662:220::-;13802:34;13798:1;13790:6;13786:14;13779:58;13871:3;13866:2;13858:6;13854:15;13847:28;13662:220;:::o;13888:366::-;14030:3;14051:67;14115:2;14110:3;14051:67;:::i;:::-;14044:74;;14127:93;14216:3;14127:93;:::i;:::-;14245:2;14240:3;14236:12;14229:19;;13888:366;;;:::o;14260:419::-;14426:4;14464:2;14453:9;14449:18;14441:26;;14513:9;14507:4;14503:20;14499:1;14488:9;14484:17;14477:47;14541:131;14667:4;14541:131;:::i;:::-;14533:139;;14260:419;;;:::o;14685:248::-;14825:34;14821:1;14813:6;14809:14;14802:58;14894:31;14889:2;14881:6;14877:15;14870:56;14685:248;:::o;14939:366::-;15081:3;15102:67;15166:2;15161:3;15102:67;:::i;:::-;15095:74;;15178:93;15267:3;15178:93;:::i;:::-;15296:2;15291:3;15287:12;15280:19;;14939:366;;;:::o;15311:419::-;15477:4;15515:2;15504:9;15500:18;15492:26;;15564:9;15558:4;15554:20;15550:1;15539:9;15535:17;15528:47;15592:131;15718:4;15592:131;:::i;:::-;15584:139;;15311:419;;;:::o;15736:180::-;15784:77;15781:1;15774:88;15881:4;15878:1;15871:15;15905:4;15902:1;15895:15;15922:305;15962:3;15981:20;15999:1;15981:20;:::i;:::-;15976:25;;16015:20;16033:1;16015:20;:::i;:::-;16010:25;;16169:1;16101:66;16097:74;16094:1;16091:81;16088:107;;;16175:18;;:::i;:::-;16088:107;16219:1;16216;16212:9;16205:16;;15922:305;;;;:::o;16233:232::-;16373:34;16369:1;16361:6;16357:14;16350:58;16442:15;16437:2;16429:6;16425:15;16418:40;16233:232;:::o;16471:366::-;16613:3;16634:67;16698:2;16693:3;16634:67;:::i;:::-;16627:74;;16710:93;16799:3;16710:93;:::i;:::-;16828:2;16823:3;16819:12;16812:19;;16471:366;;;:::o;16843:419::-;17009:4;17047:2;17036:9;17032:18;17024:26;;17096:9;17090:4;17086:20;17082:1;17071:9;17067:17;17060:47;17124:131;17250:4;17124:131;:::i;:::-;17116:139;;16843:419;;;:::o;17268:148::-;17370:11;17407:3;17392:18;;17268:148;;;;:::o;17422:377::-;17528:3;17556:39;17589:5;17556:39;:::i;:::-;17611:89;17693:6;17688:3;17611:89;:::i;:::-;17604:96;;17709:52;17754:6;17749:3;17742:4;17735:5;17731:16;17709:52;:::i;:::-;17786:6;17781:3;17777:16;17770:23;;17532:267;17422:377;;;;:::o;17805:275::-;17937:3;17959:95;18050:3;18041:6;17959:95;:::i;:::-;17952:102;;18071:3;18064:10;;17805:275;;;;:::o;18086:435::-;18266:3;18288:95;18379:3;18370:6;18288:95;:::i;:::-;18281:102;;18400:95;18491:3;18482:6;18400:95;:::i;:::-;18393:102;;18512:3;18505:10;;18086:435;;;;;:::o;18527:174::-;18667:26;18663:1;18655:6;18651:14;18644:50;18527:174;:::o;18707:366::-;18849:3;18870:67;18934:2;18929:3;18870:67;:::i;:::-;18863:74;;18946:93;19035:3;18946:93;:::i;:::-;19064:2;19059:3;19055:12;19048:19;;18707:366;;;:::o;19079:419::-;19245:4;19283:2;19272:9;19268:18;19260:26;;19332:9;19326:4;19322:20;19318:1;19307:9;19303:17;19296:47;19360:131;19486:4;19360:131;:::i;:::-;19352:139;;19079:419;;;:::o;19504:228::-;19644:34;19640:1;19632:6;19628:14;19621:58;19713:11;19708:2;19700:6;19696:15;19689:36;19504:228;:::o;19738:366::-;19880:3;19901:67;19965:2;19960:3;19901:67;:::i;:::-;19894:74;;19977:93;20066:3;19977:93;:::i;:::-;20095:2;20090:3;20086:12;20079:19;;19738:366;;;:::o;20110:419::-;20276:4;20314:2;20303:9;20299:18;20291:26;;20363:9;20357:4;20353:20;20349:1;20338:9;20334:17;20327:47;20391:131;20517:4;20391:131;:::i;:::-;20383:139;;20110:419;;;:::o;20535:181::-;20675:33;20671:1;20663:6;20659:14;20652:57;20535:181;:::o;20722:366::-;20864:3;20885:67;20949:2;20944:3;20885:67;:::i;:::-;20878:74;;20961:93;21050:3;20961:93;:::i;:::-;21079:2;21074:3;21070:12;21063:19;;20722:366;;;:::o;21094:419::-;21260:4;21298:2;21287:9;21283:18;21275:26;;21347:9;21341:4;21337:20;21333:1;21322:9;21318:17;21311:47;21375:131;21501:4;21375:131;:::i;:::-;21367:139;;21094:419;;;:::o;21519:105::-;21555:7;21595:22;21588:5;21584:34;21573:45;;21519:105;;;:::o;21630:120::-;21702:23;21719:5;21702:23;:::i;:::-;21695:5;21692:34;21682:62;;21740:1;21737;21730:12;21682:62;21630:120;:::o;21756:141::-;21812:5;21843:6;21837:13;21828:22;;21859:32;21885:5;21859:32;:::i;:::-;21756:141;;;;:::o;21903:::-;21959:5;21990:6;21984:13;21975:22;;22006:32;22032:5;22006:32;:::i;:::-;21903:141;;;;:::o;22050:143::-;22107:5;22138:6;22132:13;22123:22;;22154:33;22181:5;22154:33;:::i;:::-;22050:143;;;;:::o;22199:971::-;22302:6;22310;22318;22326;22334;22383:3;22371:9;22362:7;22358:23;22354:33;22351:120;;;22390:79;;:::i;:::-;22351:120;22510:1;22535:63;22590:7;22581:6;22570:9;22566:22;22535:63;:::i;:::-;22525:73;;22481:127;22647:2;22673:63;22728:7;22719:6;22708:9;22704:22;22673:63;:::i;:::-;22663:73;;22618:128;22785:2;22811:64;22867:7;22858:6;22847:9;22843:22;22811:64;:::i;:::-;22801:74;;22756:129;22924:2;22950:64;23006:7;22997:6;22986:9;22982:22;22950:64;:::i;:::-;22940:74;;22895:129;23063:3;23090:63;23145:7;23136:6;23125:9;23121:22;23090:63;:::i;:::-;23080:73;;23034:129;22199:971;;;;;;;;:::o;23176:214::-;23316:66;23312:1;23304:6;23300:14;23293:90;23176:214;:::o;23396:400::-;23556:3;23577:84;23659:1;23654:3;23577:84;:::i;:::-;23570:91;;23670:93;23759:3;23670:93;:::i;:::-;23788:1;23783:3;23779:11;23772:18;;23396:400;;;:::o;23802:384::-;23942:66;23938:1;23930:6;23926:14;23919:90;24043:34;24038:2;24030:6;24026:15;24019:59;24112:66;24107:2;24099:6;24095:15;24088:91;23802:384;:::o;24192:402::-;24352:3;24373:85;24455:2;24450:3;24373:85;:::i;:::-;24366:92;;24467:93;24556:3;24467:93;:::i;:::-;24585:2;24580:3;24576:12;24569:19;;24192:402;;;:::o;24600:416::-;24740:66;24736:1;24728:6;24724:14;24717:90;24841:66;24836:2;24828:6;24824:15;24817:91;24942:66;24937:2;24929:6;24925:15;24918:91;24600:416;:::o;25022:402::-;25182:3;25203:85;25285:2;25280:3;25203:85;:::i;:::-;25196:92;;25297:93;25386:3;25297:93;:::i;:::-;25415:2;25410:3;25406:12;25399:19;;25022:402;;;:::o;25430:214::-;25570:66;25566:1;25558:6;25554:14;25547:90;25430:214;:::o;25650:400::-;25810:3;25831:84;25913:1;25908:3;25831:84;:::i;:::-;25824:91;;25924:93;26013:3;25924:93;:::i;:::-;26042:1;26037:3;26033:11;26026:18;;25650:400;;;:::o;26056:1499::-;26640:3;26662:148;26806:3;26662:148;:::i;:::-;26655:155;;26827:95;26918:3;26909:6;26827:95;:::i;:::-;26820:102;;26939:148;27083:3;26939:148;:::i;:::-;26932:155;;27104:148;27248:3;27104:148;:::i;:::-;27097:155;;27269:95;27360:3;27351:6;27269:95;:::i;:::-;27262:102;;27381:148;27525:3;27381:148;:::i;:::-;27374:155;;27546:3;27539:10;;26056:1499;;;;;:::o;27561:180::-;27609:77;27606:1;27599:88;27706:4;27703:1;27696:15;27730:4;27727:1;27720:15;27747:185;27787:1;27804:20;27822:1;27804:20;:::i;:::-;27799:25;;27838:20;27856:1;27838:20;:::i;:::-;27833:25;;27877:1;27867:35;;27882:18;;:::i;:::-;27867:35;27924:1;27921;27917:9;27912:14;;27747:185;;;;:::o;27938:348::-;27978:7;28001:20;28019:1;28001:20;:::i;:::-;27996:25;;28035:20;28053:1;28035:20;:::i;:::-;28030:25;;28223:1;28155:66;28151:74;28148:1;28145:81;28140:1;28133:9;28126:17;28122:105;28119:131;;;28230:18;;:::i;:::-;28119:131;28278:1;28275;28271:9;28260:20;;27938:348;;;;:::o;28292:224::-;28432:34;28428:1;28420:6;28416:14;28409:58;28501:7;28496:2;28488:6;28484:15;28477:32;28292:224;:::o;28522:366::-;28664:3;28685:67;28749:2;28744:3;28685:67;:::i;:::-;28678:74;;28761:93;28850:3;28761:93;:::i;:::-;28879:2;28874:3;28870:12;28863:19;;28522:366;;;:::o;28894:419::-;29060:4;29098:2;29087:9;29083:18;29075:26;;29147:9;29141:4;29137:20;29133:1;29122:9;29118:17;29111:47;29175:131;29301:4;29175:131;:::i;:::-;29167:139;;28894:419;;;:::o;29319:223::-;29459:34;29455:1;29447:6;29443:14;29436:58;29528:6;29523:2;29515:6;29511:15;29504:31;29319:223;:::o;29548:366::-;29690:3;29711:67;29775:2;29770:3;29711:67;:::i;:::-;29704:74;;29787:93;29876:3;29787:93;:::i;:::-;29905:2;29900:3;29896:12;29889:19;;29548:366;;;:::o;29920:419::-;30086:4;30124:2;30113:9;30109:18;30101:26;;30173:9;30167:4;30163:20;30159:1;30148:9;30144:17;30137:47;30201:131;30327:4;30201:131;:::i;:::-;30193:139;;29920:419;;;:::o;30345:175::-;30485:27;30481:1;30473:6;30469:14;30462:51;30345:175;:::o;30526:366::-;30668:3;30689:67;30753:2;30748:3;30689:67;:::i;:::-;30682:74;;30765:93;30854:3;30765:93;:::i;:::-;30883:2;30878:3;30874:12;30867:19;;30526:366;;;:::o;30898:419::-;31064:4;31102:2;31091:9;31087:18;31079:26;;31151:9;31145:4;31141:20;31137:1;31126:9;31122:17;31115:47;31179:131;31305:4;31179:131;:::i;:::-;31171:139;;30898:419;;;:::o;31323:237::-;31463:34;31459:1;31451:6;31447:14;31440:58;31532:20;31527:2;31519:6;31515:15;31508:45;31323:237;:::o;31566:366::-;31708:3;31729:67;31793:2;31788:3;31729:67;:::i;:::-;31722:74;;31805:93;31894:3;31805:93;:::i;:::-;31923:2;31918:3;31914:12;31907:19;;31566:366;;;:::o;31938:419::-;32104:4;32142:2;32131:9;32127:18;32119:26;;32191:9;32185:4;32181:20;32177:1;32166:9;32162:17;32155:47;32219:131;32345:4;32219:131;:::i;:::-;32211:139;;31938:419;;;:::o;32363:98::-;32414:6;32448:5;32442:12;32432:22;;32363:98;;;:::o;32467:168::-;32550:11;32584:6;32579:3;32572:19;32624:4;32619:3;32615:14;32600:29;;32467:168;;;;:::o;32641:360::-;32727:3;32755:38;32787:5;32755:38;:::i;:::-;32809:70;32872:6;32867:3;32809:70;:::i;:::-;32802:77;;32888:52;32933:6;32928:3;32921:4;32914:5;32910:16;32888:52;:::i;:::-;32965:29;32987:6;32965:29;:::i;:::-;32960:3;32956:39;32949:46;;32731:270;32641:360;;;;:::o;33007:640::-;33202:4;33240:3;33229:9;33225:19;33217:27;;33254:71;33322:1;33311:9;33307:17;33298:6;33254:71;:::i;:::-;33335:72;33403:2;33392:9;33388:18;33379:6;33335:72;:::i;:::-;33417;33485:2;33474:9;33470:18;33461:6;33417:72;:::i;:::-;33536:9;33530:4;33526:20;33521:2;33510:9;33506:18;33499:48;33564:76;33635:4;33626:6;33564:76;:::i;:::-;33556:84;;33007:640;;;;;;;:::o;33653:141::-;33709:5;33740:6;33734:13;33725:22;;33756:32;33782:5;33756:32;:::i;:::-;33653:141;;;;:::o;33800:349::-;33869:6;33918:2;33906:9;33897:7;33893:23;33889:32;33886:119;;;33924:79;;:::i;:::-;33886:119;34044:1;34069:63;34124:7;34115:6;34104:9;34100:22;34069:63;:::i;:::-;34059:73;;34015:127;33800:349;;;;:::o;34155:182::-;34295:34;34291:1;34283:6;34279:14;34272:58;34155:182;:::o;34343:366::-;34485:3;34506:67;34570:2;34565:3;34506:67;:::i;:::-;34499:74;;34582:93;34671:3;34582:93;:::i;:::-;34700:2;34695:3;34691:12;34684:19;;34343:366;;;:::o;34715:419::-;34881:4;34919:2;34908:9;34904:18;34896:26;;34968:9;34962:4;34958:20;34954:1;34943:9;34939:17;34932:47;34996:131;35122:4;34996:131;:::i;:::-;34988:139;;34715:419;;;:::o;35140:178::-;35280:30;35276:1;35268:6;35264:14;35257:54;35140:178;:::o;35324:366::-;35466:3;35487:67;35551:2;35546:3;35487:67;:::i;:::-;35480:74;;35563:93;35652:3;35563:93;:::i;:::-;35681:2;35676:3;35672:12;35665:19;;35324:366;;;:::o;35696:419::-;35862:4;35900:2;35889:9;35885:18;35877:26;;35949:9;35943:4;35939:20;35935:1;35924:9;35920:17;35913:47;35977:131;36103:4;35977:131;:::i;:::-;35969:139;;35696:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2375600","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2924","getApproved(uint256)":"5300","isApprovedForAll(address,address)":"infinite","mintNft(int256)":"infinite","name()":"infinite","ownerOf(uint256)":"3025","s_tokenIdHighValue(uint256)":"2831","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"797","svgToImageURI(string)":"infinite","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"},"internal":{"_baseURI()":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","mintNft(int256)":"1e930812","name()":"06fdde03","ownerOf(uint256)":"6352211e","s_tokenIdHighValue(uint256)":"e12f64b5","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","svgToImageURI(string)":"30d871c6","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"lowSvg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"highSvg\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"CreateNft\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"highValue\",\"type\":\"int256\"}],\"name\":\"mintNft\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_tokenIdHighValue\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"svg\",\"type\":\"string\"}],\"name\":\"svgToImageURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DynamicSvgNft.sol\":\"DynamicSvgNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"base64-sol/base64.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0;\\n\\n/// @title Base64\\n/// @author Brecht Devos - <brecht@loopring.org>\\n/// @notice Provides functions for encoding/decoding base64\\nlibrary Base64 {\\n    string internal constant TABLE_ENCODE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\\n    bytes  internal constant TABLE_DECODE = hex\\\"0000000000000000000000000000000000000000000000000000000000000000\\\"\\n                                            hex\\\"00000000000000000000003e0000003f3435363738393a3b3c3d000000000000\\\"\\n                                            hex\\\"00000102030405060708090a0b0c0d0e0f101112131415161718190000000000\\\"\\n                                            hex\\\"001a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132330000000000\\\";\\n\\n    function encode(bytes memory data) internal pure returns (string memory) {\\n        if (data.length == 0) return '';\\n\\n        // load the table into memory\\n        string memory table = TABLE_ENCODE;\\n\\n        // multiply by 4/3 rounded up\\n        uint256 encodedLen = 4 * ((data.length + 2) / 3);\\n\\n        // add some extra buffer at the end required for the writing\\n        string memory result = new string(encodedLen + 32);\\n\\n        assembly {\\n            // set the actual output length\\n            mstore(result, encodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 3 bytes at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n                // read 3 bytes\\n                dataPtr := add(dataPtr, 3)\\n                let input := mload(dataPtr)\\n\\n                // write 4 characters\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(18, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr(12, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(shr( 6, input), 0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n                mstore8(resultPtr, mload(add(tablePtr, and(        input,  0x3F))))\\n                resultPtr := add(resultPtr, 1)\\n            }\\n\\n            // padding with '='\\n            switch mod(mload(data), 3)\\n            case 1 { mstore(sub(resultPtr, 2), shl(240, 0x3d3d)) }\\n            case 2 { mstore(sub(resultPtr, 1), shl(248, 0x3d)) }\\n        }\\n\\n        return result;\\n    }\\n\\n    function decode(string memory _data) internal pure returns (bytes memory) {\\n        bytes memory data = bytes(_data);\\n\\n        if (data.length == 0) return new bytes(0);\\n        require(data.length % 4 == 0, \\\"invalid base64 decoder input\\\");\\n\\n        // load the table into memory\\n        bytes memory table = TABLE_DECODE;\\n\\n        // every 4 characters represent 3 bytes\\n        uint256 decodedLen = (data.length / 4) * 3;\\n\\n        // add some extra buffer at the end required for the writing\\n        bytes memory result = new bytes(decodedLen + 32);\\n\\n        assembly {\\n            // padding with '='\\n            let lastBytes := mload(add(data, mload(data)))\\n            if eq(and(lastBytes, 0xFF), 0x3d) {\\n                decodedLen := sub(decodedLen, 1)\\n                if eq(and(lastBytes, 0xFFFF), 0x3d3d) {\\n                    decodedLen := sub(decodedLen, 1)\\n                }\\n            }\\n\\n            // set the actual output length\\n            mstore(result, decodedLen)\\n\\n            // prepare the lookup table\\n            let tablePtr := add(table, 1)\\n\\n            // input ptr\\n            let dataPtr := data\\n            let endPtr := add(dataPtr, mload(data))\\n\\n            // result ptr, jump over length\\n            let resultPtr := add(result, 32)\\n\\n            // run over the input, 4 characters at a time\\n            for {} lt(dataPtr, endPtr) {}\\n            {\\n               // read 4 characters\\n               dataPtr := add(dataPtr, 4)\\n               let input := mload(dataPtr)\\n\\n               // write 3 bytes\\n               let output := add(\\n                   add(\\n                       shl(18, and(mload(add(tablePtr, and(shr(24, input), 0xFF))), 0xFF)),\\n                       shl(12, and(mload(add(tablePtr, and(shr(16, input), 0xFF))), 0xFF))),\\n                   add(\\n                       shl( 6, and(mload(add(tablePtr, and(shr( 8, input), 0xFF))), 0xFF)),\\n                               and(mload(add(tablePtr, and(        input , 0xFF))), 0xFF)\\n                    )\\n                )\\n                mstore(resultPtr, shl(232, output))\\n                resultPtr := add(resultPtr, 3)\\n            }\\n        }\\n\\n        return result;\\n    }\\n}\\n\",\"keccak256\":\"0xa73959e6ef0b693e4423a562e612370160b934a75e618361ddd8c9c4b8ddbaaf\",\"license\":\"MIT\"},\"contracts/DynamicSvgNft.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"base64-sol/base64.sol\\\";\\r\\n\\r\\ncontract DynamicSvgNft is ERC721 {\\r\\n    uint256 private s_tokenCounter;\\r\\n    string private i_lowImageURI;\\r\\n    string private i_highImageURI;\\r\\n    string private constant base64EncodedSvgPrefix = \\\"data:image/svg+xml;base64,\\\";\\r\\n    AggregatorV3Interface internal immutable i_priceFeed;\\r\\n    mapping(uint256 => int256) public s_tokenIdHighValue;\\r\\n\\r\\n    event CreateNft(uint256 indexed tokenId, int256 highValue);\\r\\n\\r\\n    constructor(\\r\\n        address priceFeedAddress,\\r\\n        string memory lowSvg,\\r\\n        string memory highSvg\\r\\n    ) ERC721(\\\"Dynamic SVG NFT\\\", \\\"DSN\\\") {\\r\\n        s_tokenCounter = 0;\\r\\n        i_lowImageURI = svgToImageURI(lowSvg);\\r\\n        i_highImageURI = svgToImageURI(highSvg);\\r\\n        i_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    function svgToImageURI(string memory svg) public pure returns (string memory) {\\r\\n        string memory baseURL = \\\"data:image/svg+xml;base64,\\\";\\r\\n        string memory svgBase64Encoded = Base64.encode(bytes(string(abi.encodePacked(svg))));\\r\\n        return string(abi.encodePacked(baseURL, svgBase64Encoded));\\r\\n    }\\r\\n\\r\\n    function mintNft(int256 highValue) public {\\r\\n        s_tokenIdHighValue[s_tokenCounter] = highValue;\\r\\n        _safeMint(msg.sender, s_tokenCounter);\\r\\n        s_tokenCounter = s_tokenCounter + 1;\\r\\n        emit CreateNft(s_tokenCounter, highValue);\\r\\n    }\\r\\n\\r\\n    function _baseURI() internal pure override returns (string memory) {\\r\\n        return \\\"data:application/json;base64,\\\";\\r\\n    }\\r\\n\\r\\n    function tokenURI(uint256 tokenId) public view override returns (string memory) {\\r\\n        require(_exists(tokenId), \\\"URI Query for nonexistent token\\\");\\r\\n\\r\\n        (, int256 price, , , ) = i_priceFeed.latestRoundData();\\r\\n        string memory imageURI = i_lowImageURI;\\r\\n        if (price >= s_tokenIdHighValue[tokenId]) {\\r\\n            imageURI = i_highImageURI;\\r\\n        }\\r\\n\\r\\n        return\\r\\n            string(\\r\\n                abi.encodePacked(\\r\\n                    _baseURI(),\\r\\n                    Base64.encode(\\r\\n                        bytes(\\r\\n                            abi.encodePacked(\\r\\n                                '{\\\"name\\\":\\\"',\\r\\n                                name(), // You can add whatever name here\\r\\n                                '\\\", \\\"description\\\":\\\"An NFT that changes based on the Chainlink Feed\\\", ',\\r\\n                                '\\\"attributes\\\": [{\\\"trait_type\\\": \\\"coolness\\\", \\\"value\\\": 100}], \\\"image\\\":\\\"',\\r\\n                                imageURI,\\r\\n                                '\\\"}'\\r\\n                            )\\r\\n                        )\\r\\n                    )\\r\\n                )\\r\\n            );\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x0c654716f59f8b2473ae98911833b1e6cb092c997e492e9e216bb82e47296fb4\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1326,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1330,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1334,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1344,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":4317,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenCounter","offset":0,"slot":"6","type":"t_uint256"},{"astId":4319,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_lowImageURI","offset":0,"slot":"7","type":"t_string_storage"},{"astId":4321,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"i_highImageURI","offset":0,"slot":"8","type":"t_string_storage"},{"astId":4331,"contract":"contracts/DynamicSvgNft.sol:DynamicSvgNft","label":"s_tokenIdHighValue","offset":0,"slot":"9","type":"t_mapping(t_uint256,t_int256)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int256":{"encoding":"inplace","label":"int256","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_int256)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => int256)","numberOfBytes":"32","value":"t_int256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RandomIpfsNft.sol":{"RandomIpfsNft":{"abi":[{"inputs":[{"internalType":"address","name":"vrfCoordinatorV2","type":"address"},{"internalType":"uint64","name":"subscriptionId","type":"uint64"},{"internalType":"bytes32","name":"gasLane","type":"bytes32"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"string[3]","name":"dogTokenUris","type":"string[3]"},{"internalType":"uint256","name":"mintFee","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[],"name":"randomIpfsNft_NeedMoreETHSent","type":"error"},{"inputs":[],"name":"randomIpfsNft_RangeOutOfBounds","type":"error"},{"inputs":[],"name":"randomIpfsNft_TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"requestId","type":"uint256"},{"indexed":false,"internalType":"address","name":"requester","type":"address"}],"name":"NftRequested","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum RandomIpfsNft.Breed","name":"dogBreed","type":"uint8"},{"indexed":false,"internalType":"address","name":"minter","type":"address"}],"name":"Nftminted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"moddedRng","type":"uint256"}],"name":"getBreedFromModdedRng","outputs":[{"internalType":"enum RandomIpfsNft.Breed","name":"","type":"uint8"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getChanceArray","outputs":[{"internalType":"uint256[3]","name":"","type":"uint256[3]"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDogTokenUris","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMintFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTokenCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"requestNft","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"owner()":{"details":"Returns the address of the current owner."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1181":{"entryPoint":null,"id":1181,"parameterSlots":0,"returnSlots":0},"@_1361":{"entryPoint":null,"id":1361,"parameterSlots":2,"returnSlots":0},"@_21":{"entryPoint":null,"id":21,"parameterSlots":1,"returnSlots":0},"@_4626":{"entryPoint":null,"id":4626,"parameterSlots":6,"returnSlots":0},"@_msgSender_2884":{"entryPoint":464,"id":2884,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_1269":{"entryPoint":472,"id":1269,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1812,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1686,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory":{"entryPoint":1952,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32_fromMemory":{"entryPoint":1285,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1761,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":2036,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint32_fromMemory":{"entryPoint":1350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint64_fromMemory":{"entryPoint":1226,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory":{"entryPoint":2059,"id":null,"parameterSlots":2,"returnSlots":6},"allocate_memory":{"entryPoint":1496,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":1059,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr":{"entryPoint":1527,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":1578,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_address":{"entryPoint":1111,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":1249,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1079,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2000,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":1308,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":1180,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1632,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":2293,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1442,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":2246,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1395,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":1373,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":1568,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":1573,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":1074,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1069,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":1378,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":1131,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":1259,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2010,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint32":{"entryPoint":1324,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint64":{"entryPoint":1200,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8280:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"379:81:26","statements":[{"nodeType":"YulAssignment","src":"389:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:26"},"nodeType":"YulFunctionCall","src":"400:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:26","type":""}],"src":"334:126:26"},{"body":{"nodeType":"YulBlock","src":"511:51:26","statements":[{"nodeType":"YulAssignment","src":"521:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:26"},"nodeType":"YulFunctionCall","src":"532:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:26","type":""}],"src":"466:96:26"},{"body":{"nodeType":"YulBlock","src":"611:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:26"},"nodeType":"YulFunctionCall","src":"670:12:26"},"nodeType":"YulExpressionStatement","src":"670:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:26"},"nodeType":"YulFunctionCall","src":"641:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:26"},"nodeType":"YulFunctionCall","src":"631:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:26"},"nodeType":"YulFunctionCall","src":"624:43:26"},"nodeType":"YulIf","src":"621:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:26","type":""}],"src":"568:122:26"},{"body":{"nodeType":"YulBlock","src":"759:80:26","statements":[{"nodeType":"YulAssignment","src":"769:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"784:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"778:5:26"},"nodeType":"YulFunctionCall","src":"778:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"769:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"827:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"800:26:26"},"nodeType":"YulFunctionCall","src":"800:33:26"},"nodeType":"YulExpressionStatement","src":"800:33:26"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"737:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"745:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"753:5:26","type":""}],"src":"696:143:26"},{"body":{"nodeType":"YulBlock","src":"889:57:26","statements":[{"nodeType":"YulAssignment","src":"899:41:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"914:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"921:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"910:3:26"},"nodeType":"YulFunctionCall","src":"910:30:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"899:7:26"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"871:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"881:7:26","type":""}],"src":"845:101:26"},{"body":{"nodeType":"YulBlock","src":"994:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"1050:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1059:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1062:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1052:6:26"},"nodeType":"YulFunctionCall","src":"1052:12:26"},"nodeType":"YulExpressionStatement","src":"1052:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1017:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1041:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"1024:16:26"},"nodeType":"YulFunctionCall","src":"1024:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1014:2:26"},"nodeType":"YulFunctionCall","src":"1014:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1007:6:26"},"nodeType":"YulFunctionCall","src":"1007:42:26"},"nodeType":"YulIf","src":"1004:62:26"}]},"name":"validator_revert_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"987:5:26","type":""}],"src":"952:120:26"},{"body":{"nodeType":"YulBlock","src":"1140:79:26","statements":[{"nodeType":"YulAssignment","src":"1150:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1165:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1159:5:26"},"nodeType":"YulFunctionCall","src":"1159:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1150:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:26"}],"functionName":{"name":"validator_revert_t_uint64","nodeType":"YulIdentifier","src":"1181:25:26"},"nodeType":"YulFunctionCall","src":"1181:32:26"},"nodeType":"YulExpressionStatement","src":"1181:32:26"}]},"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1118:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1126:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1134:5:26","type":""}],"src":"1078:141:26"},{"body":{"nodeType":"YulBlock","src":"1270:32:26","statements":[{"nodeType":"YulAssignment","src":"1280:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1291:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1280:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1252:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1262:7:26","type":""}],"src":"1225:77:26"},{"body":{"nodeType":"YulBlock","src":"1351:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"1408:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1417:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1420:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1410:6:26"},"nodeType":"YulFunctionCall","src":"1410:12:26"},"nodeType":"YulExpressionStatement","src":"1410:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1374:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1399:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1381:17:26"},"nodeType":"YulFunctionCall","src":"1381:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1371:2:26"},"nodeType":"YulFunctionCall","src":"1371:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1364:6:26"},"nodeType":"YulFunctionCall","src":"1364:43:26"},"nodeType":"YulIf","src":"1361:63:26"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1344:5:26","type":""}],"src":"1308:122:26"},{"body":{"nodeType":"YulBlock","src":"1499:80:26","statements":[{"nodeType":"YulAssignment","src":"1509:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1524:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1518:5:26"},"nodeType":"YulFunctionCall","src":"1518:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1509:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1567:5:26"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1540:26:26"},"nodeType":"YulFunctionCall","src":"1540:33:26"},"nodeType":"YulExpressionStatement","src":"1540:33:26"}]},"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1477:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1485:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1493:5:26","type":""}],"src":"1436:143:26"},{"body":{"nodeType":"YulBlock","src":"1629:49:26","statements":[{"nodeType":"YulAssignment","src":"1639:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1654:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"1661:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1650:3:26"},"nodeType":"YulFunctionCall","src":"1650:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1639:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1611:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1621:7:26","type":""}],"src":"1585:93:26"},{"body":{"nodeType":"YulBlock","src":"1726:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"1782:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1791:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1794:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1784:6:26"},"nodeType":"YulFunctionCall","src":"1784:12:26"},"nodeType":"YulExpressionStatement","src":"1784:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1749:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"1756:16:26"},"nodeType":"YulFunctionCall","src":"1756:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1746:2:26"},"nodeType":"YulFunctionCall","src":"1746:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1739:6:26"},"nodeType":"YulFunctionCall","src":"1739:42:26"},"nodeType":"YulIf","src":"1736:62:26"}]},"name":"validator_revert_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1719:5:26","type":""}],"src":"1684:120:26"},{"body":{"nodeType":"YulBlock","src":"1872:79:26","statements":[{"nodeType":"YulAssignment","src":"1882:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1897:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1891:5:26"},"nodeType":"YulFunctionCall","src":"1891:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1882:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1939:5:26"}],"functionName":{"name":"validator_revert_t_uint32","nodeType":"YulIdentifier","src":"1913:25:26"},"nodeType":"YulFunctionCall","src":"1913:32:26"},"nodeType":"YulExpressionStatement","src":"1913:32:26"}]},"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1850:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"1858:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1866:5:26","type":""}],"src":"1810:141:26"},{"body":{"nodeType":"YulBlock","src":"2046:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2063:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2066:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2056:6:26"},"nodeType":"YulFunctionCall","src":"2056:12:26"},"nodeType":"YulExpressionStatement","src":"2056:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"1957:117:26"},{"body":{"nodeType":"YulBlock","src":"2128:54:26","statements":[{"nodeType":"YulAssignment","src":"2138:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2156:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2163:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2152:3:26"},"nodeType":"YulFunctionCall","src":"2152:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2172:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2168:3:26"},"nodeType":"YulFunctionCall","src":"2168:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2148:3:26"},"nodeType":"YulFunctionCall","src":"2148:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2138:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2111:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2121:6:26","type":""}],"src":"2080:102:26"},{"body":{"nodeType":"YulBlock","src":"2216:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2233:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2236:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2226:6:26"},"nodeType":"YulFunctionCall","src":"2226:88:26"},"nodeType":"YulExpressionStatement","src":"2226:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2330:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2333:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2323:6:26"},"nodeType":"YulFunctionCall","src":"2323:15:26"},"nodeType":"YulExpressionStatement","src":"2323:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2354:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2357:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2347:6:26"},"nodeType":"YulFunctionCall","src":"2347:15:26"},"nodeType":"YulExpressionStatement","src":"2347:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2188:180:26"},{"body":{"nodeType":"YulBlock","src":"2417:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2427:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2449:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"2479:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2457:21:26"},"nodeType":"YulFunctionCall","src":"2457:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2445:3:26"},"nodeType":"YulFunctionCall","src":"2445:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"2431:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2596:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2598:16:26"},"nodeType":"YulFunctionCall","src":"2598:18:26"},"nodeType":"YulExpressionStatement","src":"2598:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2539:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"2551:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2536:2:26"},"nodeType":"YulFunctionCall","src":"2536:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2575:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"2587:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2572:2:26"},"nodeType":"YulFunctionCall","src":"2572:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2533:2:26"},"nodeType":"YulFunctionCall","src":"2533:62:26"},"nodeType":"YulIf","src":"2530:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2634:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"2638:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2627:6:26"},"nodeType":"YulFunctionCall","src":"2627:22:26"},"nodeType":"YulExpressionStatement","src":"2627:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2403:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"2411:4:26","type":""}],"src":"2374:281:26"},{"body":{"nodeType":"YulBlock","src":"2702:88:26","statements":[{"nodeType":"YulAssignment","src":"2712:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"2722:18:26"},"nodeType":"YulFunctionCall","src":"2722:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2712:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2771:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"2779:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"2751:19:26"},"nodeType":"YulFunctionCall","src":"2751:33:26"},"nodeType":"YulExpressionStatement","src":"2751:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"2686:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"2695:6:26","type":""}],"src":"2661:129:26"},{"body":{"nodeType":"YulBlock","src":"2886:169:26","statements":[{"body":{"nodeType":"YulBlock","src":"2991:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"2993:16:26"},"nodeType":"YulFunctionCall","src":"2993:18:26"},"nodeType":"YulExpressionStatement","src":"2993:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2963:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2971:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2960:2:26"},"nodeType":"YulFunctionCall","src":"2960:30:26"},"nodeType":"YulIf","src":"2957:56:26"},{"nodeType":"YulAssignment","src":"3023:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3035:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3043:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3031:3:26"},"nodeType":"YulFunctionCall","src":"3031:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3023:4:26"}]}]},"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"2870:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"2881:4:26","type":""}],"src":"2796:259:26"},{"body":{"nodeType":"YulBlock","src":"3150:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3167:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3170:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3160:6:26"},"nodeType":"YulFunctionCall","src":"3160:12:26"},"nodeType":"YulExpressionStatement","src":"3160:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"3061:117:26"},{"body":{"nodeType":"YulBlock","src":"3273:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3290:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3293:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3283:6:26"},"nodeType":"YulFunctionCall","src":"3283:12:26"},"nodeType":"YulExpressionStatement","src":"3283:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3184:117:26"},{"body":{"nodeType":"YulBlock","src":"3374:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"3479:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3481:16:26"},"nodeType":"YulFunctionCall","src":"3481:18:26"},"nodeType":"YulExpressionStatement","src":"3481:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3451:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3459:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3448:2:26"},"nodeType":"YulFunctionCall","src":"3448:30:26"},"nodeType":"YulIf","src":"3445:56:26"},{"nodeType":"YulAssignment","src":"3511:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3541:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3519:21:26"},"nodeType":"YulFunctionCall","src":"3519:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3511:4:26"}]},{"nodeType":"YulAssignment","src":"3585:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3597:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"3603:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3593:3:26"},"nodeType":"YulFunctionCall","src":"3593:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"3585:4:26"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3358:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3369:4:26","type":""}],"src":"3307:308:26"},{"body":{"nodeType":"YulBlock","src":"3670:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3680:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3689:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3684:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3749:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3774:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"3779:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3770:3:26"},"nodeType":"YulFunctionCall","src":"3770:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3793:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"3798:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3789:3:26"},"nodeType":"YulFunctionCall","src":"3789:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3783:5:26"},"nodeType":"YulFunctionCall","src":"3783:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3763:6:26"},"nodeType":"YulFunctionCall","src":"3763:39:26"},"nodeType":"YulExpressionStatement","src":"3763:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3710:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"3713:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3707:2:26"},"nodeType":"YulFunctionCall","src":"3707:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3721:19:26","statements":[{"nodeType":"YulAssignment","src":"3723:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3732:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"3735:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3728:3:26"},"nodeType":"YulFunctionCall","src":"3728:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3723:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"3703:3:26","statements":[]},"src":"3699:113:26"},{"body":{"nodeType":"YulBlock","src":"3846:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"3896:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"3901:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3892:3:26"},"nodeType":"YulFunctionCall","src":"3892:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"3910:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3885:6:26"},"nodeType":"YulFunctionCall","src":"3885:27:26"},"nodeType":"YulExpressionStatement","src":"3885:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3827:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"3830:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3824:2:26"},"nodeType":"YulFunctionCall","src":"3824:13:26"},"nodeType":"YulIf","src":"3821:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3652:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"3657:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"3662:6:26","type":""}],"src":"3621:307:26"},{"body":{"nodeType":"YulBlock","src":"4029:326:26","statements":[{"nodeType":"YulAssignment","src":"4039:75:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4106:6:26"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4064:41:26"},"nodeType":"YulFunctionCall","src":"4064:49:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4048:15:26"},"nodeType":"YulFunctionCall","src":"4048:66:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4039:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4130:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"4137:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4123:6:26"},"nodeType":"YulFunctionCall","src":"4123:21:26"},"nodeType":"YulExpressionStatement","src":"4123:21:26"},{"nodeType":"YulVariableDeclaration","src":"4153:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4168:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4164:3:26"},"nodeType":"YulFunctionCall","src":"4164:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4157:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"4218:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4220:77:26"},"nodeType":"YulFunctionCall","src":"4220:79:26"},"nodeType":"YulExpressionStatement","src":"4220:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4199:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4204:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4195:3:26"},"nodeType":"YulFunctionCall","src":"4195:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"4213:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4192:2:26"},"nodeType":"YulFunctionCall","src":"4192:25:26"},"nodeType":"YulIf","src":"4189:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4332:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"4337:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"4342:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"4310:21:26"},"nodeType":"YulFunctionCall","src":"4310:39:26"},"nodeType":"YulExpressionStatement","src":"4310:39:26"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4002:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4007:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4015:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4023:5:26","type":""}],"src":"3934:421:26"},{"body":{"nodeType":"YulBlock","src":"4448:282:26","statements":[{"body":{"nodeType":"YulBlock","src":"4497:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4499:77:26"},"nodeType":"YulFunctionCall","src":"4499:79:26"},"nodeType":"YulExpressionStatement","src":"4499:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4476:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4484:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4472:3:26"},"nodeType":"YulFunctionCall","src":"4472:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"4491:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4468:3:26"},"nodeType":"YulFunctionCall","src":"4468:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4461:6:26"},"nodeType":"YulFunctionCall","src":"4461:35:26"},"nodeType":"YulIf","src":"4458:122:26"},{"nodeType":"YulVariableDeclaration","src":"4589:27:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4609:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4603:5:26"},"nodeType":"YulFunctionCall","src":"4603:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4593:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4625:99:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4697:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"4705:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4693:3:26"},"nodeType":"YulFunctionCall","src":"4693:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"4712:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"4720:3:26"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4634:58:26"},"nodeType":"YulFunctionCall","src":"4634:90:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4625:5:26"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4426:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4434:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4442:5:26","type":""}],"src":"4375:355:26"},{"body":{"nodeType":"YulBlock","src":"4874:772:26","statements":[{"nodeType":"YulAssignment","src":"4884:98:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4974:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr","nodeType":"YulIdentifier","src":"4909:64:26"},"nodeType":"YulFunctionCall","src":"4909:72:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4893:15:26"},"nodeType":"YulFunctionCall","src":"4893:89:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4884:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"4991:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"5002:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4995:3:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5017:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5035:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5047:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5055:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5043:3:26"},"nodeType":"YulFunctionCall","src":"5043:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5031:3:26"},"nodeType":"YulFunctionCall","src":"5031:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"5021:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5089:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"5103:77:26"},"nodeType":"YulFunctionCall","src":"5103:79:26"},"nodeType":"YulExpressionStatement","src":"5103:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"5076:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"5084:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5073:2:26"},"nodeType":"YulFunctionCall","src":"5073:15:26"},"nodeType":"YulIf","src":"5070:122:26"},{"body":{"nodeType":"YulBlock","src":"5277:363:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5292:29:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5317:3:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5311:5:26"},"nodeType":"YulFunctionCall","src":"5311:10:26"},"variables":[{"name":"innerOffset","nodeType":"YulTypedName","src":"5296:11:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5373:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5375:77:26"},"nodeType":"YulFunctionCall","src":"5375:79:26"},"nodeType":"YulExpressionStatement","src":"5375:79:26"}]},"condition":{"arguments":[{"name":"innerOffset","nodeType":"YulIdentifier","src":"5340:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"5353:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5337:2:26"},"nodeType":"YulFunctionCall","src":"5337:35:26"},"nodeType":"YulIf","src":"5334:122:26"},{"nodeType":"YulVariableDeclaration","src":"5469:42:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5491:6:26"},{"name":"innerOffset","nodeType":"YulIdentifier","src":"5499:11:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5487:3:26"},"nodeType":"YulFunctionCall","src":"5487:24:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"5473:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5532:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"5579:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"5591:3:26"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5537:41:26"},"nodeType":"YulFunctionCall","src":"5537:58:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5525:6:26"},"nodeType":"YulFunctionCall","src":"5525:71:26"},"nodeType":"YulExpressionStatement","src":"5525:71:26"},{"nodeType":"YulAssignment","src":"5609:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"5620:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5625:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5616:3:26"},"nodeType":"YulFunctionCall","src":"5616:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"5609:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5230:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"5235:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5227:2:26"},"nodeType":"YulFunctionCall","src":"5227:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5243:25:26","statements":[{"nodeType":"YulAssignment","src":"5245:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5256:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"5261:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5252:3:26"},"nodeType":"YulFunctionCall","src":"5252:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"5245:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"5205:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"5218:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"5211:3:26","type":""}]}]},"src":"5201:439:26"}]},"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4844:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"4852:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4860:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4868:5:26","type":""}],"src":"4753:893:26"},{"body":{"nodeType":"YulBlock","src":"5765:285:26","statements":[{"body":{"nodeType":"YulBlock","src":"5814:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"5816:77:26"},"nodeType":"YulFunctionCall","src":"5816:79:26"},"nodeType":"YulExpressionStatement","src":"5816:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5793:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5801:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:26"},"nodeType":"YulFunctionCall","src":"5789:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"5808:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5785:3:26"},"nodeType":"YulFunctionCall","src":"5785:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5778:6:26"},"nodeType":"YulFunctionCall","src":"5778:35:26"},"nodeType":"YulIf","src":"5775:122:26"},{"nodeType":"YulVariableDeclaration","src":"5906:18:26","value":{"kind":"number","nodeType":"YulLiteral","src":"5920:4:26","type":"","value":"0x03"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5910:6:26","type":""}]},{"nodeType":"YulAssignment","src":"5933:111:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6024:6:26"},{"name":"length","nodeType":"YulIdentifier","src":"6032:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"6040:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"5942:81:26"},"nodeType":"YulFunctionCall","src":"5942:102:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5933:5:26"}]}]},"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"5743:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"5751:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"5759:5:26","type":""}],"src":"5669:381:26"},{"body":{"nodeType":"YulBlock","src":"6101:32:26","statements":[{"nodeType":"YulAssignment","src":"6111:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"6122:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6111:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6083:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6093:7:26","type":""}],"src":"6056:77:26"},{"body":{"nodeType":"YulBlock","src":"6182:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"6239:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6248:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6251:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6241:6:26"},"nodeType":"YulFunctionCall","src":"6241:12:26"},"nodeType":"YulExpressionStatement","src":"6241:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6205:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6230:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6212:17:26"},"nodeType":"YulFunctionCall","src":"6212:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6202:2:26"},"nodeType":"YulFunctionCall","src":"6202:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6195:6:26"},"nodeType":"YulFunctionCall","src":"6195:43:26"},"nodeType":"YulIf","src":"6192:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6175:5:26","type":""}],"src":"6139:122:26"},{"body":{"nodeType":"YulBlock","src":"6330:80:26","statements":[{"nodeType":"YulAssignment","src":"6340:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6355:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6349:5:26"},"nodeType":"YulFunctionCall","src":"6349:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6340:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6398:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"6371:26:26"},"nodeType":"YulFunctionCall","src":"6371:33:26"},"nodeType":"YulExpressionStatement","src":"6371:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6308:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6316:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:26","type":""}],"src":"6267:143:26"},{"body":{"nodeType":"YulBlock","src":"6609:1156:26","statements":[{"body":{"nodeType":"YulBlock","src":"6656:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6658:77:26"},"nodeType":"YulFunctionCall","src":"6658:79:26"},"nodeType":"YulExpressionStatement","src":"6658:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6630:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6639:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6626:3:26"},"nodeType":"YulFunctionCall","src":"6626:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6651:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6622:3:26"},"nodeType":"YulFunctionCall","src":"6622:33:26"},"nodeType":"YulIf","src":"6619:120:26"},{"nodeType":"YulBlock","src":"6749:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6764:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6778:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6768:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6793:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6839:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6850:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6835:3:26"},"nodeType":"YulFunctionCall","src":"6835:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6859:7:26"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"6803:31:26"},"nodeType":"YulFunctionCall","src":"6803:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6793:6:26"}]}]},{"nodeType":"YulBlock","src":"6887:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6902:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"6916:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6906:6:26","type":""}]},{"nodeType":"YulAssignment","src":"6932:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6977:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6988:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6973:3:26"},"nodeType":"YulFunctionCall","src":"6973:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6997:7:26"}],"functionName":{"name":"abi_decode_t_uint64_fromMemory","nodeType":"YulIdentifier","src":"6942:30:26"},"nodeType":"YulFunctionCall","src":"6942:63:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6932:6:26"}]}]},{"nodeType":"YulBlock","src":"7025:129:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7040:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7054:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7044:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7070:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7116:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7127:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7112:3:26"},"nodeType":"YulFunctionCall","src":"7112:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7136:7:26"}],"functionName":{"name":"abi_decode_t_bytes32_fromMemory","nodeType":"YulIdentifier","src":"7080:31:26"},"nodeType":"YulFunctionCall","src":"7080:64:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7070:6:26"}]}]},{"nodeType":"YulBlock","src":"7164:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7179:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7193:2:26","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7183:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7209:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7254:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7265:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7250:3:26"},"nodeType":"YulFunctionCall","src":"7250:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7274:7:26"}],"functionName":{"name":"abi_decode_t_uint32_fromMemory","nodeType":"YulIdentifier","src":"7219:30:26"},"nodeType":"YulFunctionCall","src":"7219:63:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7209:6:26"}]}]},{"nodeType":"YulBlock","src":"7302:316:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7317:40:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7341:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7352:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7337:3:26"},"nodeType":"YulFunctionCall","src":"7337:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7331:5:26"},"nodeType":"YulFunctionCall","src":"7331:26:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7321:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7404:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7406:77:26"},"nodeType":"YulFunctionCall","src":"7406:79:26"},"nodeType":"YulExpressionStatement","src":"7406:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7376:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7384:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7373:2:26"},"nodeType":"YulFunctionCall","src":"7373:30:26"},"nodeType":"YulIf","src":"7370:117:26"},{"nodeType":"YulAssignment","src":"7501:107:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7591:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7576:3:26"},"nodeType":"YulFunctionCall","src":"7576:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7600:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"7511:64:26"},"nodeType":"YulFunctionCall","src":"7511:97:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7501:6:26"}]}]},{"nodeType":"YulBlock","src":"7628:130:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7643:17:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7657:3:26","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7647:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7674:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7720:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7731:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7716:3:26"},"nodeType":"YulFunctionCall","src":"7716:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7740:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"7684:31:26"},"nodeType":"YulFunctionCall","src":"7684:64:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7674:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6539:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6550:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6562:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6570:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6578:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6586:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6594:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6602:6:26","type":""}],"src":"6416:1349:26"},{"body":{"nodeType":"YulBlock","src":"7799:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7816:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7819:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7809:6:26"},"nodeType":"YulFunctionCall","src":"7809:88:26"},"nodeType":"YulExpressionStatement","src":"7809:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7913:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7916:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7906:6:26"},"nodeType":"YulFunctionCall","src":"7906:15:26"},"nodeType":"YulExpressionStatement","src":"7906:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7937:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7940:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7930:6:26"},"nodeType":"YulFunctionCall","src":"7930:15:26"},"nodeType":"YulExpressionStatement","src":"7930:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7771:180:26"},{"body":{"nodeType":"YulBlock","src":"8008:269:26","statements":[{"nodeType":"YulAssignment","src":"8018:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8032:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8038:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8028:3:26"},"nodeType":"YulFunctionCall","src":"8028:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8018:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"8049:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8079:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"8085:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8075:3:26"},"nodeType":"YulFunctionCall","src":"8075:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8053:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8126:51:26","statements":[{"nodeType":"YulAssignment","src":"8140:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8154:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8162:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8150:3:26"},"nodeType":"YulFunctionCall","src":"8150:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8140:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8106:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8099:6:26"},"nodeType":"YulFunctionCall","src":"8099:26:26"},"nodeType":"YulIf","src":"8096:81:26"},{"body":{"nodeType":"YulBlock","src":"8229:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8243:16:26"},"nodeType":"YulFunctionCall","src":"8243:18:26"},"nodeType":"YulExpressionStatement","src":"8243:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8193:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8216:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8224:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8213:2:26"},"nodeType":"YulFunctionCall","src":"8213:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8190:2:26"},"nodeType":"YulFunctionCall","src":"8190:38:26"},"nodeType":"YulIf","src":"8187:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"7992:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8001:6:26","type":""}],"src":"7957:320:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    // string[3]\n    function abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_string_memory_ptr_$3_memory_ptr(length))\n        let dst := array\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let innerOffset := mload(src)\n            if gt(innerOffset, 0xffffffffffffffff) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n            let elementPos := add(offset, innerOffset)\n\n            mstore(dst, abi_decode_t_string_memory_ptr_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // string[3]\n    function abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := 0x03\n        array := abi_decode_available_length_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(offset, length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint64t_bytes32t_uint32t_array$_t_string_memory_ptr_$3_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint64_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_array$_t_string_memory_ptr_$3_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x140 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x4402 CODESIZE SUB DUP1 PUSH3 0x4402 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x38 SWAP2 SWAP1 PUSH3 0x80B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52616E646F6D2049504653204E46540000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x52494E0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP8 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP POP DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xF5 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x10E SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP POP POP PUSH3 0x131 PUSH3 0x125 PUSH3 0x1D0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE POP POP DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0xC0 SHL DUP2 MSTORE POP POP DUP4 PUSH1 0xE0 DUP2 DUP2 MSTORE POP POP DUP3 PUSH4 0xFFFFFFFF AND PUSH2 0x100 DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE POP POP DUP2 PUSH1 0xA SWAP1 PUSH1 0x3 PUSH3 0x1BA SWAP3 SWAP2 SWAP1 PUSH3 0x32F JUMP JUMPDEST POP DUP1 PUSH2 0x120 DUP2 DUP2 MSTORE POP POP POP POP POP POP POP POP PUSH3 0x92B JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2AC SWAP1 PUSH3 0x8F5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x2D0 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2EB JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x31C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x31C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x31B JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2FE JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x32B SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x383 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x382 JUMPI DUP3 MLOAD DUP3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x371 SWAP3 SWAP2 SWAP1 PUSH3 0x29E JUMP JUMPDEST POP SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x350 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x392 SWAP2 SWAP1 PUSH3 0x3B5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x397 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x3D9 JUMPI PUSH1 0x0 DUP2 DUP2 PUSH3 0x3CF SWAP2 SWAP1 PUSH3 0x3DD JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH3 0x3B6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH3 0x3EB SWAP1 PUSH3 0x8F5 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH3 0x3FF JUMPI POP PUSH3 0x420 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH3 0x41F SWAP2 SWAP1 PUSH3 0x396 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x464 DUP3 PUSH3 0x437 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x476 DUP2 PUSH3 0x457 JUMP JUMPDEST DUP2 EQ PUSH3 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x496 DUP2 PUSH3 0x46B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4BB DUP2 PUSH3 0x49C JUMP JUMPDEST DUP2 EQ PUSH3 0x4C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x4DB DUP2 PUSH3 0x4B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x4F6 DUP2 PUSH3 0x4E1 JUMP JUMPDEST DUP2 EQ PUSH3 0x502 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x516 DUP2 PUSH3 0x4EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x537 DUP2 PUSH3 0x51C JUMP JUMPDEST DUP2 EQ PUSH3 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x557 DUP2 PUSH3 0x52C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x5AD DUP3 PUSH3 0x562 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x5CF JUMPI PUSH3 0x5CE PUSH3 0x573 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5E4 PUSH3 0x423 JUMP JUMPDEST SWAP1 POP PUSH3 0x5F2 DUP3 DUP3 PUSH3 0x5A2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x615 JUMPI PUSH3 0x614 PUSH3 0x573 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x648 JUMPI PUSH3 0x647 PUSH3 0x573 JUMP JUMPDEST JUMPDEST PUSH3 0x653 DUP3 PUSH3 0x562 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x680 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x663 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x690 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6AD PUSH3 0x6A7 DUP5 PUSH3 0x62A JUMP JUMPDEST PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x6CC JUMPI PUSH3 0x6CB PUSH3 0x625 JUMP JUMPDEST JUMPDEST PUSH3 0x6D9 DUP5 DUP3 DUP6 PUSH3 0x660 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x6F9 JUMPI PUSH3 0x6F8 PUSH3 0x55D JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x70B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x696 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x72B PUSH3 0x725 DUP5 PUSH3 0x5F7 JUMP JUMPDEST PUSH3 0x5D8 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH3 0x748 JUMPI PUSH3 0x747 PUSH3 0x620 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x796 JUMPI DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x771 JUMPI PUSH3 0x770 PUSH3 0x55D JUMP JUMPDEST JUMPDEST DUP1 DUP7 ADD PUSH3 0x780 DUP10 DUP3 PUSH3 0x6E1 JUMP JUMPDEST DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP5 POP POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x74A JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x7B8 JUMPI PUSH3 0x7B7 PUSH3 0x55D JUMP JUMPDEST JUMPDEST PUSH1 0x3 PUSH3 0x7C7 DUP5 DUP3 DUP6 PUSH3 0x714 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x7E5 DUP2 PUSH3 0x7D0 JUMP JUMPDEST DUP2 EQ PUSH3 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x805 DUP2 PUSH3 0x7DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH3 0x82B JUMPI PUSH3 0x82A PUSH3 0x42D JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x83B DUP10 DUP3 DUP11 ADD PUSH3 0x485 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 PUSH3 0x84E DUP10 DUP3 DUP11 ADD PUSH3 0x4CA JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH3 0x861 DUP10 DUP3 DUP11 ADD PUSH3 0x505 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH3 0x874 DUP10 DUP3 DUP11 ADD PUSH3 0x546 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 DUP8 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x898 JUMPI PUSH3 0x897 PUSH3 0x432 JUMP JUMPDEST JUMPDEST PUSH3 0x8A6 DUP10 DUP3 DUP11 ADD PUSH3 0x7A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH3 0x8B9 DUP10 DUP3 DUP11 ADD PUSH3 0x7F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x90E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x925 JUMPI PUSH3 0x924 PUSH3 0x8C6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0xC0 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0xE0 SHR PUSH2 0x120 MLOAD PUSH2 0x3A6D PUSH3 0x995 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0xC26 ADD MSTORE PUSH2 0xE02 ADD MSTORE PUSH1 0x0 PUSH2 0xEDC ADD MSTORE PUSH1 0x0 PUSH2 0xE98 ADD MSTORE PUSH1 0x0 PUSH2 0xEB9 ADD MSTORE PUSH1 0x0 PUSH2 0xE5C ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x7F8 ADD MSTORE PUSH2 0x84C ADD MSTORE PUSH2 0x3A6D PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA51CCCF3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57C JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x455 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x3AF25975 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x355 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0xFFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x1207 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5FF JUMPI POP PUSH2 0x5FE DUP3 PUSH2 0x128B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x615 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x641 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x663 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x671 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x779 PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7A8 JUMPI POP PUSH2 0x7A7 DUP2 PUSH2 0x7A2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F1 DUP4 DUP4 PUSH2 0x13C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1479 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8C1 PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP4 DUP4 DUP4 PUSH2 0x16AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92B PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x941 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96D SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x72A5A44B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA95 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD1 DUP4 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBE SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x0 PUSH2 0x1A63 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC83 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCAF SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD18 PUSH2 0xD11 PUSH2 0x13B8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xD2D PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDC6 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xD6C JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xDF9 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xDBE SWAP1 PUSH2 0x328B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD32 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xE3BC09F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB277FB0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x100F PUSH2 0x1009 PUSH2 0x13B8 JUMP JUMPDEST DUP4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x106B DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x108B SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10B7 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1104 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1115 PUSH2 0x1CF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x112B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1160 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH2 0x1169 DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120F PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x1A63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1356 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1366 JUMPI POP PUSH2 0x1365 DUP3 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1376 DUP2 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AC SWAP1 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1433 DUP4 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14D0 JUMPI PUSH2 0x14CF PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14EF DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1516 DUP5 DUP5 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x15D8 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1540 JUMPI PUSH2 0x153F PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1555 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1581 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E3A JUMP JUMPDEST PUSH32 0xCDF57ECB2C3AA16B6AA947D2477A018B8BD181EF0ECDCEF44CD8ED41BE8C7240 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP3 SWAP2 SWAP1 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1625 DUP4 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1667 JUMPI POP PUSH2 0x1666 DUP2 DUP6 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x16A5 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168D DUP5 PUSH2 0x698 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16CE DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP1 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EE5 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17C1 DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19A3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CE PUSH2 0xC4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8F SWAP1 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CA1 DUP5 DUP5 DUP5 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1CAD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x1CEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D14 DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E PUSH2 0x1CF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D3E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D69 JUMP JUMPDEST DUP1 PUSH2 0x1D48 DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D59 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DFD DUP4 PUSH2 0x1A26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E36 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2160 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E43 DUP3 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x1E82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E79 SWAP1 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F12 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21BB JUMP JUMPDEST ISZERO PUSH2 0x207B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1F3B PUSH2 0x13B8 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FA8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x202B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201A SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2097 DUP5 PUSH2 0x21DE JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B5 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20E8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2155 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2150 JUMPI PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x20F6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP4 DUP4 PUSH2 0x2331 JUMP JUMPDEST PUSH2 0x2177 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x21B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AD SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x223C JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2232 JUMPI PUSH2 0x2231 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2279 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x226F JUMPI PUSH2 0x226E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22A8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x22D1 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22F6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22EC JUMPI PUSH2 0x22EB PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2319 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2328 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2398 SWAP1 PUSH2 0x39AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23AA DUP2 PUSH2 0x1DDB JUMP JUMPDEST ISZERO PUSH2 0x23EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E1 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23F8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH2 0x2401 DUP2 PUSH2 0x1DDB JUMP JUMPDEST ISZERO PUSH2 0x2441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2438 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x254B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x257D SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x259F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x25E6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x25B8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25E6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25E6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25E5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25CA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x25F3 SWAP2 SWAP1 PUSH2 0x25F7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2610 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x25F8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP2 EQ PUSH2 0x2668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x267A DUP2 PUSH2 0x2654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2696 JUMPI PUSH2 0x2695 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A4 DUP5 DUP3 DUP6 ADD PUSH2 0x266B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C2 DUP2 PUSH2 0x26AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x271D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2702 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x272C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x2758 DUP2 DUP6 PUSH2 0x26EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2768 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x2771 DUP2 PUSH2 0x2732 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2796 DUP2 DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B1 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP2 EQ PUSH2 0x27BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27CE DUP2 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F8 DUP5 DUP3 DUP6 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C DUP3 PUSH2 0x2801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283C DUP2 PUSH2 0x2821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2857 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2866 DUP2 PUSH2 0x2821 JUMP JUMPDEST DUP2 EQ PUSH2 0x2871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2883 DUP2 PUSH2 0x285D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AE DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28BF DUP6 DUP3 DUP7 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2906 DUP3 PUSH2 0x2732 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2925 JUMPI PUSH2 0x2924 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2938 PUSH2 0x2614 JUMP JUMPDEST SWAP1 POP PUSH2 0x2944 DUP3 DUP3 PUSH2 0x28FD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2964 JUMPI PUSH2 0x2963 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x298D PUSH2 0x2988 DUP5 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x292E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x2975 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29D9 JUMPI DUP1 PUSH2 0x29C5 DUP9 DUP3 PUSH2 0x27BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29B2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29F8 JUMPI PUSH2 0x29F7 PUSH2 0x28C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x297A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A28 JUMPI PUSH2 0x2A27 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A36 DUP6 DUP3 DUP7 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH2 0x2A63 DUP6 DUP3 DUP7 ADD PUSH2 0x29E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A94 DUP7 DUP3 DUP8 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AB6 DUP7 DUP3 DUP8 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE9 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1D DUP2 PUSH2 0x2AC0 JUMP JUMPDEST PUSH2 0x2B27 DUP2 DUP5 PUSH2 0x2ACB JUMP JUMPDEST SWAP3 POP PUSH2 0x2B32 DUP3 PUSH2 0x2AD6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B63 JUMPI DUP2 MLOAD PUSH2 0x2B4A DUP8 DUP3 PUSH2 0x2AEF JUMP JUMPDEST SWAP7 POP PUSH2 0x2B55 DUP4 PUSH2 0x2B07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B36 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B8F DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC6 JUMPI PUSH2 0x2BC5 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD4 DUP5 DUP3 DUP6 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BE6 DUP2 PUSH2 0x26AD JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C03 DUP2 PUSH2 0x2BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C20 JUMPI PUSH2 0x2C1F PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C2E DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C3F DUP6 DUP3 DUP7 ADD PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2C89 JUMPI PUSH2 0x2C88 PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2C9A DUP3 PUSH2 0x2C78 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAA DUP3 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBA DUP2 PUSH2 0x2C9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2CFA PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH2 0x2D04 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D33 PUSH2 0x2D2E DUP5 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0x292E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D4F JUMPI PUSH2 0x2D4E PUSH2 0x2CDB JUMP JUMPDEST JUMPDEST PUSH2 0x2D5A DUP5 DUP3 DUP6 PUSH2 0x2D11 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D77 JUMPI PUSH2 0x2D76 PUSH2 0x28C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D87 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DAA JUMPI PUSH2 0x2DA9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DB8 DUP8 DUP3 DUP9 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DC9 DUP8 DUP3 DUP9 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DDA DUP8 DUP3 DUP9 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFB JUMPI PUSH2 0x2DFA PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH2 0x2E07 DUP8 DUP3 DUP9 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2A JUMPI PUSH2 0x2E29 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E38 DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E49 DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E9A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2EAE JUMPI PUSH2 0x2EAD PUSH2 0x2E53 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F10 PUSH1 0x21 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1B DUP3 PUSH2 0x2EB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F3F DUP2 PUSH2 0x2F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA2 PUSH1 0x3D DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FAD DUP3 PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FD1 DUP2 PUSH2 0x2F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x2FFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305D PUSH1 0x2D DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3068 DUP3 PUSH2 0x3001 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308C DUP2 PUSH2 0x3050 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DD PUSH1 0x0 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E8 DUP3 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FE DUP3 PUSH2 0x30D0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313E PUSH1 0x18 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3149 DUP3 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x316D DUP2 PUSH2 0x3131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D0 PUSH1 0x29 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x31DB DUP3 PUSH2 0x3174 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31FF DUP2 PUSH2 0x31C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3240 DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH2 0x324B DUP4 PUSH2 0x279E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3280 JUMPI PUSH2 0x327F PUSH2 0x3206 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3296 DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x32C9 JUMPI PUSH2 0x32C8 PUSH2 0x3206 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32E7 DUP2 PUSH2 0x32D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x330A DUP2 PUSH2 0x32ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3327 DUP2 PUSH2 0x3310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3346 DUP2 PUSH2 0x332D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3361 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x32DE JUMP JUMPDEST PUSH2 0x336E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3301 JUMP JUMPDEST PUSH2 0x337B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x331E JUMP JUMPDEST PUSH2 0x3388 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x333D JUMP JUMPDEST PUSH2 0x3395 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x333D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33AE DUP2 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33CA JUMPI PUSH2 0x33C9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33D8 DUP5 DUP3 DUP6 ADD PUSH2 0x339F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F7 DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x3401 DUP2 DUP6 PUSH2 0x33E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3429 DUP3 DUP6 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3435 DUP3 DUP5 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349D PUSH1 0x26 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x34A8 DUP3 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34CC DUP2 PUSH2 0x3490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x350D DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH2 0x3518 DUP4 PUSH2 0x279E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3528 JUMPI PUSH2 0x3527 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3548 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x3555 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B8 PUSH1 0x25 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x35C3 DUP3 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35E7 DUP2 PUSH2 0x35AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364A PUSH1 0x24 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3655 DUP3 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3679 DUP2 PUSH2 0x363D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B6 PUSH1 0x20 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x36C1 DUP3 PUSH2 0x3680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36E5 DUP2 PUSH2 0x36A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3722 PUSH1 0x19 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x372D DUP3 PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3751 DUP2 PUSH2 0x3715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B4 PUSH1 0x32 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x37BF DUP3 PUSH2 0x3758 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E3 DUP2 PUSH2 0x37A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3846 PUSH1 0x2E DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3851 DUP3 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3875 DUP2 PUSH2 0x3839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A3 DUP3 PUSH2 0x387C JUMP JUMPDEST PUSH2 0x38AD DUP2 DUP6 PUSH2 0x3887 JUMP JUMPDEST SWAP4 POP PUSH2 0x38BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x38C6 DUP2 PUSH2 0x2732 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x38E6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x38F3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x3900 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B86 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3912 DUP2 DUP5 PUSH2 0x3898 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x392C DUP2 PUSH2 0x2654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3948 JUMPI PUSH2 0x3947 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3956 DUP5 DUP3 DUP6 ADD PUSH2 0x391D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3995 PUSH1 0x20 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x39A0 DUP3 PUSH2 0x395F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C4 DUP2 PUSH2 0x3988 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A01 PUSH1 0x1C DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0C DUP3 PUSH2 0x39CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A30 DUP2 PUSH2 0x39F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE BASEFEE 0xC6 0x4F RETURNDATASIZE 0xA7 PUSH16 0x5ADF91437CBFF133DCA0FBBEC89EBEF4 0x4C PUSH26 0x5E65F9021759364736F6C634300080800330000000000000000 ","sourceMap":"464:3655:24:-:0;;;1293:554;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1390:113:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1523:16:24;5616:15:0;5599:32;;;;;;;;;;;;5556:80;1464:5:9;1456;:13;;;;;;;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;;;;;;;:::i;:::-;;1390:113;;936:32:5;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1630:16:24::2;1585:62;;;;;;;;;;::::0;::::2;1677:14;1658:33;;;;;;;;;;::::0;::::2;1714:7;1702:19;;;;::::0;::::2;1753:16;1732:37;;;;;;;;;;::::0;::::2;1797:12;1780:14;:29;;;;;;;:::i;:::-;;1832:7;1820:19;;;;::::0;::::2;1293:554:::0;;;;;;464:3655;;640:96:15;693:7;719:10;712:17;;640:96;:::o;2426:187:5:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;464:3655:24:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:101::-;881:7;921:18;914:5;910:30;899:41;;845:101;;;:::o;952:120::-;1024:23;1041:5;1024:23;:::i;:::-;1017:5;1014:34;1004:62;;1062:1;1059;1052:12;1004:62;952:120;:::o;1078:141::-;1134:5;1165:6;1159:13;1150:22;;1181:32;1207:5;1181:32;:::i;:::-;1078:141;;;;:::o;1225:77::-;1262:7;1291:5;1280:16;;1225:77;;;:::o;1308:122::-;1381:24;1399:5;1381:24;:::i;:::-;1374:5;1371:35;1361:63;;1420:1;1417;1410:12;1361:63;1308:122;:::o;1436:143::-;1493:5;1524:6;1518:13;1509:22;;1540:33;1567:5;1540:33;:::i;:::-;1436:143;;;;:::o;1585:93::-;1621:7;1661:10;1654:5;1650:22;1639:33;;1585:93;;;:::o;1684:120::-;1756:23;1773:5;1756:23;:::i;:::-;1749:5;1746:34;1736:62;;1794:1;1791;1784:12;1736:62;1684:120;:::o;1810:141::-;1866:5;1897:6;1891:13;1882:22;;1913:32;1939:5;1913:32;:::i;:::-;1810:141;;;;:::o;1957:117::-;2066:1;2063;2056:12;2080:102;2121:6;2172:2;2168:7;2163:2;2156:5;2152:14;2148:28;2138:38;;2080:102;;;:::o;2188:180::-;2236:77;2233:1;2226:88;2333:4;2330:1;2323:15;2357:4;2354:1;2347:15;2374:281;2457:27;2479:4;2457:27;:::i;:::-;2449:6;2445:40;2587:6;2575:10;2572:22;2551:18;2539:10;2536:34;2533:62;2530:88;;;2598:18;;:::i;:::-;2530:88;2638:10;2634:2;2627:22;2417:238;2374:281;;:::o;2661:129::-;2695:6;2722:20;;:::i;:::-;2712:30;;2751:33;2779:4;2771:6;2751:33;:::i;:::-;2661:129;;;:::o;2796:259::-;2881:4;2971:18;2963:6;2960:30;2957:56;;;2993:18;;:::i;:::-;2957:56;3043:4;3035:6;3031:17;3023:25;;2796:259;;;:::o;3061:117::-;3170:1;3167;3160:12;3184:117;3293:1;3290;3283:12;3307:308;3369:4;3459:18;3451:6;3448:30;3445:56;;;3481:18;;:::i;:::-;3445:56;3519:29;3541:6;3519:29;:::i;:::-;3511:37;;3603:4;3597;3593:15;3585:23;;3307:308;;;:::o;3621:307::-;3689:1;3699:113;3713:6;3710:1;3707:13;3699:113;;;3798:1;3793:3;3789:11;3783:18;3779:1;3774:3;3770:11;3763:39;3735:2;3732:1;3728:10;3723:15;;3699:113;;;3830:6;3827:1;3824:13;3821:101;;;3910:1;3901:6;3896:3;3892:16;3885:27;3821:101;3670:258;3621:307;;;:::o;3934:421::-;4023:5;4048:66;4064:49;4106:6;4064:49;:::i;:::-;4048:66;:::i;:::-;4039:75;;4137:6;4130:5;4123:21;4175:4;4168:5;4164:16;4213:3;4204:6;4199:3;4195:16;4192:25;4189:112;;;4220:79;;:::i;:::-;4189:112;4310:39;4342:6;4337:3;4332;4310:39;:::i;:::-;4029:326;3934:421;;;;;:::o;4375:355::-;4442:5;4491:3;4484:4;4476:6;4472:17;4468:27;4458:122;;4499:79;;:::i;:::-;4458:122;4609:6;4603:13;4634:90;4720:3;4712:6;4705:4;4697:6;4693:17;4634:90;:::i;:::-;4625:99;;4448:282;4375:355;;;;:::o;4753:893::-;4868:5;4893:89;4909:72;4974:6;4909:72;:::i;:::-;4893:89;:::i;:::-;4884:98;;5002:5;5055:4;5047:6;5043:17;5035:6;5031:30;5084:3;5076:6;5073:15;5070:122;;;5103:79;;:::i;:::-;5070:122;5218:6;5201:439;5235:6;5230:3;5227:15;5201:439;;;5317:3;5311:10;5353:18;5340:11;5337:35;5334:122;;;5375:79;;:::i;:::-;5334:122;5499:11;5491:6;5487:24;5537:58;5591:3;5579:10;5537:58;:::i;:::-;5532:3;5525:71;5625:4;5620:3;5616:14;5609:21;;5277:363;;5261:4;5256:3;5252:14;5245:21;;5201:439;;;5205:21;4874:772;;4753:893;;;;;:::o;5669:381::-;5759:5;5808:3;5801:4;5793:6;5789:17;5785:27;5775:122;;5816:79;;:::i;:::-;5775:122;5920:4;5942:102;6040:3;6032:6;6024;5942:102;:::i;:::-;5933:111;;5765:285;5669:381;;;;:::o;6056:77::-;6093:7;6122:5;6111:16;;6056:77;;;:::o;6139:122::-;6212:24;6230:5;6212:24;:::i;:::-;6205:5;6202:35;6192:63;;6251:1;6248;6241:12;6192:63;6139:122;:::o;6267:143::-;6324:5;6355:6;6349:13;6340:22;;6371:33;6398:5;6371:33;:::i;:::-;6267:143;;;;:::o;6416:1349::-;6562:6;6570;6578;6586;6594;6602;6651:3;6639:9;6630:7;6626:23;6622:33;6619:120;;;6658:79;;:::i;:::-;6619:120;6778:1;6803:64;6859:7;6850:6;6839:9;6835:22;6803:64;:::i;:::-;6793:74;;6749:128;6916:2;6942:63;6997:7;6988:6;6977:9;6973:22;6942:63;:::i;:::-;6932:73;;6887:128;7054:2;7080:64;7136:7;7127:6;7116:9;7112:22;7080:64;:::i;:::-;7070:74;;7025:129;7193:2;7219:63;7274:7;7265:6;7254:9;7250:22;7219:63;:::i;:::-;7209:73;;7164:128;7352:3;7341:9;7337:19;7331:26;7384:18;7376:6;7373:30;7370:117;;;7406:79;;:::i;:::-;7370:117;7511:97;7600:7;7591:6;7580:9;7576:22;7511:97;:::i;:::-;7501:107;;7302:316;7657:3;7684:64;7740:7;7731:6;7720:9;7716:22;7684:64;:::i;:::-;7674:74;;7628:130;6416:1349;;;;;;;;:::o;7771:180::-;7819:77;7816:1;7809:88;7916:4;7913:1;7906:15;7940:4;7937:1;7930:15;7957:320;8001:6;8038:1;8032:4;8028:12;8018:22;;8085:1;8079:4;8075:12;8106:18;8096:81;;8162:4;8154:6;8150:17;8140:27;;8096:81;8224:2;8216:6;8213:14;8193:18;8190:38;8187:84;;;8243:18;;:::i;:::-;8187:84;8008:269;7957:320;;;:::o;464:3655:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_2209":{"entryPoint":7915,"id":2209,"parameterSlots":4,"returnSlots":0},"@_approve_2075":{"entryPoint":5056,"id":2075,"parameterSlots":2,"returnSlots":0},"@_baseURI_1512":{"entryPoint":7410,"id":1512,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_2196":{"entryPoint":7909,"id":2196,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_2183":{"entryPoint":7921,"id":2183,"parameterSlots":4,"returnSlots":1},"@_checkOwner_1212":{"entryPoint":6568,"id":1212,"parameterSlots":0,"returnSlots":0},"@_exists_1744":{"entryPoint":7643,"id":1744,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_1778":{"entryPoint":5657,"id":1778,"parameterSlots":2,"returnSlots":1},"@_mint_1899":{"entryPoint":9009,"id":1899,"parameterSlots":2,"returnSlots":0},"@_msgSender_2884":{"entryPoint":5048,"id":2884,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1726":{"entryPoint":6694,"id":1726,"parameterSlots":1,"returnSlots":1},"@_requireMinted_2121":{"entryPoint":4973,"id":2121,"parameterSlots":1,"returnSlots":0},"@_safeMint_1793":{"entryPoint":7708,"id":1793,"parameterSlots":2,"returnSlots":0},"@_safeMint_1822":{"entryPoint":8544,"id":1822,"parameterSlots":3,"returnSlots":0},"@_safeTransfer_1713":{"entryPoint":7318,"id":1713,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_2107":{"entryPoint":6953,"id":2107,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_2484":{"entryPoint":7738,"id":2484,"parameterSlots":2,"returnSlots":0},"@_transferOwnership_1269":{"entryPoint":6755,"id":1269,"parameterSlots":1,"returnSlots":0},"@_transfer_2051":{"entryPoint":5806,"id":2051,"parameterSlots":3,"returnSlots":0},"@approve_1555":{"entryPoint":1758,"id":1555,"parameterSlots":2,"returnSlots":0},"@balanceOf_1416":{"entryPoint":2902,"id":1416,"parameterSlots":1,"returnSlots":1},"@fulfillRandomWords_4724":{"entryPoint":5241,"id":4724,"parameterSlots":2,"returnSlots":0},"@getApproved_1573":{"entryPoint":1688,"id":1573,"parameterSlots":1,"returnSlots":1},"@getBreedFromModdedRng_4819":{"entryPoint":3356,"id":4819,"parameterSlots":1,"returnSlots":1},"@getChanceArray_4832":{"entryPoint":2714,"id":4832,"parameterSlots":0,"returnSlots":1},"@getDogTokenUris_4852":{"entryPoint":2326,"id":4852,"parameterSlots":1,"returnSlots":1},"@getMintFee_4840":{"entryPoint":3106,"id":4840,"parameterSlots":0,"returnSlots":1},"@getTokenCounter_4860":{"entryPoint":2892,"id":4860,"parameterSlots":0,"returnSlots":1},"@isApprovedForAll_1608":{"entryPoint":4467,"id":1608,"parameterSlots":2,"returnSlots":1},"@isContract_2560":{"entryPoint":8635,"id":2560,"parameterSlots":1,"returnSlots":1},"@log10_3862":{"entryPoint":8670,"id":3862,"parameterSlots":1,"returnSlots":1},"@name_1454":{"entryPoint":1542,"id":1454,"parameterSlots":0,"returnSlots":1},"@ownerOf_1444":{"entryPoint":2757,"id":1444,"parameterSlots":1,"returnSlots":1},"@owner_1198":{"entryPoint":3146,"id":1198,"parameterSlots":0,"returnSlots":1},"@rawFulfillRandomWords_56":{"entryPoint":2038,"id":56,"parameterSlots":2,"returnSlots":0},"@renounceOwnership_1226":{"entryPoint":3086,"id":1226,"parameterSlots":0,"returnSlots":0},"@requestNft_4665":{"entryPoint":3582,"id":4665,"parameterSlots":0,"returnSlots":1},"@safeTransferFrom_1654":{"entryPoint":2682,"id":1654,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1684":{"entryPoint":4094,"id":1684,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1590":{"entryPoint":3334,"id":1590,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1392":{"entryPoint":4747,"id":1392,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2399":{"entryPoint":1445,"id":2399,"parameterSlots":1,"returnSlots":1},"@supportsInterface_3146":{"entryPoint":7537,"id":3146,"parameterSlots":1,"returnSlots":1},"@symbol_1464":{"entryPoint":3188,"id":1464,"parameterSlots":0,"returnSlots":1},"@toString_2953":{"entryPoint":8328,"id":2953,"parameterSlots":1,"returnSlots":1},"@tokenURI_1503":{"entryPoint":7433,"id":1503,"parameterSlots":1,"returnSlots":1},"@tokenURI_2458":{"entryPoint":4192,"id":2458,"parameterSlots":1,"returnSlots":1},"@transferFrom_1635":{"entryPoint":2230,"id":1635,"parameterSlots":3,"returnSlots":0},"@transferOwnership_1249":{"entryPoint":4615,"id":1249,"parameterSlots":1,"returnSlots":0},"@withdraw_4758":{"entryPoint":2502,"id":4758,"parameterSlots":0,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10618,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":11552,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":10356,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10723,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":11252,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":9835,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":14621,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":11618,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":13215,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11795,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":10861,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":11664,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":11273,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":10377,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9856,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":14642,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":10196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":13236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10769,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10991,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":10291,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":11028,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":9913,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":13022,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":14488,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack":{"entryPoint":11441,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":10051,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13292,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":12368,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":14247,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":13456,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":13739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":14836,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":13885,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":14101,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":12739,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":14393,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":14728,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":13993,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":12593,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":12035,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12496,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":12181,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint16_to_t_uint16_fromStack":{"entryPoint":13086,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10976,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":11142,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint32_to_t_uint32_fromStack":{"entryPoint":13117,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint64_to_t_uint64_fromStack":{"entryPoint":13057,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13341,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":12531,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10306,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":12248,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":14545,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed":{"entryPoint":11115,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":9928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed":{"entryPoint":13132,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$4552__to_t_uint8__fromStack_reversed":{"entryPoint":11456,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Breed_$4552_t_address__to_t_uint8_t_address__fromStack_reversed":{"entryPoint":13619,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10108,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12403,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14282,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13491,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13774,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14871,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13920,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14136,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12774,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14428,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14028,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12628,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12070,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12216,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":11157,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":10542,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":9748,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10569,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":11488,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10966,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":10944,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":14460,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":9955,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$3_memory_ptr":{"entryPoint":11015,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack":{"entryPoint":10955,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":14471,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":12482,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":9966,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13281,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12853,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":10273,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":9901,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":13012,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":9768,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Breed_$4552":{"entryPoint":11404,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint16":{"entryPoint":13072,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":10241,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10142,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint32":{"entryPoint":13101,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint64":{"entryPoint":13037,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_enum$_Breed_$4552_to_t_uint8":{"entryPoint":11423,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":11537,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":9983,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":11906,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10493,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":12939,"id":null,"parameterSlots":1,"returnSlots":1},"mod_t_uint256":{"entryPoint":13570,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":12806,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":13523,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":11337,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11859,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":12435,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10446,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10441,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":10613,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":11483,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":9763,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":9758,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10034,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":12289,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":14168,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":13377,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":13660,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":14795,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":13806,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":14060,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":12660,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":14314,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":14687,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":13952,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":12552,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":11956,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":12493,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":12102,"id":null,"parameterSlots":1,"returnSlots":0},"validator_assert_t_enum$_Breed_$4552":{"entryPoint":11384,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":10333,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":11229,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":9812,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10152,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:38136:26","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:26","statements":[{"nodeType":"YulAssignment","src":"57:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:26"},"nodeType":"YulFunctionCall","src":"67:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:26"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:26","type":""}],"src":"7:75:26"},{"body":{"nodeType":"YulBlock","src":"177:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:26"},"nodeType":"YulFunctionCall","src":"187:12:26"},"nodeType":"YulExpressionStatement","src":"187:12:26"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:26"},{"body":{"nodeType":"YulBlock","src":"300:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:26"},"nodeType":"YulFunctionCall","src":"310:12:26"},"nodeType":"YulExpressionStatement","src":"310:12:26"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:26"},{"body":{"nodeType":"YulBlock","src":"378:105:26","statements":[{"nodeType":"YulAssignment","src":"388:89:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:26"},"nodeType":"YulFunctionCall","src":"399:78:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:26"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:26","type":""}],"src":"334:149:26"},{"body":{"nodeType":"YulBlock","src":"531:78:26","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:26"},"nodeType":"YulFunctionCall","src":"589:12:26"},"nodeType":"YulExpressionStatement","src":"589:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:26"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:26"},"nodeType":"YulFunctionCall","src":"561:23:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:26"},"nodeType":"YulFunctionCall","src":"551:34:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:26"},"nodeType":"YulFunctionCall","src":"544:42:26"},"nodeType":"YulIf","src":"541:62:26"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:26","type":""}],"src":"489:120:26"},{"body":{"nodeType":"YulBlock","src":"666:86:26","statements":[{"nodeType":"YulAssignment","src":"676:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:26"},"nodeType":"YulFunctionCall","src":"685:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:26"},"nodeType":"YulFunctionCall","src":"714:32:26"},"nodeType":"YulExpressionStatement","src":"714:32:26"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:26","type":""}],"src":"615:137:26"},{"body":{"nodeType":"YulBlock","src":"823:262:26","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:26"},"nodeType":"YulFunctionCall","src":"871:79:26"},"nodeType":"YulExpressionStatement","src":"871:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:26"},"nodeType":"YulFunctionCall","src":"840:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:26"},"nodeType":"YulFunctionCall","src":"836:32:26"},"nodeType":"YulIf","src":"833:119:26"},{"nodeType":"YulBlock","src":"962:116:26","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:26","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:26"},"nodeType":"YulFunctionCall","src":"1036:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:26"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:26"},"nodeType":"YulFunctionCall","src":"1016:52:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:26","type":""}],"src":"758:327:26"},{"body":{"nodeType":"YulBlock","src":"1133:48:26","statements":[{"nodeType":"YulAssignment","src":"1143:32:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:26"},"nodeType":"YulFunctionCall","src":"1161:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:26"},"nodeType":"YulFunctionCall","src":"1154:21:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:26"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:26","type":""}],"src":"1091:90:26"},{"body":{"nodeType":"YulBlock","src":"1246:50:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:26"},"nodeType":"YulFunctionCall","src":"1268:21:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:26"},"nodeType":"YulFunctionCall","src":"1256:34:26"},"nodeType":"YulExpressionStatement","src":"1256:34:26"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:26","type":""}],"src":"1187:109:26"},{"body":{"nodeType":"YulBlock","src":"1394:118:26","statements":[{"nodeType":"YulAssignment","src":"1404:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:26"},"nodeType":"YulFunctionCall","src":"1412:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:26"},"nodeType":"YulFunctionCall","src":"1487:17:26"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:26"},"nodeType":"YulFunctionCall","src":"1440:65:26"},"nodeType":"YulExpressionStatement","src":"1440:65:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:26","type":""}],"src":"1302:210:26"},{"body":{"nodeType":"YulBlock","src":"1577:40:26","statements":[{"nodeType":"YulAssignment","src":"1588:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:26"},"nodeType":"YulFunctionCall","src":"1598:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:26"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:26","type":""}],"src":"1518:99:26"},{"body":{"nodeType":"YulBlock","src":"1719:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:26"},"nodeType":"YulFunctionCall","src":"1729:19:26"},"nodeType":"YulExpressionStatement","src":"1729:19:26"},{"nodeType":"YulAssignment","src":"1757:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:26"},"nodeType":"YulFunctionCall","src":"1772:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:26","type":""}],"src":"1623:169:26"},{"body":{"nodeType":"YulBlock","src":"1847:258:26","statements":[{"nodeType":"YulVariableDeclaration","src":"1857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"1866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"1926:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1951:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1956:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1947:3:26"},"nodeType":"YulFunctionCall","src":"1947:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1970:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"1975:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1966:3:26"},"nodeType":"YulFunctionCall","src":"1966:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1960:5:26"},"nodeType":"YulFunctionCall","src":"1960:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1940:6:26"},"nodeType":"YulFunctionCall","src":"1940:39:26"},"nodeType":"YulExpressionStatement","src":"1940:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1884:2:26"},"nodeType":"YulFunctionCall","src":"1884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1898:19:26","statements":[{"nodeType":"YulAssignment","src":"1900:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"1912:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1905:3:26"},"nodeType":"YulFunctionCall","src":"1905:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"1880:3:26","statements":[]},"src":"1876:113:26"},{"body":{"nodeType":"YulBlock","src":"2023:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2073:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2078:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2069:3:26"},"nodeType":"YulFunctionCall","src":"2069:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2087:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2062:6:26"},"nodeType":"YulFunctionCall","src":"2062:27:26"},"nodeType":"YulExpressionStatement","src":"2062:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2004:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2007:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2001:2:26"},"nodeType":"YulFunctionCall","src":"2001:13:26"},"nodeType":"YulIf","src":"1998:101:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1829:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1834:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1839:6:26","type":""}],"src":"1798:307:26"},{"body":{"nodeType":"YulBlock","src":"2159:54:26","statements":[{"nodeType":"YulAssignment","src":"2169:38:26","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2187:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2194:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2183:3:26"},"nodeType":"YulFunctionCall","src":"2183:14:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2203:2:26","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2199:3:26"},"nodeType":"YulFunctionCall","src":"2199:7:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2179:3:26"},"nodeType":"YulFunctionCall","src":"2179:28:26"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2169:6:26"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2142:5:26","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2152:6:26","type":""}],"src":"2111:102:26"},{"body":{"nodeType":"YulBlock","src":"2311:272:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2321:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2368:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2335:32:26"},"nodeType":"YulFunctionCall","src":"2335:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2325:6:26","type":""}]},{"nodeType":"YulAssignment","src":"2383:78:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2449:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2454:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2390:58:26"},"nodeType":"YulFunctionCall","src":"2390:71:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2383:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2496:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"2503:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2492:3:26"},"nodeType":"YulFunctionCall","src":"2492:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2510:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2515:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2470:21:26"},"nodeType":"YulFunctionCall","src":"2470:52:26"},"nodeType":"YulExpressionStatement","src":"2470:52:26"},{"nodeType":"YulAssignment","src":"2531:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2542:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2569:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2547:21:26"},"nodeType":"YulFunctionCall","src":"2547:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2538:3:26"},"nodeType":"YulFunctionCall","src":"2538:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2531:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2292:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2299:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2307:3:26","type":""}],"src":"2219:364:26"},{"body":{"nodeType":"YulBlock","src":"2707:195:26","statements":[{"nodeType":"YulAssignment","src":"2717:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2729:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2740:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2725:3:26"},"nodeType":"YulFunctionCall","src":"2725:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2717:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2764:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2775:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2760:3:26"},"nodeType":"YulFunctionCall","src":"2760:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2783:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2789:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2779:3:26"},"nodeType":"YulFunctionCall","src":"2779:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2753:6:26"},"nodeType":"YulFunctionCall","src":"2753:47:26"},"nodeType":"YulExpressionStatement","src":"2753:47:26"},{"nodeType":"YulAssignment","src":"2809:86:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2881:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"2890:4:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2817:63:26"},"nodeType":"YulFunctionCall","src":"2817:78:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2809:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2679:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2691:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2702:4:26","type":""}],"src":"2589:313:26"},{"body":{"nodeType":"YulBlock","src":"2953:32:26","statements":[{"nodeType":"YulAssignment","src":"2963:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2974:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2963:7:26"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2935:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2945:7:26","type":""}],"src":"2908:77:26"},{"body":{"nodeType":"YulBlock","src":"3034:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"3091:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3100:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3103:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3093:6:26"},"nodeType":"YulFunctionCall","src":"3093:12:26"},"nodeType":"YulExpressionStatement","src":"3093:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3057:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3082:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3064:17:26"},"nodeType":"YulFunctionCall","src":"3064:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3054:2:26"},"nodeType":"YulFunctionCall","src":"3054:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3047:6:26"},"nodeType":"YulFunctionCall","src":"3047:43:26"},"nodeType":"YulIf","src":"3044:63:26"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3027:5:26","type":""}],"src":"2991:122:26"},{"body":{"nodeType":"YulBlock","src":"3171:87:26","statements":[{"nodeType":"YulAssignment","src":"3181:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3203:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3190:12:26"},"nodeType":"YulFunctionCall","src":"3190:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3181:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3219:26:26"},"nodeType":"YulFunctionCall","src":"3219:33:26"},"nodeType":"YulExpressionStatement","src":"3219:33:26"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3149:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"3157:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3165:5:26","type":""}],"src":"3119:139:26"},{"body":{"nodeType":"YulBlock","src":"3330:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"3376:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3378:77:26"},"nodeType":"YulFunctionCall","src":"3378:79:26"},"nodeType":"YulExpressionStatement","src":"3378:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3351:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3360:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3347:3:26"},"nodeType":"YulFunctionCall","src":"3347:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3372:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3343:3:26"},"nodeType":"YulFunctionCall","src":"3343:32:26"},"nodeType":"YulIf","src":"3340:119:26"},{"nodeType":"YulBlock","src":"3469:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"3484:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"3498:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3488:6:26","type":""}]},{"nodeType":"YulAssignment","src":"3513:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3548:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3559:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3544:3:26"},"nodeType":"YulFunctionCall","src":"3544:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3568:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3523:20:26"},"nodeType":"YulFunctionCall","src":"3523:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3513:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3300:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3311:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3323:6:26","type":""}],"src":"3264:329:26"},{"body":{"nodeType":"YulBlock","src":"3644:81:26","statements":[{"nodeType":"YulAssignment","src":"3654:65:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3669:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"3676:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3665:3:26"},"nodeType":"YulFunctionCall","src":"3665:54:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3654:7:26"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3626:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3636:7:26","type":""}],"src":"3599:126:26"},{"body":{"nodeType":"YulBlock","src":"3776:51:26","statements":[{"nodeType":"YulAssignment","src":"3786:35:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3815:5:26"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3797:17:26"},"nodeType":"YulFunctionCall","src":"3797:24:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3786:7:26"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3758:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3768:7:26","type":""}],"src":"3731:96:26"},{"body":{"nodeType":"YulBlock","src":"3898:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3915:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3938:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3920:17:26"},"nodeType":"YulFunctionCall","src":"3920:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3908:6:26"},"nodeType":"YulFunctionCall","src":"3908:37:26"},"nodeType":"YulExpressionStatement","src":"3908:37:26"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3886:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3893:3:26","type":""}],"src":"3833:118:26"},{"body":{"nodeType":"YulBlock","src":"4055:124:26","statements":[{"nodeType":"YulAssignment","src":"4065:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4077:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4088:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4073:3:26"},"nodeType":"YulFunctionCall","src":"4073:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4065:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4145:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4158:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4169:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4154:3:26"},"nodeType":"YulFunctionCall","src":"4154:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4101:43:26"},"nodeType":"YulFunctionCall","src":"4101:71:26"},"nodeType":"YulExpressionStatement","src":"4101:71:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4027:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4039:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4050:4:26","type":""}],"src":"3957:222:26"},{"body":{"nodeType":"YulBlock","src":"4228:79:26","statements":[{"body":{"nodeType":"YulBlock","src":"4285:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4294:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4297:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4287:6:26"},"nodeType":"YulFunctionCall","src":"4287:12:26"},"nodeType":"YulExpressionStatement","src":"4287:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4251:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4276:5:26"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4258:17:26"},"nodeType":"YulFunctionCall","src":"4258:24:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4248:2:26"},"nodeType":"YulFunctionCall","src":"4248:35:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4241:6:26"},"nodeType":"YulFunctionCall","src":"4241:43:26"},"nodeType":"YulIf","src":"4238:63:26"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4221:5:26","type":""}],"src":"4185:122:26"},{"body":{"nodeType":"YulBlock","src":"4365:87:26","statements":[{"nodeType":"YulAssignment","src":"4375:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4397:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4384:12:26"},"nodeType":"YulFunctionCall","src":"4384:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4375:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4440:5:26"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4413:26:26"},"nodeType":"YulFunctionCall","src":"4413:33:26"},"nodeType":"YulExpressionStatement","src":"4413:33:26"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4343:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"4351:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4359:5:26","type":""}],"src":"4313:139:26"},{"body":{"nodeType":"YulBlock","src":"4541:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"4587:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4589:77:26"},"nodeType":"YulFunctionCall","src":"4589:79:26"},"nodeType":"YulExpressionStatement","src":"4589:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4562:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4571:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4558:3:26"},"nodeType":"YulFunctionCall","src":"4558:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4583:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4554:3:26"},"nodeType":"YulFunctionCall","src":"4554:32:26"},"nodeType":"YulIf","src":"4551:119:26"},{"nodeType":"YulBlock","src":"4680:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4695:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4709:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4699:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4724:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4759:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4770:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4755:3:26"},"nodeType":"YulFunctionCall","src":"4755:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4779:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4734:20:26"},"nodeType":"YulFunctionCall","src":"4734:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4724:6:26"}]}]},{"nodeType":"YulBlock","src":"4807:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"4822:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"4836:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4826:6:26","type":""}]},{"nodeType":"YulAssignment","src":"4852:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4887:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"4898:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4883:3:26"},"nodeType":"YulFunctionCall","src":"4883:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4907:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4862:20:26"},"nodeType":"YulFunctionCall","src":"4862:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4852:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4503:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4514:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4526:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4534:6:26","type":""}],"src":"4458:474:26"},{"body":{"nodeType":"YulBlock","src":"5027:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5044:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5047:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5037:6:26"},"nodeType":"YulFunctionCall","src":"5037:12:26"},"nodeType":"YulExpressionStatement","src":"5037:12:26"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"4938:117:26"},{"body":{"nodeType":"YulBlock","src":"5089:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5106:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5109:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5099:6:26"},"nodeType":"YulFunctionCall","src":"5099:88:26"},"nodeType":"YulExpressionStatement","src":"5099:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5203:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5206:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5196:6:26"},"nodeType":"YulFunctionCall","src":"5196:15:26"},"nodeType":"YulExpressionStatement","src":"5196:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5227:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5230:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5220:6:26"},"nodeType":"YulFunctionCall","src":"5220:15:26"},"nodeType":"YulExpressionStatement","src":"5220:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5061:180:26"},{"body":{"nodeType":"YulBlock","src":"5290:238:26","statements":[{"nodeType":"YulVariableDeclaration","src":"5300:58:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5322:6:26"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5352:4:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"5330:21:26"},"nodeType":"YulFunctionCall","src":"5330:27:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5318:3:26"},"nodeType":"YulFunctionCall","src":"5318:40:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"5304:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5469:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5471:16:26"},"nodeType":"YulFunctionCall","src":"5471:18:26"},"nodeType":"YulExpressionStatement","src":"5471:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5412:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"5424:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5409:2:26"},"nodeType":"YulFunctionCall","src":"5409:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5448:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"5460:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5445:2:26"},"nodeType":"YulFunctionCall","src":"5445:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5406:2:26"},"nodeType":"YulFunctionCall","src":"5406:62:26"},"nodeType":"YulIf","src":"5403:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5507:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"5511:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5500:6:26"},"nodeType":"YulFunctionCall","src":"5500:22:26"},"nodeType":"YulExpressionStatement","src":"5500:22:26"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"5276:6:26","type":""},{"name":"size","nodeType":"YulTypedName","src":"5284:4:26","type":""}],"src":"5247:281:26"},{"body":{"nodeType":"YulBlock","src":"5575:88:26","statements":[{"nodeType":"YulAssignment","src":"5585:30:26","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"5595:18:26"},"nodeType":"YulFunctionCall","src":"5595:20:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5585:6:26"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"5644:6:26"},{"name":"size","nodeType":"YulIdentifier","src":"5652:4:26"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"5624:19:26"},"nodeType":"YulFunctionCall","src":"5624:33:26"},"nodeType":"YulExpressionStatement","src":"5624:33:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"5559:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"5568:6:26","type":""}],"src":"5534:129:26"},{"body":{"nodeType":"YulBlock","src":"5751:229:26","statements":[{"body":{"nodeType":"YulBlock","src":"5856:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"5858:16:26"},"nodeType":"YulFunctionCall","src":"5858:18:26"},"nodeType":"YulExpressionStatement","src":"5858:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5828:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5836:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5825:2:26"},"nodeType":"YulFunctionCall","src":"5825:30:26"},"nodeType":"YulIf","src":"5822:56:26"},{"nodeType":"YulAssignment","src":"5888:25:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5900:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5908:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5896:3:26"},"nodeType":"YulFunctionCall","src":"5896:17:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5888:4:26"}]},{"nodeType":"YulAssignment","src":"5950:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"5962:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"5968:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5958:3:26"},"nodeType":"YulFunctionCall","src":"5958:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"5950:4:26"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"5735:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"5746:4:26","type":""}],"src":"5669:311:26"},{"body":{"nodeType":"YulBlock","src":"6075:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6092:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6095:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6085:6:26"},"nodeType":"YulFunctionCall","src":"6085:12:26"},"nodeType":"YulExpressionStatement","src":"6085:12:26"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"5986:117:26"},{"body":{"nodeType":"YulBlock","src":"6228:608:26","statements":[{"nodeType":"YulAssignment","src":"6238:90:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6320:6:26"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6263:56:26"},"nodeType":"YulFunctionCall","src":"6263:64:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"6247:15:26"},"nodeType":"YulFunctionCall","src":"6247:81:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"6238:5:26"}]},{"nodeType":"YulVariableDeclaration","src":"6337:16:26","value":{"name":"array","nodeType":"YulIdentifier","src":"6348:5:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"6341:3:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6370:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"6377:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:26"},"nodeType":"YulFunctionCall","src":"6363:21:26"},"nodeType":"YulExpressionStatement","src":"6363:21:26"},{"nodeType":"YulAssignment","src":"6393:23:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6404:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"6411:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6400:3:26"},"nodeType":"YulFunctionCall","src":"6400:16:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6393:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"6426:44:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6444:6:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6456:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6464:4:26","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6452:3:26"},"nodeType":"YulFunctionCall","src":"6452:17:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6440:3:26"},"nodeType":"YulFunctionCall","src":"6440:30:26"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"6430:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6498:103:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"6512:77:26"},"nodeType":"YulFunctionCall","src":"6512:79:26"},"nodeType":"YulExpressionStatement","src":"6512:79:26"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"6485:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"6493:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6482:2:26"},"nodeType":"YulFunctionCall","src":"6482:15:26"},"nodeType":"YulIf","src":"6479:122:26"},{"body":{"nodeType":"YulBlock","src":"6686:144:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6701:21:26","value":{"name":"src","nodeType":"YulIdentifier","src":"6719:3:26"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"6705:10:26","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6743:3:26"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"6769:10:26"},{"name":"end","nodeType":"YulIdentifier","src":"6781:3:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"6748:20:26"},"nodeType":"YulFunctionCall","src":"6748:37:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6736:6:26"},"nodeType":"YulFunctionCall","src":"6736:50:26"},"nodeType":"YulExpressionStatement","src":"6736:50:26"},{"nodeType":"YulAssignment","src":"6799:21:26","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"6810:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6815:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6806:3:26"},"nodeType":"YulFunctionCall","src":"6806:14:26"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"6799:3:26"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6639:3:26"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"6644:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6636:2:26"},"nodeType":"YulFunctionCall","src":"6636:15:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6652:25:26","statements":[{"nodeType":"YulAssignment","src":"6654:21:26","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"6665:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"6670:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6661:3:26"},"nodeType":"YulFunctionCall","src":"6661:14:26"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"6654:3:26"}]}]},"pre":{"nodeType":"YulBlock","src":"6614:21:26","statements":[{"nodeType":"YulVariableDeclaration","src":"6616:17:26","value":{"name":"offset","nodeType":"YulIdentifier","src":"6627:6:26"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"6620:3:26","type":""}]}]},"src":"6610:220:26"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6198:6:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6206:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6214:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6222:5:26","type":""}],"src":"6126:710:26"},{"body":{"nodeType":"YulBlock","src":"6936:293:26","statements":[{"body":{"nodeType":"YulBlock","src":"6985:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"6987:77:26"},"nodeType":"YulFunctionCall","src":"6987:79:26"},"nodeType":"YulExpressionStatement","src":"6987:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6964:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6972:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6960:3:26"},"nodeType":"YulFunctionCall","src":"6960:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"6979:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6956:3:26"},"nodeType":"YulFunctionCall","src":"6956:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6949:6:26"},"nodeType":"YulFunctionCall","src":"6949:35:26"},"nodeType":"YulIf","src":"6946:122:26"},{"nodeType":"YulVariableDeclaration","src":"7077:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7104:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7091:12:26"},"nodeType":"YulFunctionCall","src":"7091:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7081:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7120:103:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7196:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7204:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7192:3:26"},"nodeType":"YulFunctionCall","src":"7192:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"7211:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"7219:3:26"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7129:62:26"},"nodeType":"YulFunctionCall","src":"7129:94:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7120:5:26"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6914:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6922:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"6930:5:26","type":""}],"src":"6859:370:26"},{"body":{"nodeType":"YulBlock","src":"7343:576:26","statements":[{"body":{"nodeType":"YulBlock","src":"7389:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7391:77:26"},"nodeType":"YulFunctionCall","src":"7391:79:26"},"nodeType":"YulExpressionStatement","src":"7391:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7364:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7373:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7360:3:26"},"nodeType":"YulFunctionCall","src":"7360:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7385:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7356:3:26"},"nodeType":"YulFunctionCall","src":"7356:32:26"},"nodeType":"YulIf","src":"7353:119:26"},{"nodeType":"YulBlock","src":"7482:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7497:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7511:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7501:6:26","type":""}]},{"nodeType":"YulAssignment","src":"7526:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7561:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7572:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7557:3:26"},"nodeType":"YulFunctionCall","src":"7557:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7581:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7536:20:26"},"nodeType":"YulFunctionCall","src":"7536:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7526:6:26"}]}]},{"nodeType":"YulBlock","src":"7609:303:26","statements":[{"nodeType":"YulVariableDeclaration","src":"7624:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7655:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7666:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7651:3:26"},"nodeType":"YulFunctionCall","src":"7651:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7638:12:26"},"nodeType":"YulFunctionCall","src":"7638:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7628:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7717:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7719:77:26"},"nodeType":"YulFunctionCall","src":"7719:79:26"},"nodeType":"YulExpressionStatement","src":"7719:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7689:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"7697:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7686:2:26"},"nodeType":"YulFunctionCall","src":"7686:30:26"},"nodeType":"YulIf","src":"7683:117:26"},{"nodeType":"YulAssignment","src":"7814:88:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7874:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7885:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7870:3:26"},"nodeType":"YulFunctionCall","src":"7870:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7894:7:26"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7824:45:26"},"nodeType":"YulFunctionCall","src":"7824:78:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7814:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7305:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7316:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7328:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7336:6:26","type":""}],"src":"7235:684:26"},{"body":{"nodeType":"YulBlock","src":"8025:519:26","statements":[{"body":{"nodeType":"YulBlock","src":"8071:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"8073:77:26"},"nodeType":"YulFunctionCall","src":"8073:79:26"},"nodeType":"YulExpressionStatement","src":"8073:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8046:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8055:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8042:3:26"},"nodeType":"YulFunctionCall","src":"8042:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8067:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8038:3:26"},"nodeType":"YulFunctionCall","src":"8038:32:26"},"nodeType":"YulIf","src":"8035:119:26"},{"nodeType":"YulBlock","src":"8164:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8179:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8193:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8183:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8208:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8243:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"8254:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8239:3:26"},"nodeType":"YulFunctionCall","src":"8239:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8263:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8218:20:26"},"nodeType":"YulFunctionCall","src":"8218:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8208:6:26"}]}]},{"nodeType":"YulBlock","src":"8291:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8306:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8320:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8310:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8336:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8371:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"8382:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8367:3:26"},"nodeType":"YulFunctionCall","src":"8367:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8391:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8346:20:26"},"nodeType":"YulFunctionCall","src":"8346:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8336:6:26"}]}]},{"nodeType":"YulBlock","src":"8419:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"8434:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8448:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8438:6:26","type":""}]},{"nodeType":"YulAssignment","src":"8464:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8499:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"8510:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8495:3:26"},"nodeType":"YulFunctionCall","src":"8495:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8519:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"8474:20:26"},"nodeType":"YulFunctionCall","src":"8474:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"8464:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7979:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7990:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8002:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8010:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"8018:6:26","type":""}],"src":"7925:619:26"},{"body":{"nodeType":"YulBlock","src":"8622:32:26","statements":[{"nodeType":"YulAssignment","src":"8633:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"8643:4:26","type":"","value":"0x03"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8633:6:26"}]}]},"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8605:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8615:6:26","type":""}],"src":"8550:104:26"},{"body":{"nodeType":"YulBlock","src":"8769:34:26","statements":[{"nodeType":"YulAssignment","src":"8779:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"8794:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8779:11:26"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8741:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"8746:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8757:11:26","type":""}],"src":"8660:143:26"},{"body":{"nodeType":"YulBlock","src":"8879:28:26","statements":[{"nodeType":"YulAssignment","src":"8889:11:26","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8897:3:26"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8889:4:26"}]}]},"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8866:3:26","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8874:4:26","type":""}],"src":"8809:98:26"},{"body":{"nodeType":"YulBlock","src":"8968:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8985:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9008:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"8990:17:26"},"nodeType":"YulFunctionCall","src":"8990:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8978:6:26"},"nodeType":"YulFunctionCall","src":"8978:37:26"},"nodeType":"YulExpressionStatement","src":"8978:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8956:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8963:3:26","type":""}],"src":"8913:108:26"},{"body":{"nodeType":"YulBlock","src":"9107:99:26","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9151:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9159:3:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9117:33:26"},"nodeType":"YulFunctionCall","src":"9117:46:26"},"nodeType":"YulExpressionStatement","src":"9117:46:26"},{"nodeType":"YulAssignment","src":"9172:28:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9190:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9195:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9186:3:26"},"nodeType":"YulFunctionCall","src":"9186:14:26"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"9172:10:26"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"9080:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9088:3:26","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"9096:10:26","type":""}],"src":"9027:179:26"},{"body":{"nodeType":"YulBlock","src":"9285:38:26","statements":[{"nodeType":"YulAssignment","src":"9295:22:26","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"9307:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"9312:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9303:3:26"},"nodeType":"YulFunctionCall","src":"9303:14:26"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"9295:4:26"}]}]},"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"9272:3:26","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"9280:4:26","type":""}],"src":"9212:111:26"},{"body":{"nodeType":"YulBlock","src":"9473:582:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9483:66:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9543:5:26"}],"functionName":{"name":"array_length_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9497:45:26"},"nodeType":"YulFunctionCall","src":"9497:52:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9487:6:26","type":""}]},{"nodeType":"YulAssignment","src":"9558:91:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9637:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"9642:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9565:71:26"},"nodeType":"YulFunctionCall","src":"9565:84:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9558:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"9658:69:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9721:5:26"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9673:47:26"},"nodeType":"YulFunctionCall","src":"9673:54:26"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"9662:7:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9736:21:26","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"9750:7:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"9740:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"9826:222:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9840:34:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9867:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9861:5:26"},"nodeType":"YulFunctionCall","src":"9861:13:26"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"9844:13:26","type":""}]},{"nodeType":"YulAssignment","src":"9887:70:26","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"9938:13:26"},{"name":"pos","nodeType":"YulIdentifier","src":"9953:3:26"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9894:43:26"},"nodeType":"YulFunctionCall","src":"9894:63:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9887:3:26"}]},{"nodeType":"YulAssignment","src":"9970:68:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"10031:6:26"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$3_memory_ptr","nodeType":"YulIdentifier","src":"9980:50:26"},"nodeType":"YulFunctionCall","src":"9980:58:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"9970:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9788:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"9791:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"9785:2:26"},"nodeType":"YulFunctionCall","src":"9785:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"9799:18:26","statements":[{"nodeType":"YulAssignment","src":"9801:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"9810:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"9813:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9806:3:26"},"nodeType":"YulFunctionCall","src":"9806:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"9801:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"9770:14:26","statements":[{"nodeType":"YulVariableDeclaration","src":"9772:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"9781:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"9776:1:26","type":""}]}]},"src":"9766:282:26"}]},"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9460:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9467:3:26","type":""}],"src":"9361:694:26"},{"body":{"nodeType":"YulBlock","src":"10205:170:26","statements":[{"nodeType":"YulAssignment","src":"10215:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10227:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10238:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10223:3:26"},"nodeType":"YulFunctionCall","src":"10223:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10215:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10341:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10354:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10365:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10350:3:26"},"nodeType":"YulFunctionCall","src":"10350:17:26"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10251:89:26"},"nodeType":"YulFunctionCall","src":"10251:117:26"},"nodeType":"YulExpressionStatement","src":"10251:117:26"}]},"name":"abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10177:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10189:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10200:4:26","type":""}],"src":"10061:314:26"},{"body":{"nodeType":"YulBlock","src":"10446:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10463:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10486:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10468:17:26"},"nodeType":"YulFunctionCall","src":"10468:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10456:6:26"},"nodeType":"YulFunctionCall","src":"10456:37:26"},"nodeType":"YulExpressionStatement","src":"10456:37:26"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10434:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10441:3:26","type":""}],"src":"10381:118:26"},{"body":{"nodeType":"YulBlock","src":"10603:124:26","statements":[{"nodeType":"YulAssignment","src":"10613:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10625:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10636:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10621:3:26"},"nodeType":"YulFunctionCall","src":"10621:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10613:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10693:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10717:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:26"},"nodeType":"YulFunctionCall","src":"10702:17:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"10649:43:26"},"nodeType":"YulFunctionCall","src":"10649:71:26"},"nodeType":"YulExpressionStatement","src":"10649:71:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10575:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10587:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10598:4:26","type":""}],"src":"10505:222:26"},{"body":{"nodeType":"YulBlock","src":"10799:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"10845:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10847:77:26"},"nodeType":"YulFunctionCall","src":"10847:79:26"},"nodeType":"YulExpressionStatement","src":"10847:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10820:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10829:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10816:3:26"},"nodeType":"YulFunctionCall","src":"10816:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10841:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10812:3:26"},"nodeType":"YulFunctionCall","src":"10812:32:26"},"nodeType":"YulIf","src":"10809:119:26"},{"nodeType":"YulBlock","src":"10938:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"10953:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"10967:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10957:6:26","type":""}]},{"nodeType":"YulAssignment","src":"10982:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11028:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:26"},"nodeType":"YulFunctionCall","src":"11013:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11037:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10992:20:26"},"nodeType":"YulFunctionCall","src":"10992:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10982:6:26"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10769:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10780:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10792:6:26","type":""}],"src":"10733:329:26"},{"body":{"nodeType":"YulBlock","src":"11108:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"11162:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11171:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11174:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11164:6:26"},"nodeType":"YulFunctionCall","src":"11164:12:26"},"nodeType":"YulExpressionStatement","src":"11164:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11131:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11153:5:26"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11138:14:26"},"nodeType":"YulFunctionCall","src":"11138:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"11128:2:26"},"nodeType":"YulFunctionCall","src":"11128:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"11121:6:26"},"nodeType":"YulFunctionCall","src":"11121:40:26"},"nodeType":"YulIf","src":"11118:60:26"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11101:5:26","type":""}],"src":"11068:116:26"},{"body":{"nodeType":"YulBlock","src":"11239:84:26","statements":[{"nodeType":"YulAssignment","src":"11249:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11271:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"11258:12:26"},"nodeType":"YulFunctionCall","src":"11258:20:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"11249:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11311:5:26"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"11287:23:26"},"nodeType":"YulFunctionCall","src":"11287:30:26"},"nodeType":"YulExpressionStatement","src":"11287:30:26"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11217:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"11225:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"11233:5:26","type":""}],"src":"11190:133:26"},{"body":{"nodeType":"YulBlock","src":"11409:388:26","statements":[{"body":{"nodeType":"YulBlock","src":"11455:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11457:77:26"},"nodeType":"YulFunctionCall","src":"11457:79:26"},"nodeType":"YulExpressionStatement","src":"11457:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11430:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"11439:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11426:3:26"},"nodeType":"YulFunctionCall","src":"11426:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"11451:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11422:3:26"},"nodeType":"YulFunctionCall","src":"11422:32:26"},"nodeType":"YulIf","src":"11419:119:26"},{"nodeType":"YulBlock","src":"11548:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11563:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11577:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11567:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11592:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11627:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11638:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11623:3:26"},"nodeType":"YulFunctionCall","src":"11623:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11647:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11602:20:26"},"nodeType":"YulFunctionCall","src":"11602:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11592:6:26"}]}]},{"nodeType":"YulBlock","src":"11675:115:26","statements":[{"nodeType":"YulVariableDeclaration","src":"11690:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11704:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11694:6:26","type":""}]},{"nodeType":"YulAssignment","src":"11720:60:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11752:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"11763:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:26"},"nodeType":"YulFunctionCall","src":"11748:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11772:7:26"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"11730:17:26"},"nodeType":"YulFunctionCall","src":"11730:50:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11720:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11371:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11382:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11394:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11402:6:26","type":""}],"src":"11329:468:26"},{"body":{"nodeType":"YulBlock","src":"11831:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11848:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11851:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11841:6:26"},"nodeType":"YulFunctionCall","src":"11841:88:26"},"nodeType":"YulExpressionStatement","src":"11841:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11945:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11948:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11938:6:26"},"nodeType":"YulFunctionCall","src":"11938:15:26"},"nodeType":"YulExpressionStatement","src":"11938:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11969:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11972:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11962:6:26"},"nodeType":"YulFunctionCall","src":"11962:15:26"},"nodeType":"YulExpressionStatement","src":"11962:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"11803:180:26"},{"body":{"nodeType":"YulBlock","src":"12042:62:26","statements":[{"body":{"nodeType":"YulBlock","src":"12076:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nodeType":"YulIdentifier","src":"12078:16:26"},"nodeType":"YulFunctionCall","src":"12078:18:26"},"nodeType":"YulExpressionStatement","src":"12078:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12065:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12072:1:26","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12062:2:26"},"nodeType":"YulFunctionCall","src":"12062:12:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12055:6:26"},"nodeType":"YulFunctionCall","src":"12055:20:26"},"nodeType":"YulIf","src":"12052:46:26"}]},"name":"validator_assert_t_enum$_Breed_$4552","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12035:5:26","type":""}],"src":"11989:115:26"},{"body":{"nodeType":"YulBlock","src":"12165:76:26","statements":[{"nodeType":"YulAssignment","src":"12175:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"12186:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"12175:7:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12229:5:26"}],"functionName":{"name":"validator_assert_t_enum$_Breed_$4552","nodeType":"YulIdentifier","src":"12192:36:26"},"nodeType":"YulFunctionCall","src":"12192:43:26"},"nodeType":"YulExpressionStatement","src":"12192:43:26"}]},"name":"cleanup_t_enum$_Breed_$4552","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12147:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"12157:7:26","type":""}],"src":"12110:131:26"},{"body":{"nodeType":"YulBlock","src":"12315:63:26","statements":[{"nodeType":"YulAssignment","src":"12325:47:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12366:5:26"}],"functionName":{"name":"cleanup_t_enum$_Breed_$4552","nodeType":"YulIdentifier","src":"12338:27:26"},"nodeType":"YulFunctionCall","src":"12338:34:26"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"12325:9:26"}]}]},"name":"convert_t_enum$_Breed_$4552_to_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12295:5:26","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"12305:9:26","type":""}],"src":"12247:131:26"},{"body":{"nodeType":"YulBlock","src":"12457:74:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12474:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12518:5:26"}],"functionName":{"name":"convert_t_enum$_Breed_$4552_to_t_uint8","nodeType":"YulIdentifier","src":"12479:38:26"},"nodeType":"YulFunctionCall","src":"12479:45:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12467:6:26"},"nodeType":"YulFunctionCall","src":"12467:58:26"},"nodeType":"YulExpressionStatement","src":"12467:58:26"}]},"name":"abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12445:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12452:3:26","type":""}],"src":"12384:147:26"},{"body":{"nodeType":"YulBlock","src":"12643:132:26","statements":[{"nodeType":"YulAssignment","src":"12653:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12665:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12676:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12661:3:26"},"nodeType":"YulFunctionCall","src":"12661:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12653:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12741:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12754:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12765:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12750:3:26"},"nodeType":"YulFunctionCall","src":"12750:17:26"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"12689:51:26"},"nodeType":"YulFunctionCall","src":"12689:79:26"},"nodeType":"YulExpressionStatement","src":"12689:79:26"}]},"name":"abi_encode_tuple_t_enum$_Breed_$4552__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12615:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12627:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12638:4:26","type":""}],"src":"12537:238:26"},{"body":{"nodeType":"YulBlock","src":"12870:28:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12887:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12890:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12880:6:26"},"nodeType":"YulFunctionCall","src":"12880:12:26"},"nodeType":"YulExpressionStatement","src":"12880:12:26"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"12781:117:26"},{"body":{"nodeType":"YulBlock","src":"12970:241:26","statements":[{"body":{"nodeType":"YulBlock","src":"13075:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"13077:16:26"},"nodeType":"YulFunctionCall","src":"13077:18:26"},"nodeType":"YulExpressionStatement","src":"13077:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13047:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13055:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13044:2:26"},"nodeType":"YulFunctionCall","src":"13044:30:26"},"nodeType":"YulIf","src":"13041:56:26"},{"nodeType":"YulAssignment","src":"13107:37:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13137:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"13115:21:26"},"nodeType":"YulFunctionCall","src":"13115:29:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13107:4:26"}]},{"nodeType":"YulAssignment","src":"13181:23:26","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"13193:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"13199:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13189:3:26"},"nodeType":"YulFunctionCall","src":"13189:15:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"13181:4:26"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"12954:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"12965:4:26","type":""}],"src":"12904:307:26"},{"body":{"nodeType":"YulBlock","src":"13268:103:26","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13291:3:26"},{"name":"src","nodeType":"YulIdentifier","src":"13296:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13301:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"13278:12:26"},"nodeType":"YulFunctionCall","src":"13278:30:26"},"nodeType":"YulExpressionStatement","src":"13278:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"13349:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13354:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13345:3:26"},"nodeType":"YulFunctionCall","src":"13345:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"13363:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13338:6:26"},"nodeType":"YulFunctionCall","src":"13338:27:26"},"nodeType":"YulExpressionStatement","src":"13338:27:26"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13250:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"13255:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13260:6:26","type":""}],"src":"13217:154:26"},{"body":{"nodeType":"YulBlock","src":"13460:327:26","statements":[{"nodeType":"YulAssignment","src":"13470:74:26","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"13536:6:26"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"13495:40:26"},"nodeType":"YulFunctionCall","src":"13495:48:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"13479:15:26"},"nodeType":"YulFunctionCall","src":"13479:65:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"13470:5:26"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13560:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"13567:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13553:6:26"},"nodeType":"YulFunctionCall","src":"13553:21:26"},"nodeType":"YulExpressionStatement","src":"13553:21:26"},{"nodeType":"YulVariableDeclaration","src":"13583:27:26","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"13598:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"13605:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13594:3:26"},"nodeType":"YulFunctionCall","src":"13594:16:26"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"13587:3:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"13648:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"13650:77:26"},"nodeType":"YulFunctionCall","src":"13650:79:26"},"nodeType":"YulExpressionStatement","src":"13650:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13629:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13634:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13625:3:26"},"nodeType":"YulFunctionCall","src":"13625:16:26"},{"name":"end","nodeType":"YulIdentifier","src":"13643:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13622:2:26"},"nodeType":"YulFunctionCall","src":"13622:25:26"},"nodeType":"YulIf","src":"13619:112:26"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"13764:3:26"},{"name":"dst","nodeType":"YulIdentifier","src":"13769:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"13774:6:26"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"13740:23:26"},"nodeType":"YulFunctionCall","src":"13740:41:26"},"nodeType":"YulExpressionStatement","src":"13740:41:26"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"13433:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"13438:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13446:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13454:5:26","type":""}],"src":"13377:410:26"},{"body":{"nodeType":"YulBlock","src":"13867:277:26","statements":[{"body":{"nodeType":"YulBlock","src":"13916:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"13918:77:26"},"nodeType":"YulFunctionCall","src":"13918:79:26"},"nodeType":"YulExpressionStatement","src":"13918:79:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13895:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13903:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:26"},"nodeType":"YulFunctionCall","src":"13891:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"13910:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13887:3:26"},"nodeType":"YulFunctionCall","src":"13887:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13880:6:26"},"nodeType":"YulFunctionCall","src":"13880:35:26"},"nodeType":"YulIf","src":"13877:122:26"},{"nodeType":"YulVariableDeclaration","src":"14008:34:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14035:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14022:12:26"},"nodeType":"YulFunctionCall","src":"14022:20:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14012:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14051:87:26","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14111:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14119:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14107:3:26"},"nodeType":"YulFunctionCall","src":"14107:17:26"},{"name":"length","nodeType":"YulIdentifier","src":"14126:6:26"},{"name":"end","nodeType":"YulIdentifier","src":"14134:3:26"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14060:46:26"},"nodeType":"YulFunctionCall","src":"14060:78:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"14051:5:26"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13845:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"13853:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"13861:5:26","type":""}],"src":"13806:338:26"},{"body":{"nodeType":"YulBlock","src":"14276:817:26","statements":[{"body":{"nodeType":"YulBlock","src":"14323:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"14325:77:26"},"nodeType":"YulFunctionCall","src":"14325:79:26"},"nodeType":"YulExpressionStatement","src":"14325:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14297:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14306:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14293:3:26"},"nodeType":"YulFunctionCall","src":"14293:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"14318:3:26","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14289:3:26"},"nodeType":"YulFunctionCall","src":"14289:33:26"},"nodeType":"YulIf","src":"14286:120:26"},{"nodeType":"YulBlock","src":"14416:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14431:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14445:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14435:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14460:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14506:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:26"},"nodeType":"YulFunctionCall","src":"14491:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14515:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14470:20:26"},"nodeType":"YulFunctionCall","src":"14470:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14460:6:26"}]}]},{"nodeType":"YulBlock","src":"14543:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14558:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14572:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14562:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14588:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14623:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14634:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14619:3:26"},"nodeType":"YulFunctionCall","src":"14619:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14643:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"14598:20:26"},"nodeType":"YulFunctionCall","src":"14598:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"14588:6:26"}]}]},{"nodeType":"YulBlock","src":"14671:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14686:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"14700:2:26","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14690:6:26","type":""}]},{"nodeType":"YulAssignment","src":"14716:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14751:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"14762:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14747:3:26"},"nodeType":"YulFunctionCall","src":"14747:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"14771:7:26"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"14726:20:26"},"nodeType":"YulFunctionCall","src":"14726:53:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"14716:6:26"}]}]},{"nodeType":"YulBlock","src":"14799:287:26","statements":[{"nodeType":"YulVariableDeclaration","src":"14814:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14845:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14856:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14841:3:26"},"nodeType":"YulFunctionCall","src":"14841:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"14828:12:26"},"nodeType":"YulFunctionCall","src":"14828:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"14818:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"14907:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"14909:77:26"},"nodeType":"YulFunctionCall","src":"14909:79:26"},"nodeType":"YulExpressionStatement","src":"14909:79:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"14879:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14887:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14876:2:26"},"nodeType":"YulFunctionCall","src":"14876:30:26"},"nodeType":"YulIf","src":"14873:117:26"},{"nodeType":"YulAssignment","src":"15004:72:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15048:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15059:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15044:3:26"},"nodeType":"YulFunctionCall","src":"15044:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15068:7:26"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15014:29:26"},"nodeType":"YulFunctionCall","src":"15014:62:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"15004:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14222:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14233:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14245:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14253:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14261:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14269:6:26","type":""}],"src":"14150:943:26"},{"body":{"nodeType":"YulBlock","src":"15182:391:26","statements":[{"body":{"nodeType":"YulBlock","src":"15228:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15230:77:26"},"nodeType":"YulFunctionCall","src":"15230:79:26"},"nodeType":"YulExpressionStatement","src":"15230:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15203:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15212:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15199:3:26"},"nodeType":"YulFunctionCall","src":"15199:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15224:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15195:3:26"},"nodeType":"YulFunctionCall","src":"15195:32:26"},"nodeType":"YulIf","src":"15192:119:26"},{"nodeType":"YulBlock","src":"15321:117:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15336:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15350:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15340:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15365:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15400:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15411:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15396:3:26"},"nodeType":"YulFunctionCall","src":"15396:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15420:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15375:20:26"},"nodeType":"YulFunctionCall","src":"15375:53:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15365:6:26"}]}]},{"nodeType":"YulBlock","src":"15448:118:26","statements":[{"nodeType":"YulVariableDeclaration","src":"15463:16:26","value":{"kind":"number","nodeType":"YulLiteral","src":"15477:2:26","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15467:6:26","type":""}]},{"nodeType":"YulAssignment","src":"15493:63:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15528:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"15539:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15524:3:26"},"nodeType":"YulFunctionCall","src":"15524:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15548:7:26"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"15503:20:26"},"nodeType":"YulFunctionCall","src":"15503:53:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"15493:6:26"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15144:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15155:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15167:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15175:6:26","type":""}],"src":"15099:474:26"},{"body":{"nodeType":"YulBlock","src":"15607:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15624:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15627:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15617:6:26"},"nodeType":"YulFunctionCall","src":"15617:88:26"},"nodeType":"YulExpressionStatement","src":"15617:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15721:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15724:4:26","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15714:6:26"},"nodeType":"YulFunctionCall","src":"15714:15:26"},"nodeType":"YulExpressionStatement","src":"15714:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15745:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15748:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15738:6:26"},"nodeType":"YulFunctionCall","src":"15738:15:26"},"nodeType":"YulExpressionStatement","src":"15738:15:26"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"15579:180:26"},{"body":{"nodeType":"YulBlock","src":"15816:269:26","statements":[{"nodeType":"YulAssignment","src":"15826:22:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15840:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"15846:1:26","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"15836:3:26"},"nodeType":"YulFunctionCall","src":"15836:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15826:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"15857:38:26","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"15887:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"15893:1:26","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15883:3:26"},"nodeType":"YulFunctionCall","src":"15883:12:26"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"15861:18:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"15934:51:26","statements":[{"nodeType":"YulAssignment","src":"15948:27:26","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15962:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15970:4:26","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15958:3:26"},"nodeType":"YulFunctionCall","src":"15958:17:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"15948:6:26"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"15914:18:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15907:6:26"},"nodeType":"YulFunctionCall","src":"15907:26:26"},"nodeType":"YulIf","src":"15904:81:26"},{"body":{"nodeType":"YulBlock","src":"16037:42:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"16051:16:26"},"nodeType":"YulFunctionCall","src":"16051:18:26"},"nodeType":"YulExpressionStatement","src":"16051:18:26"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"16001:18:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16024:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16032:2:26","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16021:2:26"},"nodeType":"YulFunctionCall","src":"16021:14:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"15998:2:26"},"nodeType":"YulFunctionCall","src":"15998:38:26"},"nodeType":"YulIf","src":"15995:84:26"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"15800:4:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"15809:6:26","type":""}],"src":"15765:320:26"},{"body":{"nodeType":"YulBlock","src":"16197:114:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16219:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16227:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16215:3:26"},"nodeType":"YulFunctionCall","src":"16215:14:26"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"16231:34:26","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16208:6:26"},"nodeType":"YulFunctionCall","src":"16208:58:26"},"nodeType":"YulExpressionStatement","src":"16208:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16287:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"16295:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16283:3:26"},"nodeType":"YulFunctionCall","src":"16283:15:26"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"16300:3:26","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16276:6:26"},"nodeType":"YulFunctionCall","src":"16276:28:26"},"nodeType":"YulExpressionStatement","src":"16276:28:26"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16189:6:26","type":""}],"src":"16091:220:26"},{"body":{"nodeType":"YulBlock","src":"16463:220:26","statements":[{"nodeType":"YulAssignment","src":"16473:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16539:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16544:2:26","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16480:58:26"},"nodeType":"YulFunctionCall","src":"16480:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16473:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16645:3:26"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"16556:88:26"},"nodeType":"YulFunctionCall","src":"16556:93:26"},"nodeType":"YulExpressionStatement","src":"16556:93:26"},{"nodeType":"YulAssignment","src":"16658:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16669:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"16674:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16665:3:26"},"nodeType":"YulFunctionCall","src":"16665:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16658:3:26"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16451:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16459:3:26","type":""}],"src":"16317:366:26"},{"body":{"nodeType":"YulBlock","src":"16860:248:26","statements":[{"nodeType":"YulAssignment","src":"16870:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16882:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16893:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16878:3:26"},"nodeType":"YulFunctionCall","src":"16878:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16917:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16928:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16913:3:26"},"nodeType":"YulFunctionCall","src":"16913:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16936:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"16942:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16932:3:26"},"nodeType":"YulFunctionCall","src":"16932:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16906:6:26"},"nodeType":"YulFunctionCall","src":"16906:47:26"},"nodeType":"YulExpressionStatement","src":"16906:47:26"},{"nodeType":"YulAssignment","src":"16962:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17096:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16970:124:26"},"nodeType":"YulFunctionCall","src":"16970:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16962:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16840:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16855:4:26","type":""}],"src":"16689:419:26"},{"body":{"nodeType":"YulBlock","src":"17220:142:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17242:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17250:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17238:3:26"},"nodeType":"YulFunctionCall","src":"17238:14:26"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"17254:34:26","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17231:6:26"},"nodeType":"YulFunctionCall","src":"17231:58:26"},"nodeType":"YulExpressionStatement","src":"17231:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17310:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17318:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17306:3:26"},"nodeType":"YulFunctionCall","src":"17306:15:26"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"17323:31:26","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17299:6:26"},"nodeType":"YulFunctionCall","src":"17299:56:26"},"nodeType":"YulExpressionStatement","src":"17299:56:26"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17212:6:26","type":""}],"src":"17114:248:26"},{"body":{"nodeType":"YulBlock","src":"17514:220:26","statements":[{"nodeType":"YulAssignment","src":"17524:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17590:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17595:2:26","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17531:58:26"},"nodeType":"YulFunctionCall","src":"17531:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17524:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17696:3:26"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"17607:88:26"},"nodeType":"YulFunctionCall","src":"17607:93:26"},"nodeType":"YulExpressionStatement","src":"17607:93:26"},{"nodeType":"YulAssignment","src":"17709:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17720:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"17725:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17716:3:26"},"nodeType":"YulFunctionCall","src":"17716:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17709:3:26"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17502:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17510:3:26","type":""}],"src":"17368:366:26"},{"body":{"nodeType":"YulBlock","src":"17911:248:26","statements":[{"nodeType":"YulAssignment","src":"17921:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17933:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17944:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17929:3:26"},"nodeType":"YulFunctionCall","src":"17929:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17921:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17968:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17979:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17964:3:26"},"nodeType":"YulFunctionCall","src":"17964:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17987:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17993:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17983:3:26"},"nodeType":"YulFunctionCall","src":"17983:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17957:6:26"},"nodeType":"YulFunctionCall","src":"17957:47:26"},"nodeType":"YulExpressionStatement","src":"17957:47:26"},{"nodeType":"YulAssignment","src":"18013:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18147:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18021:124:26"},"nodeType":"YulFunctionCall","src":"18021:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18013:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17891:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17906:4:26","type":""}],"src":"17740:419:26"},{"body":{"nodeType":"YulBlock","src":"18291:206:26","statements":[{"nodeType":"YulAssignment","src":"18301:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18313:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18324:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18309:3:26"},"nodeType":"YulFunctionCall","src":"18309:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18301:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18381:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18394:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18405:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18390:3:26"},"nodeType":"YulFunctionCall","src":"18390:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18337:43:26"},"nodeType":"YulFunctionCall","src":"18337:71:26"},"nodeType":"YulExpressionStatement","src":"18337:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"18462:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18475:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"18486:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18471:3:26"},"nodeType":"YulFunctionCall","src":"18471:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18418:43:26"},"nodeType":"YulFunctionCall","src":"18418:72:26"},"nodeType":"YulExpressionStatement","src":"18418:72:26"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18255:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18267:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18275:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18286:4:26","type":""}],"src":"18165:332:26"},{"body":{"nodeType":"YulBlock","src":"18609:126:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18631:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18639:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18627:3:26"},"nodeType":"YulFunctionCall","src":"18627:14:26"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"18643:34:26","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18620:6:26"},"nodeType":"YulFunctionCall","src":"18620:58:26"},"nodeType":"YulExpressionStatement","src":"18620:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18699:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"18707:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:26"},"nodeType":"YulFunctionCall","src":"18695:15:26"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"18712:15:26","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18688:6:26"},"nodeType":"YulFunctionCall","src":"18688:40:26"},"nodeType":"YulExpressionStatement","src":"18688:40:26"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18601:6:26","type":""}],"src":"18503:232:26"},{"body":{"nodeType":"YulBlock","src":"18887:220:26","statements":[{"nodeType":"YulAssignment","src":"18897:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18963:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"18968:2:26","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18904:58:26"},"nodeType":"YulFunctionCall","src":"18904:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18897:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19069:3:26"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"18980:88:26"},"nodeType":"YulFunctionCall","src":"18980:93:26"},"nodeType":"YulExpressionStatement","src":"18980:93:26"},{"nodeType":"YulAssignment","src":"19082:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19093:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"19098:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19089:3:26"},"nodeType":"YulFunctionCall","src":"19089:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19082:3:26"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18875:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18883:3:26","type":""}],"src":"18741:366:26"},{"body":{"nodeType":"YulBlock","src":"19284:248:26","statements":[{"nodeType":"YulAssignment","src":"19294:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19306:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19317:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19302:3:26"},"nodeType":"YulFunctionCall","src":"19302:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19294:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19341:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19352:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19337:3:26"},"nodeType":"YulFunctionCall","src":"19337:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19360:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"19366:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19356:3:26"},"nodeType":"YulFunctionCall","src":"19356:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19330:6:26"},"nodeType":"YulFunctionCall","src":"19330:47:26"},"nodeType":"YulExpressionStatement","src":"19330:47:26"},{"nodeType":"YulAssignment","src":"19386:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19520:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19394:124:26"},"nodeType":"YulFunctionCall","src":"19394:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19386:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19264:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19279:4:26","type":""}],"src":"19113:419:26"},{"body":{"nodeType":"YulBlock","src":"19566:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19583:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19586:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19576:6:26"},"nodeType":"YulFunctionCall","src":"19576:88:26"},"nodeType":"YulExpressionStatement","src":"19576:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19680:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19683:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19673:6:26"},"nodeType":"YulFunctionCall","src":"19673:15:26"},"nodeType":"YulExpressionStatement","src":"19673:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19704:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19707:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19697:6:26"},"nodeType":"YulFunctionCall","src":"19697:15:26"},"nodeType":"YulExpressionStatement","src":"19697:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"19538:180:26"},{"body":{"nodeType":"YulBlock","src":"19837:34:26","statements":[{"nodeType":"YulAssignment","src":"19847:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"19862:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"19847:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19809:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"19814:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"19825:11:26","type":""}],"src":"19724:147:26"},{"body":{"nodeType":"YulBlock","src":"19983:8:26","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19975:6:26","type":""}],"src":"19877:114:26"},{"body":{"nodeType":"YulBlock","src":"20160:235:26","statements":[{"nodeType":"YulAssignment","src":"20170:90:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20253:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:26","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20177:75:26"},"nodeType":"YulFunctionCall","src":"20177:83:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20170:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20358:3:26"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"20269:88:26"},"nodeType":"YulFunctionCall","src":"20269:93:26"},"nodeType":"YulExpressionStatement","src":"20269:93:26"},{"nodeType":"YulAssignment","src":"20371:18:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20382:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"20387:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20378:3:26"},"nodeType":"YulFunctionCall","src":"20378:11:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20371:3:26"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20148:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20156:3:26","type":""}],"src":"19997:398:26"},{"body":{"nodeType":"YulBlock","src":"20589:191:26","statements":[{"nodeType":"YulAssignment","src":"20600:154:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20750:3:26"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"20607:141:26"},"nodeType":"YulFunctionCall","src":"20607:147:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20600:3:26"}]},{"nodeType":"YulAssignment","src":"20764:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"20771:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20764:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20576:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20585:3:26","type":""}],"src":"20401:379:26"},{"body":{"nodeType":"YulBlock","src":"20892:68:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20914:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"20922:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20910:3:26"},"nodeType":"YulFunctionCall","src":"20910:14:26"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"20926:26:26","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20903:6:26"},"nodeType":"YulFunctionCall","src":"20903:50:26"},"nodeType":"YulExpressionStatement","src":"20903:50:26"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20884:6:26","type":""}],"src":"20786:174:26"},{"body":{"nodeType":"YulBlock","src":"21112:220:26","statements":[{"nodeType":"YulAssignment","src":"21122:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21188:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21193:2:26","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21129:58:26"},"nodeType":"YulFunctionCall","src":"21129:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21122:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21294:3:26"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"21205:88:26"},"nodeType":"YulFunctionCall","src":"21205:93:26"},"nodeType":"YulExpressionStatement","src":"21205:93:26"},{"nodeType":"YulAssignment","src":"21307:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21318:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21323:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21314:3:26"},"nodeType":"YulFunctionCall","src":"21314:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21307:3:26"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21100:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21108:3:26","type":""}],"src":"20966:366:26"},{"body":{"nodeType":"YulBlock","src":"21509:248:26","statements":[{"nodeType":"YulAssignment","src":"21519:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21531:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21542:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21527:3:26"},"nodeType":"YulFunctionCall","src":"21527:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21519:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21566:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21577:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21562:3:26"},"nodeType":"YulFunctionCall","src":"21562:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21585:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"21591:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21581:3:26"},"nodeType":"YulFunctionCall","src":"21581:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21555:6:26"},"nodeType":"YulFunctionCall","src":"21555:47:26"},"nodeType":"YulExpressionStatement","src":"21555:47:26"},{"nodeType":"YulAssignment","src":"21611:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21745:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21619:124:26"},"nodeType":"YulFunctionCall","src":"21619:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21611:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21489:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21504:4:26","type":""}],"src":"21338:419:26"},{"body":{"nodeType":"YulBlock","src":"21869:122:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21891:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21899:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21887:3:26"},"nodeType":"YulFunctionCall","src":"21887:14:26"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"21903:34:26","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21880:6:26"},"nodeType":"YulFunctionCall","src":"21880:58:26"},"nodeType":"YulExpressionStatement","src":"21880:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21959:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21967:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21955:3:26"},"nodeType":"YulFunctionCall","src":"21955:15:26"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"21972:11:26","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21948:6:26"},"nodeType":"YulFunctionCall","src":"21948:36:26"},"nodeType":"YulExpressionStatement","src":"21948:36:26"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21861:6:26","type":""}],"src":"21763:228:26"},{"body":{"nodeType":"YulBlock","src":"22143:220:26","statements":[{"nodeType":"YulAssignment","src":"22153:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22219:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22224:2:26","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22160:58:26"},"nodeType":"YulFunctionCall","src":"22160:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22153:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22325:3:26"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"22236:88:26"},"nodeType":"YulFunctionCall","src":"22236:93:26"},"nodeType":"YulExpressionStatement","src":"22236:93:26"},{"nodeType":"YulAssignment","src":"22338:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22349:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"22354:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22345:3:26"},"nodeType":"YulFunctionCall","src":"22345:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22338:3:26"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22131:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22139:3:26","type":""}],"src":"21997:366:26"},{"body":{"nodeType":"YulBlock","src":"22540:248:26","statements":[{"nodeType":"YulAssignment","src":"22550:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22562:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22573:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22558:3:26"},"nodeType":"YulFunctionCall","src":"22558:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22550:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22597:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22608:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22593:3:26"},"nodeType":"YulFunctionCall","src":"22593:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22616:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"22622:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22612:3:26"},"nodeType":"YulFunctionCall","src":"22612:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22586:6:26"},"nodeType":"YulFunctionCall","src":"22586:47:26"},"nodeType":"YulExpressionStatement","src":"22586:47:26"},{"nodeType":"YulAssignment","src":"22642:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22776:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22650:124:26"},"nodeType":"YulFunctionCall","src":"22650:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22642:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22520:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22535:4:26","type":""}],"src":"22369:419:26"},{"body":{"nodeType":"YulBlock","src":"22822:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22839:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22842:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22832:6:26"},"nodeType":"YulFunctionCall","src":"22832:88:26"},"nodeType":"YulExpressionStatement","src":"22832:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22936:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22939:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22929:6:26"},"nodeType":"YulFunctionCall","src":"22929:15:26"},"nodeType":"YulExpressionStatement","src":"22929:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22960:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22963:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22953:6:26"},"nodeType":"YulFunctionCall","src":"22953:15:26"},"nodeType":"YulExpressionStatement","src":"22953:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"22794:180:26"},{"body":{"nodeType":"YulBlock","src":"23024:261:26","statements":[{"nodeType":"YulAssignment","src":"23034:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23057:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23039:17:26"},"nodeType":"YulFunctionCall","src":"23039:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"23034:1:26"}]},{"nodeType":"YulAssignment","src":"23068:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"23091:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23073:17:26"},"nodeType":"YulFunctionCall","src":"23073:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"23068:1:26"}]},{"body":{"nodeType":"YulBlock","src":"23231:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23233:16:26"},"nodeType":"YulFunctionCall","src":"23233:18:26"},"nodeType":"YulExpressionStatement","src":"23233:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23152:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23159:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"23227:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23155:3:26"},"nodeType":"YulFunctionCall","src":"23155:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23149:2:26"},"nodeType":"YulFunctionCall","src":"23149:81:26"},"nodeType":"YulIf","src":"23146:107:26"},{"nodeType":"YulAssignment","src":"23263:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"23274:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"23277:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23270:3:26"},"nodeType":"YulFunctionCall","src":"23270:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"23263:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23011:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"23014:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"23020:3:26","type":""}],"src":"22980:305:26"},{"body":{"nodeType":"YulBlock","src":"23334:190:26","statements":[{"nodeType":"YulAssignment","src":"23344:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23371:5:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"23353:17:26"},"nodeType":"YulFunctionCall","src":"23353:24:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"23344:5:26"}]},{"body":{"nodeType":"YulBlock","src":"23467:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"23469:16:26"},"nodeType":"YulFunctionCall","src":"23469:18:26"},"nodeType":"YulExpressionStatement","src":"23469:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23392:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23399:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23389:2:26"},"nodeType":"YulFunctionCall","src":"23389:77:26"},"nodeType":"YulIf","src":"23386:103:26"},{"nodeType":"YulAssignment","src":"23498:20:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23509:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23516:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23505:3:26"},"nodeType":"YulFunctionCall","src":"23505:13:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"23498:3:26"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23320:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"23330:3:26","type":""}],"src":"23291:233:26"},{"body":{"nodeType":"YulBlock","src":"23575:32:26","statements":[{"nodeType":"YulAssignment","src":"23585:16:26","value":{"name":"value","nodeType":"YulIdentifier","src":"23596:5:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23585:7:26"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23557:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23567:7:26","type":""}],"src":"23530:77:26"},{"body":{"nodeType":"YulBlock","src":"23678:53:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23695:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23718:5:26"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"23700:17:26"},"nodeType":"YulFunctionCall","src":"23700:24:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23688:6:26"},"nodeType":"YulFunctionCall","src":"23688:37:26"},"nodeType":"YulExpressionStatement","src":"23688:37:26"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23666:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23673:3:26","type":""}],"src":"23613:118:26"},{"body":{"nodeType":"YulBlock","src":"23781:57:26","statements":[{"nodeType":"YulAssignment","src":"23791:41:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23806:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"23813:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23802:3:26"},"nodeType":"YulFunctionCall","src":"23802:30:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"23791:7:26"}]}]},"name":"cleanup_t_uint64","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23763:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"23773:7:26","type":""}],"src":"23737:101:26"},{"body":{"nodeType":"YulBlock","src":"23907:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23924:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23946:5:26"}],"functionName":{"name":"cleanup_t_uint64","nodeType":"YulIdentifier","src":"23929:16:26"},"nodeType":"YulFunctionCall","src":"23929:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23917:6:26"},"nodeType":"YulFunctionCall","src":"23917:36:26"},"nodeType":"YulExpressionStatement","src":"23917:36:26"}]},"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23895:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"23902:3:26","type":""}],"src":"23844:115:26"},{"body":{"nodeType":"YulBlock","src":"24009:45:26","statements":[{"nodeType":"YulAssignment","src":"24019:29:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24034:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24041:6:26","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24030:3:26"},"nodeType":"YulFunctionCall","src":"24030:18:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24019:7:26"}]}]},"name":"cleanup_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23991:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24001:7:26","type":""}],"src":"23965:89:26"},{"body":{"nodeType":"YulBlock","src":"24123:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24140:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24162:5:26"}],"functionName":{"name":"cleanup_t_uint16","nodeType":"YulIdentifier","src":"24145:16:26"},"nodeType":"YulFunctionCall","src":"24145:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24133:6:26"},"nodeType":"YulFunctionCall","src":"24133:36:26"},"nodeType":"YulExpressionStatement","src":"24133:36:26"}]},"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24111:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24118:3:26","type":""}],"src":"24060:115:26"},{"body":{"nodeType":"YulBlock","src":"24225:49:26","statements":[{"nodeType":"YulAssignment","src":"24235:33:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24250:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24257:10:26","type":"","value":"0xffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24246:3:26"},"nodeType":"YulFunctionCall","src":"24246:22:26"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"24235:7:26"}]}]},"name":"cleanup_t_uint32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24207:5:26","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"24217:7:26","type":""}],"src":"24181:93:26"},{"body":{"nodeType":"YulBlock","src":"24343:52:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24360:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24382:5:26"}],"functionName":{"name":"cleanup_t_uint32","nodeType":"YulIdentifier","src":"24365:16:26"},"nodeType":"YulFunctionCall","src":"24365:23:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24353:6:26"},"nodeType":"YulFunctionCall","src":"24353:36:26"},"nodeType":"YulExpressionStatement","src":"24353:36:26"}]},"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24331:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"24338:3:26","type":""}],"src":"24280:115:26"},{"body":{"nodeType":"YulBlock","src":"24603:446:26","statements":[{"nodeType":"YulAssignment","src":"24613:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24625:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24636:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24621:3:26"},"nodeType":"YulFunctionCall","src":"24621:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24613:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24694:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24707:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24718:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24703:3:26"},"nodeType":"YulFunctionCall","src":"24703:17:26"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"24650:43:26"},"nodeType":"YulFunctionCall","src":"24650:71:26"},"nodeType":"YulExpressionStatement","src":"24650:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24773:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24786:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24797:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24782:3:26"},"nodeType":"YulFunctionCall","src":"24782:18:26"}],"functionName":{"name":"abi_encode_t_uint64_to_t_uint64_fromStack","nodeType":"YulIdentifier","src":"24731:41:26"},"nodeType":"YulFunctionCall","src":"24731:70:26"},"nodeType":"YulExpressionStatement","src":"24731:70:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"24853:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24866:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24877:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24862:3:26"},"nodeType":"YulFunctionCall","src":"24862:18:26"}],"functionName":{"name":"abi_encode_t_uint16_to_t_uint16_fromStack","nodeType":"YulIdentifier","src":"24811:41:26"},"nodeType":"YulFunctionCall","src":"24811:70:26"},"nodeType":"YulExpressionStatement","src":"24811:70:26"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"24933:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24946:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24957:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24942:3:26"},"nodeType":"YulFunctionCall","src":"24942:18:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24891:41:26"},"nodeType":"YulFunctionCall","src":"24891:70:26"},"nodeType":"YulExpressionStatement","src":"24891:70:26"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"25013:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25026:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25037:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25022:3:26"},"nodeType":"YulFunctionCall","src":"25022:19:26"}],"functionName":{"name":"abi_encode_t_uint32_to_t_uint32_fromStack","nodeType":"YulIdentifier","src":"24971:41:26"},"nodeType":"YulFunctionCall","src":"24971:71:26"},"nodeType":"YulExpressionStatement","src":"24971:71:26"}]},"name":"abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24543:9:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"24555:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24563:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24571:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24579:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24587:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24598:4:26","type":""}],"src":"24401:648:26"},{"body":{"nodeType":"YulBlock","src":"25118:80:26","statements":[{"nodeType":"YulAssignment","src":"25128:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25143:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25137:5:26"},"nodeType":"YulFunctionCall","src":"25137:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25128:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25186:5:26"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"25159:26:26"},"nodeType":"YulFunctionCall","src":"25159:33:26"},"nodeType":"YulExpressionStatement","src":"25159:33:26"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25096:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"25104:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25112:5:26","type":""}],"src":"25055:143:26"},{"body":{"nodeType":"YulBlock","src":"25281:274:26","statements":[{"body":{"nodeType":"YulBlock","src":"25327:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25329:77:26"},"nodeType":"YulFunctionCall","src":"25329:79:26"},"nodeType":"YulExpressionStatement","src":"25329:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25302:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25311:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25298:3:26"},"nodeType":"YulFunctionCall","src":"25298:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"25323:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25294:3:26"},"nodeType":"YulFunctionCall","src":"25294:32:26"},"nodeType":"YulIf","src":"25291:119:26"},{"nodeType":"YulBlock","src":"25420:128:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25435:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"25449:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25439:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25464:74:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25510:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"25521:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25506:3:26"},"nodeType":"YulFunctionCall","src":"25506:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25530:7:26"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"25474:31:26"},"nodeType":"YulFunctionCall","src":"25474:64:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25464:6:26"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25251:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25262:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25274:6:26","type":""}],"src":"25204:351:26"},{"body":{"nodeType":"YulBlock","src":"25675:34:26","statements":[{"nodeType":"YulAssignment","src":"25685:18:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"25700:3:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25685:11:26"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25647:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"25652:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25663:11:26","type":""}],"src":"25561:148:26"},{"body":{"nodeType":"YulBlock","src":"25825:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"25835:53:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25882:5:26"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"25849:32:26"},"nodeType":"YulFunctionCall","src":"25849:39:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"25839:6:26","type":""}]},{"nodeType":"YulAssignment","src":"25897:96:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25981:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"25986:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"25904:76:26"},"nodeType":"YulFunctionCall","src":"25904:89:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25897:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26028:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"26035:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26024:3:26"},"nodeType":"YulFunctionCall","src":"26024:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"26042:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"26047:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26002:21:26"},"nodeType":"YulFunctionCall","src":"26002:52:26"},"nodeType":"YulExpressionStatement","src":"26002:52:26"},{"nodeType":"YulAssignment","src":"26063:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26074:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"26079:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26070:3:26"},"nodeType":"YulFunctionCall","src":"26070:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26063:3:26"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25806:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"25813:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25821:3:26","type":""}],"src":"25715:377:26"},{"body":{"nodeType":"YulBlock","src":"26282:251:26","statements":[{"nodeType":"YulAssignment","src":"26293:102:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26382:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"26391:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26300:81:26"},"nodeType":"YulFunctionCall","src":"26300:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26293:3:26"}]},{"nodeType":"YulAssignment","src":"26405:102:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26494:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"26503:3:26"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"26412:81:26"},"nodeType":"YulFunctionCall","src":"26412:95:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26405:3:26"}]},{"nodeType":"YulAssignment","src":"26517:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"26524:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26517:3:26"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26253:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26259:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26267:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26278:3:26","type":""}],"src":"26098:435:26"},{"body":{"nodeType":"YulBlock","src":"26645:119:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26667:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26675:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26663:3:26"},"nodeType":"YulFunctionCall","src":"26663:14:26"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"26679:34:26","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26656:6:26"},"nodeType":"YulFunctionCall","src":"26656:58:26"},"nodeType":"YulExpressionStatement","src":"26656:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26735:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26743:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26731:3:26"},"nodeType":"YulFunctionCall","src":"26731:15:26"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"26748:8:26","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26724:6:26"},"nodeType":"YulFunctionCall","src":"26724:33:26"},"nodeType":"YulExpressionStatement","src":"26724:33:26"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26637:6:26","type":""}],"src":"26539:225:26"},{"body":{"nodeType":"YulBlock","src":"26916:220:26","statements":[{"nodeType":"YulAssignment","src":"26926:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26992:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"26997:2:26","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26933:58:26"},"nodeType":"YulFunctionCall","src":"26933:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26926:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27098:3:26"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"27009:88:26"},"nodeType":"YulFunctionCall","src":"27009:93:26"},"nodeType":"YulExpressionStatement","src":"27009:93:26"},{"nodeType":"YulAssignment","src":"27111:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27122:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"27127:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27118:3:26"},"nodeType":"YulFunctionCall","src":"27118:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27111:3:26"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26904:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26912:3:26","type":""}],"src":"26770:366:26"},{"body":{"nodeType":"YulBlock","src":"27313:248:26","statements":[{"nodeType":"YulAssignment","src":"27323:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27335:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27346:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27331:3:26"},"nodeType":"YulFunctionCall","src":"27331:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27323:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27370:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"27381:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27366:3:26"},"nodeType":"YulFunctionCall","src":"27366:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27389:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"27395:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27385:3:26"},"nodeType":"YulFunctionCall","src":"27385:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27359:6:26"},"nodeType":"YulFunctionCall","src":"27359:47:26"},"nodeType":"YulExpressionStatement","src":"27359:47:26"},{"nodeType":"YulAssignment","src":"27415:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27549:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27423:124:26"},"nodeType":"YulFunctionCall","src":"27423:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27415:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27293:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27308:4:26","type":""}],"src":"27142:419:26"},{"body":{"nodeType":"YulBlock","src":"27595:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27612:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27615:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27605:6:26"},"nodeType":"YulFunctionCall","src":"27605:88:26"},"nodeType":"YulExpressionStatement","src":"27605:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27709:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27712:4:26","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27702:6:26"},"nodeType":"YulFunctionCall","src":"27702:15:26"},"nodeType":"YulExpressionStatement","src":"27702:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27733:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27736:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27726:6:26"},"nodeType":"YulFunctionCall","src":"27726:15:26"},"nodeType":"YulExpressionStatement","src":"27726:15:26"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"27567:180:26"},{"body":{"nodeType":"YulBlock","src":"27787:142:26","statements":[{"nodeType":"YulAssignment","src":"27797:25:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27820:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27802:17:26"},"nodeType":"YulFunctionCall","src":"27802:20:26"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"27797:1:26"}]},{"nodeType":"YulAssignment","src":"27831:25:26","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27854:1:26"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27836:17:26"},"nodeType":"YulFunctionCall","src":"27836:20:26"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"27831:1:26"}]},{"body":{"nodeType":"YulBlock","src":"27878:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"27880:16:26"},"nodeType":"YulFunctionCall","src":"27880:18:26"},"nodeType":"YulExpressionStatement","src":"27880:18:26"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"27875:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27868:6:26"},"nodeType":"YulFunctionCall","src":"27868:9:26"},"nodeType":"YulIf","src":"27865:35:26"},{"nodeType":"YulAssignment","src":"27909:14:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"27918:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"27921:1:26"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"27914:3:26"},"nodeType":"YulFunctionCall","src":"27914:9:26"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"27909:1:26"}]}]},"name":"mod_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"27776:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"27779:1:26","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"27785:1:26","type":""}],"src":"27753:176:26"},{"body":{"nodeType":"YulBlock","src":"28069:214:26","statements":[{"nodeType":"YulAssignment","src":"28079:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28091:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28102:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28087:3:26"},"nodeType":"YulFunctionCall","src":"28087:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28079:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28167:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28180:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28191:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28176:3:26"},"nodeType":"YulFunctionCall","src":"28176:17:26"}],"functionName":{"name":"abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"28115:51:26"},"nodeType":"YulFunctionCall","src":"28115:79:26"},"nodeType":"YulExpressionStatement","src":"28115:79:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28248:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28261:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"28272:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28257:3:26"},"nodeType":"YulFunctionCall","src":"28257:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"28204:43:26"},"nodeType":"YulFunctionCall","src":"28204:72:26"},"nodeType":"YulExpressionStatement","src":"28204:72:26"}]},"name":"abi_encode_tuple_t_enum$_Breed_$4552_t_address__to_t_uint8_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28033:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"28045:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"28053:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28064:4:26","type":""}],"src":"27935:348:26"},{"body":{"nodeType":"YulBlock","src":"28395:118:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28417:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28425:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28413:3:26"},"nodeType":"YulFunctionCall","src":"28413:14:26"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"28429:34:26","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28406:6:26"},"nodeType":"YulFunctionCall","src":"28406:58:26"},"nodeType":"YulExpressionStatement","src":"28406:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28485:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"28493:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28481:3:26"},"nodeType":"YulFunctionCall","src":"28481:15:26"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"28498:7:26","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28474:6:26"},"nodeType":"YulFunctionCall","src":"28474:32:26"},"nodeType":"YulExpressionStatement","src":"28474:32:26"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28387:6:26","type":""}],"src":"28289:224:26"},{"body":{"nodeType":"YulBlock","src":"28665:220:26","statements":[{"nodeType":"YulAssignment","src":"28675:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28741:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28746:2:26","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28682:58:26"},"nodeType":"YulFunctionCall","src":"28682:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28675:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28847:3:26"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"28758:88:26"},"nodeType":"YulFunctionCall","src":"28758:93:26"},"nodeType":"YulExpressionStatement","src":"28758:93:26"},{"nodeType":"YulAssignment","src":"28860:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28871:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"28876:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28867:3:26"},"nodeType":"YulFunctionCall","src":"28867:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28860:3:26"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28653:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28661:3:26","type":""}],"src":"28519:366:26"},{"body":{"nodeType":"YulBlock","src":"29062:248:26","statements":[{"nodeType":"YulAssignment","src":"29072:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29084:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29095:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29080:3:26"},"nodeType":"YulFunctionCall","src":"29080:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29072:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29119:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"29130:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29115:3:26"},"nodeType":"YulFunctionCall","src":"29115:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29138:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"29144:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29134:3:26"},"nodeType":"YulFunctionCall","src":"29134:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29108:6:26"},"nodeType":"YulFunctionCall","src":"29108:47:26"},"nodeType":"YulExpressionStatement","src":"29108:47:26"},{"nodeType":"YulAssignment","src":"29164:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29298:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29172:124:26"},"nodeType":"YulFunctionCall","src":"29172:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29164:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29042:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29057:4:26","type":""}],"src":"28891:419:26"},{"body":{"nodeType":"YulBlock","src":"29422:117:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29444:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29452:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29440:3:26"},"nodeType":"YulFunctionCall","src":"29440:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"29456:34:26","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29433:6:26"},"nodeType":"YulFunctionCall","src":"29433:58:26"},"nodeType":"YulExpressionStatement","src":"29433:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29512:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"29520:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29508:3:26"},"nodeType":"YulFunctionCall","src":"29508:15:26"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"29525:6:26","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29501:6:26"},"nodeType":"YulFunctionCall","src":"29501:31:26"},"nodeType":"YulExpressionStatement","src":"29501:31:26"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29414:6:26","type":""}],"src":"29316:223:26"},{"body":{"nodeType":"YulBlock","src":"29691:220:26","statements":[{"nodeType":"YulAssignment","src":"29701:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29767:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29772:2:26","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29708:58:26"},"nodeType":"YulFunctionCall","src":"29708:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29701:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29873:3:26"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"29784:88:26"},"nodeType":"YulFunctionCall","src":"29784:93:26"},"nodeType":"YulExpressionStatement","src":"29784:93:26"},{"nodeType":"YulAssignment","src":"29886:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29897:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"29902:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29893:3:26"},"nodeType":"YulFunctionCall","src":"29893:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29886:3:26"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29679:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29687:3:26","type":""}],"src":"29545:366:26"},{"body":{"nodeType":"YulBlock","src":"30088:248:26","statements":[{"nodeType":"YulAssignment","src":"30098:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30110:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30121:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30106:3:26"},"nodeType":"YulFunctionCall","src":"30106:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30098:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30145:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"30156:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30141:3:26"},"nodeType":"YulFunctionCall","src":"30141:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30164:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"30170:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30160:3:26"},"nodeType":"YulFunctionCall","src":"30160:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30134:6:26"},"nodeType":"YulFunctionCall","src":"30134:47:26"},"nodeType":"YulExpressionStatement","src":"30134:47:26"},{"nodeType":"YulAssignment","src":"30190:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30324:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30198:124:26"},"nodeType":"YulFunctionCall","src":"30198:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30190:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30068:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30083:4:26","type":""}],"src":"29917:419:26"},{"body":{"nodeType":"YulBlock","src":"30448:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30470:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"30478:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30466:3:26"},"nodeType":"YulFunctionCall","src":"30466:14:26"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"30482:34:26","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30459:6:26"},"nodeType":"YulFunctionCall","src":"30459:58:26"},"nodeType":"YulExpressionStatement","src":"30459:58:26"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30440:6:26","type":""}],"src":"30342:182:26"},{"body":{"nodeType":"YulBlock","src":"30676:220:26","statements":[{"nodeType":"YulAssignment","src":"30686:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30752:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30757:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30693:58:26"},"nodeType":"YulFunctionCall","src":"30693:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30686:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30858:3:26"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"30769:88:26"},"nodeType":"YulFunctionCall","src":"30769:93:26"},"nodeType":"YulExpressionStatement","src":"30769:93:26"},{"nodeType":"YulAssignment","src":"30871:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30882:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"30887:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30878:3:26"},"nodeType":"YulFunctionCall","src":"30878:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30871:3:26"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30664:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30672:3:26","type":""}],"src":"30530:366:26"},{"body":{"nodeType":"YulBlock","src":"31073:248:26","statements":[{"nodeType":"YulAssignment","src":"31083:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31095:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31106:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31091:3:26"},"nodeType":"YulFunctionCall","src":"31091:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31083:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31130:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"31141:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31126:3:26"},"nodeType":"YulFunctionCall","src":"31126:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31149:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"31155:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31145:3:26"},"nodeType":"YulFunctionCall","src":"31145:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31119:6:26"},"nodeType":"YulFunctionCall","src":"31119:47:26"},"nodeType":"YulExpressionStatement","src":"31119:47:26"},{"nodeType":"YulAssignment","src":"31175:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31309:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31183:124:26"},"nodeType":"YulFunctionCall","src":"31183:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31175:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31053:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31068:4:26","type":""}],"src":"30902:419:26"},{"body":{"nodeType":"YulBlock","src":"31433:69:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31455:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"31463:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31451:3:26"},"nodeType":"YulFunctionCall","src":"31451:14:26"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"31467:27:26","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31444:6:26"},"nodeType":"YulFunctionCall","src":"31444:51:26"},"nodeType":"YulExpressionStatement","src":"31444:51:26"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31425:6:26","type":""}],"src":"31327:175:26"},{"body":{"nodeType":"YulBlock","src":"31654:220:26","statements":[{"nodeType":"YulAssignment","src":"31664:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31730:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31735:2:26","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31671:58:26"},"nodeType":"YulFunctionCall","src":"31671:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31664:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31836:3:26"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"31747:88:26"},"nodeType":"YulFunctionCall","src":"31747:93:26"},"nodeType":"YulExpressionStatement","src":"31747:93:26"},{"nodeType":"YulAssignment","src":"31849:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31860:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"31865:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31856:3:26"},"nodeType":"YulFunctionCall","src":"31856:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31849:3:26"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31642:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31650:3:26","type":""}],"src":"31508:366:26"},{"body":{"nodeType":"YulBlock","src":"32051:248:26","statements":[{"nodeType":"YulAssignment","src":"32061:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32073:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32084:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32069:3:26"},"nodeType":"YulFunctionCall","src":"32069:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32061:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32108:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"32119:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32104:3:26"},"nodeType":"YulFunctionCall","src":"32104:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32127:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"32133:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32123:3:26"},"nodeType":"YulFunctionCall","src":"32123:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32097:6:26"},"nodeType":"YulFunctionCall","src":"32097:47:26"},"nodeType":"YulExpressionStatement","src":"32097:47:26"},{"nodeType":"YulAssignment","src":"32153:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32287:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32161:124:26"},"nodeType":"YulFunctionCall","src":"32161:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32153:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32031:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32046:4:26","type":""}],"src":"31880:419:26"},{"body":{"nodeType":"YulBlock","src":"32411:131:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32433:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32441:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32429:3:26"},"nodeType":"YulFunctionCall","src":"32429:14:26"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"32445:34:26","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32422:6:26"},"nodeType":"YulFunctionCall","src":"32422:58:26"},"nodeType":"YulExpressionStatement","src":"32422:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32501:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"32509:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32497:3:26"},"nodeType":"YulFunctionCall","src":"32497:15:26"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"32514:20:26","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32490:6:26"},"nodeType":"YulFunctionCall","src":"32490:45:26"},"nodeType":"YulExpressionStatement","src":"32490:45:26"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32403:6:26","type":""}],"src":"32305:237:26"},{"body":{"nodeType":"YulBlock","src":"32694:220:26","statements":[{"nodeType":"YulAssignment","src":"32704:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32770:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32775:2:26","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32711:58:26"},"nodeType":"YulFunctionCall","src":"32711:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32704:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32876:3:26"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"32787:88:26"},"nodeType":"YulFunctionCall","src":"32787:93:26"},"nodeType":"YulExpressionStatement","src":"32787:93:26"},{"nodeType":"YulAssignment","src":"32889:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32900:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"32905:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32896:3:26"},"nodeType":"YulFunctionCall","src":"32896:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32889:3:26"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32682:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32690:3:26","type":""}],"src":"32548:366:26"},{"body":{"nodeType":"YulBlock","src":"33091:248:26","statements":[{"nodeType":"YulAssignment","src":"33101:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33113:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33124:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33109:3:26"},"nodeType":"YulFunctionCall","src":"33109:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33101:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33148:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"33159:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33144:3:26"},"nodeType":"YulFunctionCall","src":"33144:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33167:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"33173:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33163:3:26"},"nodeType":"YulFunctionCall","src":"33163:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33137:6:26"},"nodeType":"YulFunctionCall","src":"33137:47:26"},"nodeType":"YulExpressionStatement","src":"33137:47:26"},{"nodeType":"YulAssignment","src":"33193:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33327:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33201:124:26"},"nodeType":"YulFunctionCall","src":"33201:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33193:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33071:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33086:4:26","type":""}],"src":"32920:419:26"},{"body":{"nodeType":"YulBlock","src":"33451:127:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33473:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"33481:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33469:3:26"},"nodeType":"YulFunctionCall","src":"33469:14:26"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"33485:34:26","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33462:6:26"},"nodeType":"YulFunctionCall","src":"33462:58:26"},"nodeType":"YulExpressionStatement","src":"33462:58:26"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33541:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"33549:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33537:3:26"},"nodeType":"YulFunctionCall","src":"33537:15:26"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"33554:16:26","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33530:6:26"},"nodeType":"YulFunctionCall","src":"33530:41:26"},"nodeType":"YulExpressionStatement","src":"33530:41:26"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"33443:6:26","type":""}],"src":"33345:233:26"},{"body":{"nodeType":"YulBlock","src":"33730:220:26","statements":[{"nodeType":"YulAssignment","src":"33740:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33806:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33811:2:26","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33747:58:26"},"nodeType":"YulFunctionCall","src":"33747:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33740:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33912:3:26"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"33823:88:26"},"nodeType":"YulFunctionCall","src":"33823:93:26"},"nodeType":"YulExpressionStatement","src":"33823:93:26"},{"nodeType":"YulAssignment","src":"33925:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33936:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"33941:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33932:3:26"},"nodeType":"YulFunctionCall","src":"33932:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33925:3:26"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33718:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33726:3:26","type":""}],"src":"33584:366:26"},{"body":{"nodeType":"YulBlock","src":"34127:248:26","statements":[{"nodeType":"YulAssignment","src":"34137:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34149:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34160:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34145:3:26"},"nodeType":"YulFunctionCall","src":"34145:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34137:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34184:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"34195:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34180:3:26"},"nodeType":"YulFunctionCall","src":"34180:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34203:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"34209:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34199:3:26"},"nodeType":"YulFunctionCall","src":"34199:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34173:6:26"},"nodeType":"YulFunctionCall","src":"34173:47:26"},"nodeType":"YulExpressionStatement","src":"34173:47:26"},{"nodeType":"YulAssignment","src":"34229:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34363:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34237:124:26"},"nodeType":"YulFunctionCall","src":"34237:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34229:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34107:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"34122:4:26","type":""}],"src":"33956:419:26"},{"body":{"nodeType":"YulBlock","src":"34439:40:26","statements":[{"nodeType":"YulAssignment","src":"34450:22:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34466:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34460:5:26"},"nodeType":"YulFunctionCall","src":"34460:12:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"34450:6:26"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34422:5:26","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"34432:6:26","type":""}],"src":"34381:98:26"},{"body":{"nodeType":"YulBlock","src":"34580:73:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34597:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34602:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34590:6:26"},"nodeType":"YulFunctionCall","src":"34590:19:26"},"nodeType":"YulExpressionStatement","src":"34590:19:26"},{"nodeType":"YulAssignment","src":"34618:29:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34637:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"34642:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34633:3:26"},"nodeType":"YulFunctionCall","src":"34633:14:26"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"34618:11:26"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34552:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"34557:6:26","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"34568:11:26","type":""}],"src":"34485:168:26"},{"body":{"nodeType":"YulBlock","src":"34749:270:26","statements":[{"nodeType":"YulVariableDeclaration","src":"34759:52:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34805:5:26"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"34773:31:26"},"nodeType":"YulFunctionCall","src":"34773:38:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"34763:6:26","type":""}]},{"nodeType":"YulAssignment","src":"34820:77:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34885:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34890:6:26"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34827:57:26"},"nodeType":"YulFunctionCall","src":"34827:70:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34820:3:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34932:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"34939:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34928:3:26"},"nodeType":"YulFunctionCall","src":"34928:16:26"},{"name":"pos","nodeType":"YulIdentifier","src":"34946:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"34951:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"34906:21:26"},"nodeType":"YulFunctionCall","src":"34906:52:26"},"nodeType":"YulExpressionStatement","src":"34906:52:26"},{"nodeType":"YulAssignment","src":"34967:46:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34978:3:26"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"35005:6:26"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"34983:21:26"},"nodeType":"YulFunctionCall","src":"34983:29:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34974:3:26"},"nodeType":"YulFunctionCall","src":"34974:39:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34967:3:26"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34730:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"34737:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34745:3:26","type":""}],"src":"34659:360:26"},{"body":{"nodeType":"YulBlock","src":"35225:440:26","statements":[{"nodeType":"YulAssignment","src":"35235:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35247:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35258:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35243:3:26"},"nodeType":"YulFunctionCall","src":"35243:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35235:4:26"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35316:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35329:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35340:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35325:3:26"},"nodeType":"YulFunctionCall","src":"35325:17:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35272:43:26"},"nodeType":"YulFunctionCall","src":"35272:71:26"},"nodeType":"YulExpressionStatement","src":"35272:71:26"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35397:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35410:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35421:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35406:3:26"},"nodeType":"YulFunctionCall","src":"35406:18:26"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35353:43:26"},"nodeType":"YulFunctionCall","src":"35353:72:26"},"nodeType":"YulExpressionStatement","src":"35353:72:26"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35479:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35492:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35503:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35488:3:26"},"nodeType":"YulFunctionCall","src":"35488:18:26"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"35435:43:26"},"nodeType":"YulFunctionCall","src":"35435:72:26"},"nodeType":"YulExpressionStatement","src":"35435:72:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35528:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"35539:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35524:3:26"},"nodeType":"YulFunctionCall","src":"35524:18:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35548:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35554:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35544:3:26"},"nodeType":"YulFunctionCall","src":"35544:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35517:6:26"},"nodeType":"YulFunctionCall","src":"35517:48:26"},"nodeType":"YulExpressionStatement","src":"35517:48:26"},{"nodeType":"YulAssignment","src":"35574:84:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35644:6:26"},{"name":"tail","nodeType":"YulIdentifier","src":"35653:4:26"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35582:61:26"},"nodeType":"YulFunctionCall","src":"35582:76:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35574:4:26"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35173:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35185:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35193:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35201:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35209:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35220:4:26","type":""}],"src":"35025:640:26"},{"body":{"nodeType":"YulBlock","src":"35733:79:26","statements":[{"nodeType":"YulAssignment","src":"35743:22:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"35758:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35752:5:26"},"nodeType":"YulFunctionCall","src":"35752:13:26"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"35743:5:26"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"35800:5:26"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"35774:25:26"},"nodeType":"YulFunctionCall","src":"35774:32:26"},"nodeType":"YulExpressionStatement","src":"35774:32:26"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"35711:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"35719:3:26","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"35727:5:26","type":""}],"src":"35671:141:26"},{"body":{"nodeType":"YulBlock","src":"35894:273:26","statements":[{"body":{"nodeType":"YulBlock","src":"35940:83:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"35942:77:26"},"nodeType":"YulFunctionCall","src":"35942:79:26"},"nodeType":"YulExpressionStatement","src":"35942:79:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"35915:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"35924:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35911:3:26"},"nodeType":"YulFunctionCall","src":"35911:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"35936:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"35907:3:26"},"nodeType":"YulFunctionCall","src":"35907:32:26"},"nodeType":"YulIf","src":"35904:119:26"},{"nodeType":"YulBlock","src":"36033:127:26","statements":[{"nodeType":"YulVariableDeclaration","src":"36048:15:26","value":{"kind":"number","nodeType":"YulLiteral","src":"36062:1:26","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"36052:6:26","type":""}]},{"nodeType":"YulAssignment","src":"36077:73:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36122:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"36133:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36118:3:26"},"nodeType":"YulFunctionCall","src":"36118:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"36142:7:26"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"36087:30:26"},"nodeType":"YulFunctionCall","src":"36087:63:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"36077:6:26"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35864:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"35875:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"35887:6:26","type":""}],"src":"35818:349:26"},{"body":{"nodeType":"YulBlock","src":"36279:76:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"36301:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"36309:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36297:3:26"},"nodeType":"YulFunctionCall","src":"36297:14:26"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"36313:34:26","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36290:6:26"},"nodeType":"YulFunctionCall","src":"36290:58:26"},"nodeType":"YulExpressionStatement","src":"36290:58:26"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"36271:6:26","type":""}],"src":"36173:182:26"},{"body":{"nodeType":"YulBlock","src":"36507:220:26","statements":[{"nodeType":"YulAssignment","src":"36517:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36583:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36588:2:26","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36524:58:26"},"nodeType":"YulFunctionCall","src":"36524:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36517:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36689:3:26"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"36600:88:26"},"nodeType":"YulFunctionCall","src":"36600:93:26"},"nodeType":"YulExpressionStatement","src":"36600:93:26"},{"nodeType":"YulAssignment","src":"36702:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36713:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"36718:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36709:3:26"},"nodeType":"YulFunctionCall","src":"36709:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36702:3:26"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36495:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36503:3:26","type":""}],"src":"36361:366:26"},{"body":{"nodeType":"YulBlock","src":"36904:248:26","statements":[{"nodeType":"YulAssignment","src":"36914:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36926:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36937:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36922:3:26"},"nodeType":"YulFunctionCall","src":"36922:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36914:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36961:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"36972:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36957:3:26"},"nodeType":"YulFunctionCall","src":"36957:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36980:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"36986:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36976:3:26"},"nodeType":"YulFunctionCall","src":"36976:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36950:6:26"},"nodeType":"YulFunctionCall","src":"36950:47:26"},"nodeType":"YulExpressionStatement","src":"36950:47:26"},{"nodeType":"YulAssignment","src":"37006:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37140:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37014:124:26"},"nodeType":"YulFunctionCall","src":"37014:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37006:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36884:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36899:4:26","type":""}],"src":"36733:419:26"},{"body":{"nodeType":"YulBlock","src":"37264:72:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37286:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"37294:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37282:3:26"},"nodeType":"YulFunctionCall","src":"37282:14:26"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"37298:30:26","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37275:6:26"},"nodeType":"YulFunctionCall","src":"37275:54:26"},"nodeType":"YulExpressionStatement","src":"37275:54:26"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37256:6:26","type":""}],"src":"37158:178:26"},{"body":{"nodeType":"YulBlock","src":"37488:220:26","statements":[{"nodeType":"YulAssignment","src":"37498:74:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37564:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"37569:2:26","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37505:58:26"},"nodeType":"YulFunctionCall","src":"37505:67:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37498:3:26"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37670:3:26"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"37581:88:26"},"nodeType":"YulFunctionCall","src":"37581:93:26"},"nodeType":"YulExpressionStatement","src":"37581:93:26"},{"nodeType":"YulAssignment","src":"37683:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37694:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"37699:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37690:3:26"},"nodeType":"YulFunctionCall","src":"37690:12:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37683:3:26"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37476:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37484:3:26","type":""}],"src":"37342:366:26"},{"body":{"nodeType":"YulBlock","src":"37885:248:26","statements":[{"nodeType":"YulAssignment","src":"37895:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37907:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37918:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37903:3:26"},"nodeType":"YulFunctionCall","src":"37903:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37895:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37942:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"37953:1:26","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37938:3:26"},"nodeType":"YulFunctionCall","src":"37938:17:26"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"37961:4:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"37967:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"37957:3:26"},"nodeType":"YulFunctionCall","src":"37957:20:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37931:6:26"},"nodeType":"YulFunctionCall","src":"37931:47:26"},"nodeType":"YulExpressionStatement","src":"37931:47:26"},{"nodeType":"YulAssignment","src":"37987:139:26","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38121:4:26"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37995:124:26"},"nodeType":"YulFunctionCall","src":"37995:131:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37987:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37865:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37880:4:26","type":""}],"src":"37714:419:26"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$3_memory_ptr(value) -> length {\n\n        length := 0x03\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_array$_t_uint256_$3_memory_ptr(ptr) -> data {\n        data := ptr\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$3_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[3] -> uint256[3]\n    function abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value, pos)  {\n        let length := array_length_t_array$_t_uint256_$3_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$3_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$3_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$3_memory_ptr(srcPtr)\n        }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$3_memory_ptr__to_t_array$_t_uint256_$3_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_array$_t_uint256_$3_memory_ptr_to_t_array$_t_uint256_$3_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Breed_$4552(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Breed_$4552(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Breed_$4552(value)\n    }\n\n    function convert_t_enum$_Breed_$4552_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Breed_$4552(value)\n    }\n\n    function abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_Breed_$4552_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$4552__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__to_t_bytes32_t_uint64_t_uint16_t_uint32_t_uint32__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function abi_encode_tuple_t_enum$_Breed_$4552_t_address__to_t_uint8_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_Breed_$4552_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"10":[{"length":32,"start":2040},{"length":32,"start":2124}],"4532":[{"length":32,"start":3676}],"4534":[{"length":32,"start":3769}],"4536":[{"length":32,"start":3736}],"4538":[{"length":32,"start":3804}],"4559":[{"length":32,"start":3110},{"length":32,"start":3586}]},"linkReferences":{},"object":"60806040526004361061014b5760003560e01c806370a08231116100b6578063a51cccf31161006f578063a51cccf31461047e578063aa152491146104bb578063b88d4fde146104d9578063c87b56dd14610502578063e985e9c51461053f578063f2fde38b1461057c5761014b565b806370a0823114610380578063715018a6146103bd5780637a5caab3146103d45780638da5cb5b146103ff57806395d89b411461042a578063a22cb465146104555761014b565b80633af25975116101085780633af25975146102705780633ccfd60b146102ad57806342842e0e146102c45780635dacf5f4146102ed5780636352211e146103185780636e02007d146103555761014b565b806301ffc9a71461015057806306fdde031461018d578063081812fc146101b8578063095ea7b3146101f55780631fe543e31461021e57806323b872dd14610247575b600080fd5b34801561015c57600080fd5b5061017760048036038101906101729190612680565b6105a5565b60405161018491906126c8565b60405180910390f35b34801561019957600080fd5b506101a2610606565b6040516101af919061277c565b60405180910390f35b3480156101c457600080fd5b506101df60048036038101906101da91906127d4565b610698565b6040516101ec9190612842565b60405180910390f35b34801561020157600080fd5b5061021c60048036038101906102179190612889565b6106de565b005b34801561022a57600080fd5b5061024560048036038101906102409190612a11565b6107f6565b005b34801561025357600080fd5b5061026e60048036038101906102699190612a6d565b6108b6565b005b34801561027c57600080fd5b50610297600480360381019061029291906127d4565b610916565b6040516102a4919061277c565b60405180910390f35b3480156102b957600080fd5b506102c26109c6565b005b3480156102d057600080fd5b506102eb60048036038101906102e69190612a6d565b610a7a565b005b3480156102f957600080fd5b50610302610a9a565b60405161030f9190612b6b565b60405180910390f35b34801561032457600080fd5b5061033f600480360381019061033a91906127d4565b610ac5565b60405161034c9190612842565b60405180910390f35b34801561036157600080fd5b5061036a610b4c565b6040516103779190612b95565b60405180910390f35b34801561038c57600080fd5b506103a760048036038101906103a29190612bb0565b610b56565b6040516103b49190612b95565b60405180910390f35b3480156103c957600080fd5b506103d2610c0e565b005b3480156103e057600080fd5b506103e9610c22565b6040516103f69190612b95565b60405180910390f35b34801561040b57600080fd5b50610414610c4a565b6040516104219190612842565b60405180910390f35b34801561043657600080fd5b5061043f610c74565b60405161044c919061277c565b60405180910390f35b34801561046157600080fd5b5061047c60048036038101906104779190612c09565b610d06565b005b34801561048a57600080fd5b506104a560048036038101906104a091906127d4565b610d1c565b6040516104b29190612cc0565b60405180910390f35b6104c3610dfe565b6040516104d09190612b95565b60405180910390f35b3480156104e557600080fd5b5061050060048036038101906104fb9190612d90565b610ffe565b005b34801561050e57600080fd5b50610529600480360381019061052491906127d4565b611060565b604051610536919061277c565b60405180910390f35b34801561054b57600080fd5b5061056660048036038101906105619190612e13565b611173565b60405161057391906126c8565b60405180910390f35b34801561058857600080fd5b506105a3600480360381019061059e9190612bb0565b611207565b005b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ff57506105fe8261128b565b5b9050919050565b60606000805461061590612e82565b80601f016020809104026020016040519081016040528092919081815260200182805461064190612e82565b801561068e5780601f106106635761010080835404028352916020019161068e565b820191906000526020600020905b81548152906001019060200180831161067157829003601f168201915b5050505050905090565b60006106a38261136d565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106e982610ac5565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561075a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075190612f26565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166107796113b8565b73ffffffffffffffffffffffffffffffffffffffff1614806107a857506107a7816107a26113b8565b611173565b5b6107e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107de90612fb8565b60405180910390fd5b6107f183836113c0565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108a857337f00000000000000000000000000000000000000000000000000000000000000006040517f1cf993f400000000000000000000000000000000000000000000000000000000815260040161089f929190612fd8565b60405180910390fd5b6108b28282611479565b5050565b6108c76108c16113b8565b82611619565b610906576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fd90613073565b60405180910390fd5b6109118383836116ae565b505050565b6060600a828154811061092c5761092b613093565b5b90600052602060002001805461094190612e82565b80601f016020809104026020016040519081016040528092919081815260200182805461096d90612e82565b80156109ba5780601f1061098f576101008083540402835291602001916109ba565b820191906000526020600020905b81548152906001019060200180831161099d57829003601f168201915b50505050509050919050565b6109ce6119a8565b600047905060003373ffffffffffffffffffffffffffffffffffffffff16826040516109f9906130f3565b60006040518083038185875af1925050503d8060008114610a36576040519150601f19603f3d011682016040523d82523d6000602084013e610a3b565b606091505b5050905080610a76576040517f72a5a44b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610a9583838360405180602001604052806000815250610ffe565b505050565b610aa261254f565b6040518060600160405280600a8152602001601e81526020016064815250905090565b600080610ad183611a26565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3a90613154565b60405180910390fd5b80915050919050565b6000600954905090565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610bc7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbe906131e6565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610c166119a8565b610c206000611a63565b565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060018054610c8390612e82565b80601f0160208091040260200160405190810160405280929190818152602001828054610caf90612e82565b8015610cfc5780601f10610cd157610100808354040283529160200191610cfc565b820191906000526020600020905b815481529060010190602001808311610cdf57829003601f168201915b5050505050905090565b610d18610d116113b8565b8383611b29565b5050565b600080600090506000610d2d610a9a565b905060005b6003811115610dc657828510158015610d6c5750818160038110610d5957610d58613093565b5b602002015183610d699190613235565b85105b15610d8e57806002811115610d8457610d83612c49565b5b9350505050610df9565b818160038110610da157610da0613093565b5b602002015183610db19190613235565b92508080610dbe9061328b565b915050610d32565b506040517fe3bc09f500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b919050565b60007f0000000000000000000000000000000000000000000000000000000000000000341015610e5a576040517fb277fb0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635d3b1d307f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060037f000000000000000000000000000000000000000000000000000000000000000060016040518663ffffffff1660e01b8152600401610f1d95949392919061334c565b602060405180830381600087803b158015610f3757600080fd5b505af1158015610f4b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f6f91906133b4565b9050336008600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550807ff873236e6cc0ecc5be1a9a35c95ee5b8d1ac4cc7bfef0cc5060391d6cc98e26b33604051610ff39190612842565b60405180910390a290565b61100f6110096113b8565b83611619565b61104e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104590613073565b60405180910390fd5b61105a84848484611c96565b50505050565b606061106b8261136d565b600060066000848152602001908152602001600020805461108b90612e82565b80601f01602080910402602001604051908101604052809291908181526020018280546110b790612e82565b80156111045780601f106110d957610100808354040283529160200191611104565b820191906000526020600020905b8154815290600101906020018083116110e757829003601f168201915b505050505090506000611115611cf2565b905060008151141561112b57819250505061116e565b60008251111561116057808260405160200161114892919061341d565b6040516020818303038152906040529250505061116e565b61116984611d09565b925050505b919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61120f6119a8565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561127f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611276906134b3565b60405180910390fd5b61128881611a63565b50565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061135657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611366575061136582611d71565b5b9050919050565b61137681611ddb565b6113b5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ac90613154565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff1661143383610ac5565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006008600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600954905060006064846000815181106114d0576114cf613093565b5b60200260200101516114e29190613502565b905060006114ef82610d1c565b9050600954600960008282546115059190613235565b925050819055506115168484611e1c565b6115d883600a83600281111561152f5761152e612c49565b5b815481106115405761153f613093565b5b90600052602060002001805461155590612e82565b80601f016020809104026020016040519081016040528092919081815260200182805461158190612e82565b80156115ce5780601f106115a3576101008083540402835291602001916115ce565b820191906000526020600020905b8154815290600101906020018083116115b157829003601f168201915b5050505050611e3a565b7fcdf57ecb2c3aa16b6aa947d2477a018b8bd181ef0ecdcef44cd8ed41be8c72408185604051611609929190613533565b60405180910390a1505050505050565b60008061162583610ac5565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061166757506116668185611173565b5b806116a557508373ffffffffffffffffffffffffffffffffffffffff1661168d84610698565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff166116ce82610ac5565b73ffffffffffffffffffffffffffffffffffffffff1614611724576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161171b906135ce565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611794576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161178b90613660565b60405180910390fd5b6117a18383836001611ee5565b8273ffffffffffffffffffffffffffffffffffffffff166117c182610ac5565b73ffffffffffffffffffffffffffffffffffffffff1614611817576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161180e906135ce565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46119a38383836001611eeb565b505050565b6119b06113b8565b73ffffffffffffffffffffffffffffffffffffffff166119ce610c4a565b73ffffffffffffffffffffffffffffffffffffffff1614611a24576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1b906136cc565b60405180910390fd5b565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b8f90613738565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051611c8991906126c8565b60405180910390a3505050565b611ca18484846116ae565b611cad84848484611ef1565b611cec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ce3906137ca565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b6060611d148261136d565b6000611d1e611cf2565b90506000815111611d3e5760405180602001604052806000815250611d69565b80611d4884612088565b604051602001611d5992919061341d565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16611dfd83611a26565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b611e36828260405180602001604052806000815250612160565b5050565b611e4382611ddb565b611e82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e799061385c565b60405180910390fd5b80600660008481526020019081526020016000209080519060200190611ea9929190612571565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051611ed99190612b95565b60405180910390a15050565b50505050565b50505050565b6000611f128473ffffffffffffffffffffffffffffffffffffffff166121bb565b1561207b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611f3b6113b8565b8786866040518563ffffffff1660e01b8152600401611f5d94939291906138d1565b602060405180830381600087803b158015611f7757600080fd5b505af1925050508015611fa857506040513d601f19601f82011682018060405250810190611fa59190613932565b60015b61202b573d8060008114611fd8576040519150601f19603f3d011682016040523d82523d6000602084013e611fdd565b606091505b50600081511415612023576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161201a906137ca565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050612080565b600190505b949350505050565b606060006001612097846121de565b01905060008167ffffffffffffffff8111156120b6576120b56128ce565b5b6040519080825280601f01601f1916602001820160405280156120e85781602001600182028036833780820191505090505b509050600082602001820190505b600115612155578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161213f5761213e6134d3565b5b049450600085141561215057612155565b6120f6565b819350505050919050565b61216a8383612331565b6121776000848484611ef1565b6121b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121ad906137ca565b60405180910390fd5b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061223c577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381612232576122316134d3565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310612279576d04ee2d6d415b85acef8100000000838161226f5761226e6134d3565b5b0492506020810190505b662386f26fc1000083106122a857662386f26fc10000838161229e5761229d6134d3565b5b0492506010810190505b6305f5e10083106122d1576305f5e10083816122c7576122c66134d3565b5b0492506008810190505b61271083106122f65761271083816122ec576122eb6134d3565b5b0492506004810190505b60648310612319576064838161230f5761230e6134d3565b5b0492506002810190505b600a8310612328576001810190505b80915050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156123a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612398906139ab565b60405180910390fd5b6123aa81611ddb565b156123ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123e190613a17565b60405180910390fd5b6123f8600083836001611ee5565b61240181611ddb565b15612441576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161243890613a17565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a461254b600083836001611eeb565b5050565b6040518060600160405280600390602082028036833780820191505090505090565b82805461257d90612e82565b90600052602060002090601f01602090048101928261259f57600085556125e6565b82601f106125b857805160ff19168380011785556125e6565b828001600101855582156125e6579182015b828111156125e55782518255916020019190600101906125ca565b5b5090506125f391906125f7565b5090565b5b808211156126105760008160009055506001016125f8565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61265d81612628565b811461266857600080fd5b50565b60008135905061267a81612654565b92915050565b6000602082840312156126965761269561261e565b5b60006126a48482850161266b565b91505092915050565b60008115159050919050565b6126c2816126ad565b82525050565b60006020820190506126dd60008301846126b9565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561271d578082015181840152602081019050612702565b8381111561272c576000848401525b50505050565b6000601f19601f8301169050919050565b600061274e826126e3565b61275881856126ee565b93506127688185602086016126ff565b61277181612732565b840191505092915050565b600060208201905081810360008301526127968184612743565b905092915050565b6000819050919050565b6127b18161279e565b81146127bc57600080fd5b50565b6000813590506127ce816127a8565b92915050565b6000602082840312156127ea576127e961261e565b5b60006127f8848285016127bf565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061282c82612801565b9050919050565b61283c81612821565b82525050565b60006020820190506128576000830184612833565b92915050565b61286681612821565b811461287157600080fd5b50565b6000813590506128838161285d565b92915050565b600080604083850312156128a05761289f61261e565b5b60006128ae85828601612874565b92505060206128bf858286016127bf565b9150509250929050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61290682612732565b810181811067ffffffffffffffff82111715612925576129246128ce565b5b80604052505050565b6000612938612614565b905061294482826128fd565b919050565b600067ffffffffffffffff821115612964576129636128ce565b5b602082029050602081019050919050565b600080fd5b600061298d61298884612949565b61292e565b905080838252602082019050602084028301858111156129b0576129af612975565b5b835b818110156129d957806129c588826127bf565b8452602084019350506020810190506129b2565b5050509392505050565b600082601f8301126129f8576129f76128c9565b5b8135612a0884826020860161297a565b91505092915050565b60008060408385031215612a2857612a2761261e565b5b6000612a36858286016127bf565b925050602083013567ffffffffffffffff811115612a5757612a56612623565b5b612a63858286016129e3565b9150509250929050565b600080600060608486031215612a8657612a8561261e565b5b6000612a9486828701612874565b9350506020612aa586828701612874565b9250506040612ab6868287016127bf565b9150509250925092565b600060039050919050565b600081905092915050565b6000819050919050565b612ae98161279e565b82525050565b6000612afb8383612ae0565b60208301905092915050565b6000602082019050919050565b612b1d81612ac0565b612b278184612acb565b9250612b3282612ad6565b8060005b83811015612b63578151612b4a8782612aef565b9650612b5583612b07565b925050600181019050612b36565b505050505050565b6000606082019050612b806000830184612b14565b92915050565b612b8f8161279e565b82525050565b6000602082019050612baa6000830184612b86565b92915050565b600060208284031215612bc657612bc561261e565b5b6000612bd484828501612874565b91505092915050565b612be6816126ad565b8114612bf157600080fd5b50565b600081359050612c0381612bdd565b92915050565b60008060408385031215612c2057612c1f61261e565b5b6000612c2e85828601612874565b9250506020612c3f85828601612bf4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110612c8957612c88612c49565b5b50565b6000819050612c9a82612c78565b919050565b6000612caa82612c8c565b9050919050565b612cba81612c9f565b82525050565b6000602082019050612cd56000830184612cb1565b92915050565b600080fd5b600067ffffffffffffffff821115612cfb57612cfa6128ce565b5b612d0482612732565b9050602081019050919050565b82818337600083830152505050565b6000612d33612d2e84612ce0565b61292e565b905082815260208101848484011115612d4f57612d4e612cdb565b5b612d5a848285612d11565b509392505050565b600082601f830112612d7757612d766128c9565b5b8135612d87848260208601612d20565b91505092915050565b60008060008060808587031215612daa57612da961261e565b5b6000612db887828801612874565b9450506020612dc987828801612874565b9350506040612dda878288016127bf565b925050606085013567ffffffffffffffff811115612dfb57612dfa612623565b5b612e0787828801612d62565b91505092959194509250565b60008060408385031215612e2a57612e2961261e565b5b6000612e3885828601612874565b9250506020612e4985828601612874565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612e9a57607f821691505b60208210811415612eae57612ead612e53565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f106021836126ee565b9150612f1b82612eb4565b604082019050919050565b60006020820190508181036000830152612f3f81612f03565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000612fa2603d836126ee565b9150612fad82612f46565b604082019050919050565b60006020820190508181036000830152612fd181612f95565b9050919050565b6000604082019050612fed6000830185612833565b612ffa6020830184612833565b9392505050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b600061305d602d836126ee565b915061306882613001565b604082019050919050565b6000602082019050818103600083015261308c81613050565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081905092915050565b50565b60006130dd6000836130c2565b91506130e8826130cd565b600082019050919050565b60006130fe826130d0565b9150819050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b600061313e6018836126ee565b915061314982613108565b602082019050919050565b6000602082019050818103600083015261316d81613131565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b60006131d06029836126ee565b91506131db82613174565b604082019050919050565b600060208201905081810360008301526131ff816131c3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006132408261279e565b915061324b8361279e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156132805761327f613206565b5b828201905092915050565b60006132968261279e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156132c9576132c8613206565b5b600182019050919050565b6000819050919050565b6132e7816132d4565b82525050565b600067ffffffffffffffff82169050919050565b61330a816132ed565b82525050565b600061ffff82169050919050565b61332781613310565b82525050565b600063ffffffff82169050919050565b6133468161332d565b82525050565b600060a08201905061336160008301886132de565b61336e6020830187613301565b61337b604083018661331e565b613388606083018561333d565b613395608083018461333d565b9695505050505050565b6000815190506133ae816127a8565b92915050565b6000602082840312156133ca576133c961261e565b5b60006133d88482850161339f565b91505092915050565b600081905092915050565b60006133f7826126e3565b61340181856133e1565b93506134118185602086016126ff565b80840191505092915050565b600061342982856133ec565b915061343582846133ec565b91508190509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061349d6026836126ee565b91506134a882613441565b604082019050919050565b600060208201905081810360008301526134cc81613490565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061350d8261279e565b91506135188361279e565b925082613528576135276134d3565b5b828206905092915050565b60006040820190506135486000830185612cb1565b6135556020830184612833565b9392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006135b86025836126ee565b91506135c38261355c565b604082019050919050565b600060208201905081810360008301526135e7816135ab565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061364a6024836126ee565b9150613655826135ee565b604082019050919050565b600060208201905081810360008301526136798161363d565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006136b66020836126ee565b91506136c182613680565b602082019050919050565b600060208201905081810360008301526136e5816136a9565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b60006137226019836126ee565b915061372d826136ec565b602082019050919050565b6000602082019050818103600083015261375181613715565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006137b46032836126ee565b91506137bf82613758565b604082019050919050565b600060208201905081810360008301526137e3816137a7565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000613846602e836126ee565b9150613851826137ea565b604082019050919050565b6000602082019050818103600083015261387581613839565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006138a38261387c565b6138ad8185613887565b93506138bd8185602086016126ff565b6138c681612732565b840191505092915050565b60006080820190506138e66000830187612833565b6138f36020830186612833565b6139006040830185612b86565b81810360608301526139128184613898565b905095945050505050565b60008151905061392c81612654565b92915050565b6000602082840312156139485761394761261e565b5b60006139568482850161391d565b91505092915050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b60006139956020836126ee565b91506139a08261395f565b602082019050919050565b600060208201905081810360008301526139c481613988565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000613a01601c836126ee565b9150613a0c826139cb565b602082019050919050565b60006020820190508181036000830152613a30816139f4565b905091905056fea2646970667358221220f248c64f3da76f5adf91437cbff133dca0fbbec89ebef44c7905e65f9021759364736f6c63430008080033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB6 JUMPI DUP1 PUSH4 0xA51CCCF3 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA51CCCF3 EQ PUSH2 0x47E JUMPI DUP1 PUSH4 0xAA152491 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x53F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x57C JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x7A5CAAB3 EQ PUSH2 0x3D4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x42A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x455 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x3AF25975 GT PUSH2 0x108 JUMPI DUP1 PUSH4 0x3AF25975 EQ PUSH2 0x270 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x2C4 JUMPI DUP1 PUSH4 0x5DACF5F4 EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x6E02007D EQ PUSH2 0x355 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x150 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x1B8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1F5 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x247 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x172 SWAP2 SWAP1 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH2 0x606 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AF SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DA SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x698 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x217 SWAP2 SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x2A11 JUMP JUMPDEST PUSH2 0x7F6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0x8B6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x27C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x292 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C2 PUSH2 0x9C6 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E6 SWAP2 SWAP1 PUSH2 0x2A6D JUMP JUMPDEST PUSH2 0xA7A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x302 PUSH2 0xA9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30F SWAP2 SWAP1 PUSH2 0x2B6B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x33F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xAC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34C SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x36A PUSH2 0xB4C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x377 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A2 SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0xB56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3D2 PUSH2 0xC0E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E9 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x414 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x421 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43F PUSH2 0xC74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44C SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x47C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x477 SWAP2 SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH2 0xD06 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0xD1C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C3 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x2D90 JUMP JUMPDEST PUSH2 0xFFE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x50E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x529 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x524 SWAP2 SWAP1 PUSH2 0x27D4 JUMP JUMPDEST PUSH2 0x1060 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x536 SWAP2 SWAP1 PUSH2 0x277C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x566 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x561 SWAP2 SWAP1 PUSH2 0x2E13 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x573 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x588 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59E SWAP2 SWAP1 PUSH2 0x2BB0 JUMP JUMPDEST PUSH2 0x1207 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5FF JUMPI POP PUSH2 0x5FE DUP3 PUSH2 0x128B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x615 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x641 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x68E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x663 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x68E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x671 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6E9 DUP3 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x75A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x751 SWAP1 PUSH2 0x2F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x779 PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x7A8 JUMPI POP PUSH2 0x7A7 DUP2 PUSH2 0x7A2 PUSH2 0x13B8 JUMP JUMPDEST PUSH2 0x1173 JUMP JUMPDEST JUMPDEST PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F1 DUP4 DUP4 PUSH2 0x13C0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8A8 JUMPI CALLER PUSH32 0x0 PUSH1 0x40 MLOAD PUSH32 0x1CF993F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89F SWAP3 SWAP2 SWAP1 PUSH2 0x2FD8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8B2 DUP3 DUP3 PUSH2 0x1479 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8C7 PUSH2 0x8C1 PUSH2 0x13B8 JUMP JUMPDEST DUP3 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x906 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FD SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x911 DUP4 DUP4 DUP4 PUSH2 0x16AE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x92C JUMPI PUSH2 0x92B PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x941 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x96D SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9BA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x98F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9BA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x99D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9CE PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x9F9 SWAP1 PUSH2 0x30F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xA36 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xA3B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA76 JUMPI PUSH1 0x40 MLOAD PUSH32 0x72A5A44B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA95 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xFFE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAA2 PUSH2 0x254F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD1 DUP4 PUSH2 0x1A26 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xBC7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBE SWAP1 PUSH2 0x31E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC16 PUSH2 0x19A8 JUMP JUMPDEST PUSH2 0xC20 PUSH1 0x0 PUSH2 0x1A63 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0xC83 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xCAF SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCFC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xCD1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xCFC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xCDF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xD18 PUSH2 0xD11 PUSH2 0x13B8 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1B29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH1 0x0 PUSH2 0xD2D PUSH2 0xA9A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDC6 JUMPI DUP3 DUP6 LT ISZERO DUP1 ISZERO PUSH2 0xD6C JUMPI POP DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xD59 JUMPI PUSH2 0xD58 PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xD69 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST DUP6 LT JUMPDEST ISZERO PUSH2 0xD8E JUMPI DUP1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD83 PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST SWAP4 POP POP POP POP PUSH2 0xDF9 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL ADD MLOAD DUP4 PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0xDBE SWAP1 PUSH2 0x328B JUMP JUMPDEST SWAP2 POP POP PUSH2 0xD32 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0xE3BC09F500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 CALLVALUE LT ISZERO PUSH2 0xE5A JUMPI PUSH1 0x40 MLOAD PUSH32 0xB277FB0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x5D3B1D30 PUSH32 0x0 PUSH32 0x0 PUSH1 0x3 PUSH32 0x0 PUSH1 0x1 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF1D SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x334C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF6F SWAP2 SWAP1 PUSH2 0x33B4 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xF873236E6CC0ECC5BE1A9A35C95EE5B8D1AC4CC7BFEF0CC5060391D6CC98E26B CALLER PUSH1 0x40 MLOAD PUSH2 0xFF3 SWAP2 SWAP1 PUSH2 0x2842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP1 JUMP JUMPDEST PUSH2 0x100F PUSH2 0x1009 PUSH2 0x13B8 JUMP JUMPDEST DUP4 PUSH2 0x1619 JUMP JUMPDEST PUSH2 0x104E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1045 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x105A DUP5 DUP5 DUP5 DUP5 PUSH2 0x1C96 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x106B DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x108B SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x10B7 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1104 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10D9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1104 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10E7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1115 PUSH2 0x1CF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x112B JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1160 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1148 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x116E JUMP JUMPDEST PUSH2 0x1169 DUP5 PUSH2 0x1D09 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x120F PUSH2 0x19A8 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x127F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1276 SWAP1 PUSH2 0x34B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x1A63 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x1356 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1366 JUMPI POP PUSH2 0x1365 DUP3 PUSH2 0x1D71 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1376 DUP2 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x13B5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13AC SWAP1 PUSH2 0x3154 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1433 DUP4 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x9 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x14D0 JUMPI PUSH2 0x14CF PUSH2 0x3093 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x14E2 SWAP2 SWAP1 PUSH2 0x3502 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x14EF DUP3 PUSH2 0xD1C JUMP JUMPDEST SWAP1 POP PUSH1 0x9 SLOAD PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1505 SWAP2 SWAP1 PUSH2 0x3235 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1516 DUP5 DUP5 PUSH2 0x1E1C JUMP JUMPDEST PUSH2 0x15D8 DUP4 PUSH1 0xA DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x152F JUMPI PUSH2 0x152E PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1540 JUMPI PUSH2 0x153F PUSH2 0x3093 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP1 SLOAD PUSH2 0x1555 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1581 SWAP1 PUSH2 0x2E82 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH2 0x1E3A JUMP JUMPDEST PUSH32 0xCDF57ECB2C3AA16B6AA947D2477A018B8BD181EF0ECDCEF44CD8ED41BE8C7240 DUP2 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP3 SWAP2 SWAP1 PUSH2 0x3533 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1625 DUP4 PUSH2 0xAC5 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1667 JUMPI POP PUSH2 0x1666 DUP2 DUP6 PUSH2 0x1173 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x16A5 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x168D DUP5 PUSH2 0x698 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16CE DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x171B SWAP1 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1794 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x178B SWAP1 PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17A1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EE5 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17C1 DUP3 PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1817 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180E SWAP1 PUSH2 0x35CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x19A3 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x19B0 PUSH2 0x13B8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19CE PUSH2 0xC4A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A24 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A1B SWAP1 PUSH2 0x36CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1B98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B8F SWAP1 PUSH2 0x3738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1C89 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1CA1 DUP5 DUP5 DUP5 PUSH2 0x16AE JUMP JUMPDEST PUSH2 0x1CAD DUP5 DUP5 DUP5 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x1CEC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CE3 SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D14 DUP3 PUSH2 0x136D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D1E PUSH2 0x1CF2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x1D3E JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1D69 JUMP JUMPDEST DUP1 PUSH2 0x1D48 DUP5 PUSH2 0x2088 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D59 SWAP3 SWAP2 SWAP1 PUSH2 0x341D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1DFD DUP4 PUSH2 0x1A26 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E36 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2160 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1E43 DUP3 PUSH2 0x1DDB JUMP JUMPDEST PUSH2 0x1E82 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E79 SWAP1 PUSH2 0x385C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1EA9 SWAP3 SWAP2 SWAP1 PUSH2 0x2571 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1ED9 SWAP2 SWAP1 PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F12 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x21BB JUMP JUMPDEST ISZERO PUSH2 0x207B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x1F3B PUSH2 0x13B8 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F5D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x38D1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1F77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1FA8 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FA5 SWAP2 SWAP1 PUSH2 0x3932 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x202B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1FD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1FDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD EQ ISZERO PUSH2 0x2023 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x201A SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x2080 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x2097 DUP5 PUSH2 0x21DE JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B5 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20E8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x2155 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 EQ ISZERO PUSH2 0x2150 JUMPI PUSH2 0x2155 JUMP JUMPDEST PUSH2 0x20F6 JUMP JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x216A DUP4 DUP4 PUSH2 0x2331 JUMP JUMPDEST PUSH2 0x2177 PUSH1 0x0 DUP5 DUP5 DUP5 PUSH2 0x1EF1 JUMP JUMPDEST PUSH2 0x21B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21AD SWAP1 PUSH2 0x37CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x223C JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x2232 JUMPI PUSH2 0x2231 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x2279 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x226F JUMPI PUSH2 0x226E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x22A8 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x229E JUMPI PUSH2 0x229D PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x22D1 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x22F6 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x22EC JUMPI PUSH2 0x22EB PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x2319 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x230F JUMPI PUSH2 0x230E PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x2328 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2398 SWAP1 PUSH2 0x39AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23AA DUP2 PUSH2 0x1DDB JUMP JUMPDEST ISZERO PUSH2 0x23EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E1 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23F8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EE5 JUMP JUMPDEST PUSH2 0x2401 DUP2 PUSH2 0x1DDB JUMP JUMPDEST ISZERO PUSH2 0x2441 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2438 SWAP1 PUSH2 0x3A17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x254B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1EEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x257D SWAP1 PUSH2 0x2E82 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x259F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x25E6 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x25B8 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x25E6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x25E6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x25E5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x25CA JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x25F3 SWAP2 SWAP1 PUSH2 0x25F7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2610 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x25F8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x265D DUP2 PUSH2 0x2628 JUMP JUMPDEST DUP2 EQ PUSH2 0x2668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x267A DUP2 PUSH2 0x2654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2696 JUMPI PUSH2 0x2695 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A4 DUP5 DUP3 DUP6 ADD PUSH2 0x266B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26C2 DUP2 PUSH2 0x26AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x26DD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x26B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x271D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2702 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x272C JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x274E DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x2758 DUP2 DUP6 PUSH2 0x26EE JUMP JUMPDEST SWAP4 POP PUSH2 0x2768 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x2771 DUP2 PUSH2 0x2732 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2796 DUP2 DUP5 PUSH2 0x2743 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B1 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP2 EQ PUSH2 0x27BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x27CE DUP2 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27EA JUMPI PUSH2 0x27E9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x27F8 DUP5 DUP3 DUP6 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282C DUP3 PUSH2 0x2801 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x283C DUP2 PUSH2 0x2821 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2857 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2866 DUP2 PUSH2 0x2821 JUMP JUMPDEST DUP2 EQ PUSH2 0x2871 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2883 DUP2 PUSH2 0x285D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28A0 JUMPI PUSH2 0x289F PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28AE DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x28BF DUP6 DUP3 DUP7 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2906 DUP3 PUSH2 0x2732 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2925 JUMPI PUSH2 0x2924 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2938 PUSH2 0x2614 JUMP JUMPDEST SWAP1 POP PUSH2 0x2944 DUP3 DUP3 PUSH2 0x28FD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2964 JUMPI PUSH2 0x2963 PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x298D PUSH2 0x2988 DUP5 PUSH2 0x2949 JUMP JUMPDEST PUSH2 0x292E JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x2975 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29D9 JUMPI DUP1 PUSH2 0x29C5 DUP9 DUP3 PUSH2 0x27BF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x29B2 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x29F8 JUMPI PUSH2 0x29F7 PUSH2 0x28C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A08 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x297A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A28 JUMPI PUSH2 0x2A27 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A36 DUP6 DUP3 DUP7 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A57 JUMPI PUSH2 0x2A56 PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH2 0x2A63 DUP6 DUP3 DUP7 ADD PUSH2 0x29E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2A86 JUMPI PUSH2 0x2A85 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2A94 DUP7 DUP3 DUP8 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AA5 DUP7 DUP3 DUP8 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2AB6 DUP7 DUP3 DUP8 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AE9 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2AFB DUP4 DUP4 PUSH2 0x2AE0 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B1D DUP2 PUSH2 0x2AC0 JUMP JUMPDEST PUSH2 0x2B27 DUP2 DUP5 PUSH2 0x2ACB JUMP JUMPDEST SWAP3 POP PUSH2 0x2B32 DUP3 PUSH2 0x2AD6 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2B63 JUMPI DUP2 MLOAD PUSH2 0x2B4A DUP8 DUP3 PUSH2 0x2AEF JUMP JUMPDEST SWAP7 POP PUSH2 0x2B55 DUP4 PUSH2 0x2B07 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2B36 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2B80 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B8F DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BAA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2B86 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BC6 JUMPI PUSH2 0x2BC5 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BD4 DUP5 DUP3 DUP6 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BE6 DUP2 PUSH2 0x26AD JUMP JUMPDEST DUP2 EQ PUSH2 0x2BF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2C03 DUP2 PUSH2 0x2BDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2C20 JUMPI PUSH2 0x2C1F PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C2E DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2C3F DUP6 DUP3 DUP7 ADD PUSH2 0x2BF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x2C89 JUMPI PUSH2 0x2C88 PUSH2 0x2C49 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x2C9A DUP3 PUSH2 0x2C78 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CAA DUP3 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CBA DUP2 PUSH2 0x2C9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2CD5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CB1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2CFB JUMPI PUSH2 0x2CFA PUSH2 0x28CE JUMP JUMPDEST JUMPDEST PUSH2 0x2D04 DUP3 PUSH2 0x2732 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D33 PUSH2 0x2D2E DUP5 PUSH2 0x2CE0 JUMP JUMPDEST PUSH2 0x292E JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2D4F JUMPI PUSH2 0x2D4E PUSH2 0x2CDB JUMP JUMPDEST JUMPDEST PUSH2 0x2D5A DUP5 DUP3 DUP6 PUSH2 0x2D11 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D77 JUMPI PUSH2 0x2D76 PUSH2 0x28C9 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D87 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2D20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2DAA JUMPI PUSH2 0x2DA9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2DB8 DUP8 DUP3 DUP9 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2DC9 DUP8 DUP3 DUP9 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2DDA DUP8 DUP3 DUP9 ADD PUSH2 0x27BF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DFB JUMPI PUSH2 0x2DFA PUSH2 0x2623 JUMP JUMPDEST JUMPDEST PUSH2 0x2E07 DUP8 DUP3 DUP9 ADD PUSH2 0x2D62 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E2A JUMPI PUSH2 0x2E29 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2E38 DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2E49 DUP6 DUP3 DUP7 ADD PUSH2 0x2874 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2E9A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x2EAE JUMPI PUSH2 0x2EAD PUSH2 0x2E53 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F10 PUSH1 0x21 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2F1B DUP3 PUSH2 0x2EB4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2F3F DUP2 PUSH2 0x2F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FA2 PUSH1 0x3D DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x2FAD DUP3 PUSH2 0x2F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2FD1 DUP2 PUSH2 0x2F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FED PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x2FFA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x305D PUSH1 0x2D DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3068 DUP3 PUSH2 0x3001 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x308C DUP2 PUSH2 0x3050 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30DD PUSH1 0x0 DUP4 PUSH2 0x30C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x30E8 DUP3 PUSH2 0x30CD JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30FE DUP3 PUSH2 0x30D0 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x313E PUSH1 0x18 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3149 DUP3 PUSH2 0x3108 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x316D DUP2 PUSH2 0x3131 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x31D0 PUSH1 0x29 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x31DB DUP3 PUSH2 0x3174 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31FF DUP2 PUSH2 0x31C3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3240 DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH2 0x324B DUP4 PUSH2 0x279E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3280 JUMPI PUSH2 0x327F PUSH2 0x3206 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3296 DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x32C9 JUMPI PUSH2 0x32C8 PUSH2 0x3206 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x32E7 DUP2 PUSH2 0x32D4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x330A DUP2 PUSH2 0x32ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3327 DUP2 PUSH2 0x3310 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3346 DUP2 PUSH2 0x332D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3361 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x32DE JUMP JUMPDEST PUSH2 0x336E PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x3301 JUMP JUMPDEST PUSH2 0x337B PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x331E JUMP JUMPDEST PUSH2 0x3388 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x333D JUMP JUMPDEST PUSH2 0x3395 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x333D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x33AE DUP2 PUSH2 0x27A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33CA JUMPI PUSH2 0x33C9 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x33D8 DUP5 DUP3 DUP6 ADD PUSH2 0x339F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33F7 DUP3 PUSH2 0x26E3 JUMP JUMPDEST PUSH2 0x3401 DUP2 DUP6 PUSH2 0x33E1 JUMP JUMPDEST SWAP4 POP PUSH2 0x3411 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3429 DUP3 DUP6 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP PUSH2 0x3435 DUP3 DUP5 PUSH2 0x33EC JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x349D PUSH1 0x26 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x34A8 DUP3 PUSH2 0x3441 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x34CC DUP2 PUSH2 0x3490 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x350D DUP3 PUSH2 0x279E JUMP JUMPDEST SWAP2 POP PUSH2 0x3518 DUP4 PUSH2 0x279E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3528 JUMPI PUSH2 0x3527 PUSH2 0x34D3 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3548 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2CB1 JUMP JUMPDEST PUSH2 0x3555 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2833 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35B8 PUSH1 0x25 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x35C3 DUP3 PUSH2 0x355C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35E7 DUP2 PUSH2 0x35AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x364A PUSH1 0x24 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3655 DUP3 PUSH2 0x35EE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3679 DUP2 PUSH2 0x363D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B6 PUSH1 0x20 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x36C1 DUP3 PUSH2 0x3680 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36E5 DUP2 PUSH2 0x36A9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3722 PUSH1 0x19 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x372D DUP3 PUSH2 0x36EC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3751 DUP2 PUSH2 0x3715 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37B4 PUSH1 0x32 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x37BF DUP3 PUSH2 0x3758 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37E3 DUP2 PUSH2 0x37A7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3846 PUSH1 0x2E DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3851 DUP3 PUSH2 0x37EA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3875 DUP2 PUSH2 0x3839 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A3 DUP3 PUSH2 0x387C JUMP JUMPDEST PUSH2 0x38AD DUP2 DUP6 PUSH2 0x3887 JUMP JUMPDEST SWAP4 POP PUSH2 0x38BD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x26FF JUMP JUMPDEST PUSH2 0x38C6 DUP2 PUSH2 0x2732 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x38E6 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x38F3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x3900 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2B86 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3912 DUP2 DUP5 PUSH2 0x3898 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x392C DUP2 PUSH2 0x2654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3948 JUMPI PUSH2 0x3947 PUSH2 0x261E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3956 DUP5 DUP3 DUP6 ADD PUSH2 0x391D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3995 PUSH1 0x20 DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x39A0 DUP3 PUSH2 0x395F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x39C4 DUP2 PUSH2 0x3988 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A01 PUSH1 0x1C DUP4 PUSH2 0x26EE JUMP JUMPDEST SWAP2 POP PUSH2 0x3A0C DUP3 PUSH2 0x39CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A30 DUP2 PUSH2 0x39F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE BASEFEE 0xC6 0x4F RETURNDATASIZE 0xA7 PUSH16 0x5ADF91437CBFF133DCA0FBBEC89EBEF4 0x4C PUSH26 0x5E65F9021759364736F6C634300080800330000000000000000 ","sourceMap":"464:3655:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6618:256:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3888:123:24;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2907:255;;;;;;;;;;;;;:::i;:::-;;4974:149:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3667:118:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4019:97:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:5;;;;;;;;;;;;;:::i;:::-;;3793:87:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:9;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3170:489:24;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:497;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5189:276:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;806:608:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162:9;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:5;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;535:205:12;637:4;682:10;675:18;;660:33;;;:11;:33;;;;:73;;;;697:36;721:11;697:23;:36::i;:::-;660:73;653:80;;535:205;;;:::o;2471:98:9:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;6618:256:0:-;6731:14;6717:28;;:10;:28;;;6713:109;;6788:10;6800:14;6762:53;;;;;;;;;;;;:::i;:::-;;;;;;;;6713:109;6827:42;6846:9;6857:11;6827:18;:42::i;:::-;6618:256;;:::o;4612:296:9:-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;3888:123:24:-;3949:13;3982:14;3997:5;3982:21;;;;;;;;:::i;:::-;;;;;;;;;3975:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3888:123;;;:::o;2907:255::-;1094:13:5;:11;:13::i;:::-;2955:14:24::1;2972:21;2955:38;;3005:12;3031:10;3023:24;;3055:6;3023:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3004:62;;;3082:7;3077:78;;3113:30;;;;;;;;;;;;;;3077:78;2944:218;;2907:255::o:0;4974:149:9:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;3667:118:24:-;3714:17;;:::i;:::-;3744:33;;;;;;;;3752:2;3744:33;;;;3756:2;3744:33;;;;1033:3;3744:33;;;;;3667:118;:::o;2190:219:9:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;4019:97:24:-;4067:7;4094:14;;4087:21;;4019:97;:::o;1929:204:9:-;2001:7;2045:1;2028:19;;:5;:19;;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;1824:101:5:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3793:87:24:-;3836:7;3863:9;3856:16;;3793:87;:::o;1201:85:5:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2633:102:9:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;3170:489:24:-;3241:5;3259:21;3283:1;3259:25;;3295:26;3324:16;:14;:16::i;:::-;3295:45;;3358:9;3353:249;3377:18;3373:1;:22;3353:249;;;3434:13;3421:9;:26;;:72;;;;;3479:11;3491:1;3479:14;;;;;;;:::i;:::-;;;;;;3463:13;:30;;;;:::i;:::-;3451:9;:42;3421:72;3417:128;;;3527:1;3521:8;;;;;;;;:::i;:::-;;3514:15;;;;;;;3417:128;3576:11;3588:1;3576:14;;;;;;;:::i;:::-;;;;;;3559:31;;;;;:::i;:::-;;;3397:3;;;;;:::i;:::-;;;;3353:249;;;;3619:32;;;;;;;;;;;;;;3170:489;;;;:::o;1855:497::-;1901:17;1947:9;1935;:21;1931:92;;;1980:31;;;;;;;;;;;;;;1931:92;2045:16;:35;;;2095:9;2119:16;797:1;2186:18;841:1;2045:194;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2033:206;;2283:10;2250:19;:30;2270:9;2250:30;;;;;;;;;;;;:43;;;;;;;;;;;;;;;;;;2322:9;2309:35;2333:10;2309:35;;;;;;:::i;:::-;;;;;;;;1855:497;:::o;5189:276:9:-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;806:608:12:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:10;:19;975:7;964:19;;;;;;;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;:8;:10::i;:::-;993:31;;1119:1;1103:4;1097:18;:23;1093:70;;;1143:9;1136:16;;;;;;1093:70;1291:1;1271:9;1265:23;:27;1261:106;;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;;;1261:106;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;;;;806:608;;;;:::o;4388:162:9:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;2074:198:5:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;;;2154:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1570:300:9:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;13240:133::-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:15:-;693:7;719:10;712:17;;640:96;:::o;12572:171:9:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;2360:539:24:-;2466:16;2485:19;:30;2505:9;2485:30;;;;;;;;;;;;;;;;;;;;;2466:49;;2526:18;2547:14;;2526:35;;2574:17;1033:3;2594:11;2606:1;2594:14;;;;;;;;:::i;:::-;;;;;;;;:33;;;;:::i;:::-;2574:53;;2638:14;2655:32;2677:9;2655:21;:32::i;:::-;2638:49;;2716:14;;2698;;:32;;;;;;;:::i;:::-;;;;;;;;2743:31;2753:8;2763:10;2743:9;:31::i;:::-;2785:59;2798:10;2810:14;2833:8;2825:17;;;;;;;;:::i;:::-;;2810:33;;;;;;;;:::i;:::-;;;;;;;;;2785:59;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:59::i;:::-;2862:29;2872:8;2882;2862:29;;;;;;;:::i;:::-;;;;;;;;2455:444;;;;2360:539;;:::o;7404:261:9:-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;1359:130:5:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;6702:115:9:-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;2426:187:5:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;12879:277:9:-;12999:8;12990:17;;:5;:17;;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;829:155:17:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7120:126:9:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;7995:108::-;8070:26;8080:2;8084:7;8070:26;;;;;;;;;;;;:9;:26::i;:::-;7995:108;;:::o;1599:253:12:-;1698:16;1706:7;1698;:16::i;:::-;1690:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:9;1775:10;:19;1786:7;1775:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;1822:23;1837:7;1822:23;;;;;;:::i;:::-;;;;;;;;1599:253;;:::o;15472:116:9:-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;447:696:16:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;1064:21;;;1080:5;;1064:21;820:280;;;1120:6;1113:13;;;;;447:696;;;:::o;8324:279:9:-;8418:18;8424:2;8428:7;8418:5;:18::i;:::-;8467:53;8498:1;8502:2;8506:7;8515:4;8467:22;:53::i;:::-;8446:150;;;;;;;;;;;;:::i;:::-;;;;;;;;;8324:279;;;:::o;1412:320:14:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;10139:916:19:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;8925:920:9:-;9018:1;9004:16;;:2;:16;;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:26:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:307::-;1866:1;1876:113;1890:6;1887:1;1884:13;1876:113;;;1975:1;1970:3;1966:11;1960:18;1956:1;1951:3;1947:11;1940:39;1912:2;1909:1;1905:10;1900:15;;1876:113;;;2007:6;2004:1;2001:13;1998:101;;;2087:1;2078:6;2073:3;2069:16;2062:27;1998:101;1847:258;1798:307;;;:::o;2111:102::-;2152:6;2203:2;2199:7;2194:2;2187:5;2183:14;2179:28;2169:38;;2111:102;;;:::o;2219:364::-;2307:3;2335:39;2368:5;2335:39;:::i;:::-;2390:71;2454:6;2449:3;2390:71;:::i;:::-;2383:78;;2470:52;2515:6;2510:3;2503:4;2496:5;2492:16;2470:52;:::i;:::-;2547:29;2569:6;2547:29;:::i;:::-;2542:3;2538:39;2531:46;;2311:272;2219:364;;;;:::o;2589:313::-;2702:4;2740:2;2729:9;2725:18;2717:26;;2789:9;2783:4;2779:20;2775:1;2764:9;2760:17;2753:47;2817:78;2890:4;2881:6;2817:78;:::i;:::-;2809:86;;2589:313;;;;:::o;2908:77::-;2945:7;2974:5;2963:16;;2908:77;;;:::o;2991:122::-;3064:24;3082:5;3064:24;:::i;:::-;3057:5;3054:35;3044:63;;3103:1;3100;3093:12;3044:63;2991:122;:::o;3119:139::-;3165:5;3203:6;3190:20;3181:29;;3219:33;3246:5;3219:33;:::i;:::-;3119:139;;;;:::o;3264:329::-;3323:6;3372:2;3360:9;3351:7;3347:23;3343:32;3340:119;;;3378:79;;:::i;:::-;3340:119;3498:1;3523:53;3568:7;3559:6;3548:9;3544:22;3523:53;:::i;:::-;3513:63;;3469:117;3264:329;;;;:::o;3599:126::-;3636:7;3676:42;3669:5;3665:54;3654:65;;3599:126;;;:::o;3731:96::-;3768:7;3797:24;3815:5;3797:24;:::i;:::-;3786:35;;3731:96;;;:::o;3833:118::-;3920:24;3938:5;3920:24;:::i;:::-;3915:3;3908:37;3833:118;;:::o;3957:222::-;4050:4;4088:2;4077:9;4073:18;4065:26;;4101:71;4169:1;4158:9;4154:17;4145:6;4101:71;:::i;:::-;3957:222;;;;:::o;4185:122::-;4258:24;4276:5;4258:24;:::i;:::-;4251:5;4248:35;4238:63;;4297:1;4294;4287:12;4238:63;4185:122;:::o;4313:139::-;4359:5;4397:6;4384:20;4375:29;;4413:33;4440:5;4413:33;:::i;:::-;4313:139;;;;:::o;4458:474::-;4526:6;4534;4583:2;4571:9;4562:7;4558:23;4554:32;4551:119;;;4589:79;;:::i;:::-;4551:119;4709:1;4734:53;4779:7;4770:6;4759:9;4755:22;4734:53;:::i;:::-;4724:63;;4680:117;4836:2;4862:53;4907:7;4898:6;4887:9;4883:22;4862:53;:::i;:::-;4852:63;;4807:118;4458:474;;;;;:::o;4938:117::-;5047:1;5044;5037:12;5061:180;5109:77;5106:1;5099:88;5206:4;5203:1;5196:15;5230:4;5227:1;5220:15;5247:281;5330:27;5352:4;5330:27;:::i;:::-;5322:6;5318:40;5460:6;5448:10;5445:22;5424:18;5412:10;5409:34;5406:62;5403:88;;;5471:18;;:::i;:::-;5403:88;5511:10;5507:2;5500:22;5290:238;5247:281;;:::o;5534:129::-;5568:6;5595:20;;:::i;:::-;5585:30;;5624:33;5652:4;5644:6;5624:33;:::i;:::-;5534:129;;;:::o;5669:311::-;5746:4;5836:18;5828:6;5825:30;5822:56;;;5858:18;;:::i;:::-;5822:56;5908:4;5900:6;5896:17;5888:25;;5968:4;5962;5958:15;5950:23;;5669:311;;;:::o;5986:117::-;6095:1;6092;6085:12;6126:710;6222:5;6247:81;6263:64;6320:6;6263:64;:::i;:::-;6247:81;:::i;:::-;6238:90;;6348:5;6377:6;6370:5;6363:21;6411:4;6404:5;6400:16;6393:23;;6464:4;6456:6;6452:17;6444:6;6440:30;6493:3;6485:6;6482:15;6479:122;;;6512:79;;:::i;:::-;6479:122;6627:6;6610:220;6644:6;6639:3;6636:15;6610:220;;;6719:3;6748:37;6781:3;6769:10;6748:37;:::i;:::-;6743:3;6736:50;6815:4;6810:3;6806:14;6799:21;;6686:144;6670:4;6665:3;6661:14;6654:21;;6610:220;;;6614:21;6228:608;;6126:710;;;;;:::o;6859:370::-;6930:5;6979:3;6972:4;6964:6;6960:17;6956:27;6946:122;;6987:79;;:::i;:::-;6946:122;7104:6;7091:20;7129:94;7219:3;7211:6;7204:4;7196:6;7192:17;7129:94;:::i;:::-;7120:103;;6936:293;6859:370;;;;:::o;7235:684::-;7328:6;7336;7385:2;7373:9;7364:7;7360:23;7356:32;7353:119;;;7391:79;;:::i;:::-;7353:119;7511:1;7536:53;7581:7;7572:6;7561:9;7557:22;7536:53;:::i;:::-;7526:63;;7482:117;7666:2;7655:9;7651:18;7638:32;7697:18;7689:6;7686:30;7683:117;;;7719:79;;:::i;:::-;7683:117;7824:78;7894:7;7885:6;7874:9;7870:22;7824:78;:::i;:::-;7814:88;;7609:303;7235:684;;;;;:::o;7925:619::-;8002:6;8010;8018;8067:2;8055:9;8046:7;8042:23;8038:32;8035:119;;;8073:79;;:::i;:::-;8035:119;8193:1;8218:53;8263:7;8254:6;8243:9;8239:22;8218:53;:::i;:::-;8208:63;;8164:117;8320:2;8346:53;8391:7;8382:6;8371:9;8367:22;8346:53;:::i;:::-;8336:63;;8291:118;8448:2;8474:53;8519:7;8510:6;8499:9;8495:22;8474:53;:::i;:::-;8464:63;;8419:118;7925:619;;;;;:::o;8550:104::-;8615:6;8643:4;8633:14;;8550:104;;;:::o;8660:143::-;8757:11;8794:3;8779:18;;8660:143;;;;:::o;8809:98::-;8874:4;8897:3;8889:11;;8809:98;;;:::o;8913:108::-;8990:24;9008:5;8990:24;:::i;:::-;8985:3;8978:37;8913:108;;:::o;9027:179::-;9096:10;9117:46;9159:3;9151:6;9117:46;:::i;:::-;9195:4;9190:3;9186:14;9172:28;;9027:179;;;;:::o;9212:111::-;9280:4;9312;9307:3;9303:14;9295:22;;9212:111;;;:::o;9361:694::-;9497:52;9543:5;9497:52;:::i;:::-;9565:84;9642:6;9637:3;9565:84;:::i;:::-;9558:91;;9673:54;9721:5;9673:54;:::i;:::-;9750:7;9781:1;9766:282;9791:6;9788:1;9785:13;9766:282;;;9867:6;9861:13;9894:63;9953:3;9938:13;9894:63;:::i;:::-;9887:70;;9980:58;10031:6;9980:58;:::i;:::-;9970:68;;9826:222;9813:1;9810;9806:9;9801:14;;9766:282;;;9770:14;9473:582;;;9361:694;;:::o;10061:314::-;10200:4;10238:2;10227:9;10223:18;10215:26;;10251:117;10365:1;10354:9;10350:17;10341:6;10251:117;:::i;:::-;10061:314;;;;:::o;10381:118::-;10468:24;10486:5;10468:24;:::i;:::-;10463:3;10456:37;10381:118;;:::o;10505:222::-;10598:4;10636:2;10625:9;10621:18;10613:26;;10649:71;10717:1;10706:9;10702:17;10693:6;10649:71;:::i;:::-;10505:222;;;;:::o;10733:329::-;10792:6;10841:2;10829:9;10820:7;10816:23;10812:32;10809:119;;;10847:79;;:::i;:::-;10809:119;10967:1;10992:53;11037:7;11028:6;11017:9;11013:22;10992:53;:::i;:::-;10982:63;;10938:117;10733:329;;;;:::o;11068:116::-;11138:21;11153:5;11138:21;:::i;:::-;11131:5;11128:32;11118:60;;11174:1;11171;11164:12;11118:60;11068:116;:::o;11190:133::-;11233:5;11271:6;11258:20;11249:29;;11287:30;11311:5;11287:30;:::i;:::-;11190:133;;;;:::o;11329:468::-;11394:6;11402;11451:2;11439:9;11430:7;11426:23;11422:32;11419:119;;;11457:79;;:::i;:::-;11419:119;11577:1;11602:53;11647:7;11638:6;11627:9;11623:22;11602:53;:::i;:::-;11592:63;;11548:117;11704:2;11730:50;11772:7;11763:6;11752:9;11748:22;11730:50;:::i;:::-;11720:60;;11675:115;11329:468;;;;;:::o;11803:180::-;11851:77;11848:1;11841:88;11948:4;11945:1;11938:15;11972:4;11969:1;11962:15;11989:115;12072:1;12065:5;12062:12;12052:46;;12078:18;;:::i;:::-;12052:46;11989:115;:::o;12110:131::-;12157:7;12186:5;12175:16;;12192:43;12229:5;12192:43;:::i;:::-;12110:131;;;:::o;12247:::-;12305:9;12338:34;12366:5;12338:34;:::i;:::-;12325:47;;12247:131;;;:::o;12384:147::-;12479:45;12518:5;12479:45;:::i;:::-;12474:3;12467:58;12384:147;;:::o;12537:238::-;12638:4;12676:2;12665:9;12661:18;12653:26;;12689:79;12765:1;12754:9;12750:17;12741:6;12689:79;:::i;:::-;12537:238;;;;:::o;12781:117::-;12890:1;12887;12880:12;12904:307;12965:4;13055:18;13047:6;13044:30;13041:56;;;13077:18;;:::i;:::-;13041:56;13115:29;13137:6;13115:29;:::i;:::-;13107:37;;13199:4;13193;13189:15;13181:23;;12904:307;;;:::o;13217:154::-;13301:6;13296:3;13291;13278:30;13363:1;13354:6;13349:3;13345:16;13338:27;13217:154;;;:::o;13377:410::-;13454:5;13479:65;13495:48;13536:6;13495:48;:::i;:::-;13479:65;:::i;:::-;13470:74;;13567:6;13560:5;13553:21;13605:4;13598:5;13594:16;13643:3;13634:6;13629:3;13625:16;13622:25;13619:112;;;13650:79;;:::i;:::-;13619:112;13740:41;13774:6;13769:3;13764;13740:41;:::i;:::-;13460:327;13377:410;;;;;:::o;13806:338::-;13861:5;13910:3;13903:4;13895:6;13891:17;13887:27;13877:122;;13918:79;;:::i;:::-;13877:122;14035:6;14022:20;14060:78;14134:3;14126:6;14119:4;14111:6;14107:17;14060:78;:::i;:::-;14051:87;;13867:277;13806:338;;;;:::o;14150:943::-;14245:6;14253;14261;14269;14318:3;14306:9;14297:7;14293:23;14289:33;14286:120;;;14325:79;;:::i;:::-;14286:120;14445:1;14470:53;14515:7;14506:6;14495:9;14491:22;14470:53;:::i;:::-;14460:63;;14416:117;14572:2;14598:53;14643:7;14634:6;14623:9;14619:22;14598:53;:::i;:::-;14588:63;;14543:118;14700:2;14726:53;14771:7;14762:6;14751:9;14747:22;14726:53;:::i;:::-;14716:63;;14671:118;14856:2;14845:9;14841:18;14828:32;14887:18;14879:6;14876:30;14873:117;;;14909:79;;:::i;:::-;14873:117;15014:62;15068:7;15059:6;15048:9;15044:22;15014:62;:::i;:::-;15004:72;;14799:287;14150:943;;;;;;;:::o;15099:474::-;15167:6;15175;15224:2;15212:9;15203:7;15199:23;15195:32;15192:119;;;15230:79;;:::i;:::-;15192:119;15350:1;15375:53;15420:7;15411:6;15400:9;15396:22;15375:53;:::i;:::-;15365:63;;15321:117;15477:2;15503:53;15548:7;15539:6;15528:9;15524:22;15503:53;:::i;:::-;15493:63;;15448:118;15099:474;;;;;:::o;15579:180::-;15627:77;15624:1;15617:88;15724:4;15721:1;15714:15;15748:4;15745:1;15738:15;15765:320;15809:6;15846:1;15840:4;15836:12;15826:22;;15893:1;15887:4;15883:12;15914:18;15904:81;;15970:4;15962:6;15958:17;15948:27;;15904:81;16032:2;16024:6;16021:14;16001:18;15998:38;15995:84;;;16051:18;;:::i;:::-;15995:84;15816:269;15765:320;;;:::o;16091:220::-;16231:34;16227:1;16219:6;16215:14;16208:58;16300:3;16295:2;16287:6;16283:15;16276:28;16091:220;:::o;16317:366::-;16459:3;16480:67;16544:2;16539:3;16480:67;:::i;:::-;16473:74;;16556:93;16645:3;16556:93;:::i;:::-;16674:2;16669:3;16665:12;16658:19;;16317:366;;;:::o;16689:419::-;16855:4;16893:2;16882:9;16878:18;16870:26;;16942:9;16936:4;16932:20;16928:1;16917:9;16913:17;16906:47;16970:131;17096:4;16970:131;:::i;:::-;16962:139;;16689:419;;;:::o;17114:248::-;17254:34;17250:1;17242:6;17238:14;17231:58;17323:31;17318:2;17310:6;17306:15;17299:56;17114:248;:::o;17368:366::-;17510:3;17531:67;17595:2;17590:3;17531:67;:::i;:::-;17524:74;;17607:93;17696:3;17607:93;:::i;:::-;17725:2;17720:3;17716:12;17709:19;;17368:366;;;:::o;17740:419::-;17906:4;17944:2;17933:9;17929:18;17921:26;;17993:9;17987:4;17983:20;17979:1;17968:9;17964:17;17957:47;18021:131;18147:4;18021:131;:::i;:::-;18013:139;;17740:419;;;:::o;18165:332::-;18286:4;18324:2;18313:9;18309:18;18301:26;;18337:71;18405:1;18394:9;18390:17;18381:6;18337:71;:::i;:::-;18418:72;18486:2;18475:9;18471:18;18462:6;18418:72;:::i;:::-;18165:332;;;;;:::o;18503:232::-;18643:34;18639:1;18631:6;18627:14;18620:58;18712:15;18707:2;18699:6;18695:15;18688:40;18503:232;:::o;18741:366::-;18883:3;18904:67;18968:2;18963:3;18904:67;:::i;:::-;18897:74;;18980:93;19069:3;18980:93;:::i;:::-;19098:2;19093:3;19089:12;19082:19;;18741:366;;;:::o;19113:419::-;19279:4;19317:2;19306:9;19302:18;19294:26;;19366:9;19360:4;19356:20;19352:1;19341:9;19337:17;19330:47;19394:131;19520:4;19394:131;:::i;:::-;19386:139;;19113:419;;;:::o;19538:180::-;19586:77;19583:1;19576:88;19683:4;19680:1;19673:15;19707:4;19704:1;19697:15;19724:147;19825:11;19862:3;19847:18;;19724:147;;;;:::o;19877:114::-;;:::o;19997:398::-;20156:3;20177:83;20258:1;20253:3;20177:83;:::i;:::-;20170:90;;20269:93;20358:3;20269:93;:::i;:::-;20387:1;20382:3;20378:11;20371:18;;19997:398;;;:::o;20401:379::-;20585:3;20607:147;20750:3;20607:147;:::i;:::-;20600:154;;20771:3;20764:10;;20401:379;;;:::o;20786:174::-;20926:26;20922:1;20914:6;20910:14;20903:50;20786:174;:::o;20966:366::-;21108:3;21129:67;21193:2;21188:3;21129:67;:::i;:::-;21122:74;;21205:93;21294:3;21205:93;:::i;:::-;21323:2;21318:3;21314:12;21307:19;;20966:366;;;:::o;21338:419::-;21504:4;21542:2;21531:9;21527:18;21519:26;;21591:9;21585:4;21581:20;21577:1;21566:9;21562:17;21555:47;21619:131;21745:4;21619:131;:::i;:::-;21611:139;;21338:419;;;:::o;21763:228::-;21903:34;21899:1;21891:6;21887:14;21880:58;21972:11;21967:2;21959:6;21955:15;21948:36;21763:228;:::o;21997:366::-;22139:3;22160:67;22224:2;22219:3;22160:67;:::i;:::-;22153:74;;22236:93;22325:3;22236:93;:::i;:::-;22354:2;22349:3;22345:12;22338:19;;21997:366;;;:::o;22369:419::-;22535:4;22573:2;22562:9;22558:18;22550:26;;22622:9;22616:4;22612:20;22608:1;22597:9;22593:17;22586:47;22650:131;22776:4;22650:131;:::i;:::-;22642:139;;22369:419;;;:::o;22794:180::-;22842:77;22839:1;22832:88;22939:4;22936:1;22929:15;22963:4;22960:1;22953:15;22980:305;23020:3;23039:20;23057:1;23039:20;:::i;:::-;23034:25;;23073:20;23091:1;23073:20;:::i;:::-;23068:25;;23227:1;23159:66;23155:74;23152:1;23149:81;23146:107;;;23233:18;;:::i;:::-;23146:107;23277:1;23274;23270:9;23263:16;;22980:305;;;;:::o;23291:233::-;23330:3;23353:24;23371:5;23353:24;:::i;:::-;23344:33;;23399:66;23392:5;23389:77;23386:103;;;23469:18;;:::i;:::-;23386:103;23516:1;23509:5;23505:13;23498:20;;23291:233;;;:::o;23530:77::-;23567:7;23596:5;23585:16;;23530:77;;;:::o;23613:118::-;23700:24;23718:5;23700:24;:::i;:::-;23695:3;23688:37;23613:118;;:::o;23737:101::-;23773:7;23813:18;23806:5;23802:30;23791:41;;23737:101;;;:::o;23844:115::-;23929:23;23946:5;23929:23;:::i;:::-;23924:3;23917:36;23844:115;;:::o;23965:89::-;24001:7;24041:6;24034:5;24030:18;24019:29;;23965:89;;;:::o;24060:115::-;24145:23;24162:5;24145:23;:::i;:::-;24140:3;24133:36;24060:115;;:::o;24181:93::-;24217:7;24257:10;24250:5;24246:22;24235:33;;24181:93;;;:::o;24280:115::-;24365:23;24382:5;24365:23;:::i;:::-;24360:3;24353:36;24280:115;;:::o;24401:648::-;24598:4;24636:3;24625:9;24621:19;24613:27;;24650:71;24718:1;24707:9;24703:17;24694:6;24650:71;:::i;:::-;24731:70;24797:2;24786:9;24782:18;24773:6;24731:70;:::i;:::-;24811;24877:2;24866:9;24862:18;24853:6;24811:70;:::i;:::-;24891;24957:2;24946:9;24942:18;24933:6;24891:70;:::i;:::-;24971:71;25037:3;25026:9;25022:19;25013:6;24971:71;:::i;:::-;24401:648;;;;;;;;:::o;25055:143::-;25112:5;25143:6;25137:13;25128:22;;25159:33;25186:5;25159:33;:::i;:::-;25055:143;;;;:::o;25204:351::-;25274:6;25323:2;25311:9;25302:7;25298:23;25294:32;25291:119;;;25329:79;;:::i;:::-;25291:119;25449:1;25474:64;25530:7;25521:6;25510:9;25506:22;25474:64;:::i;:::-;25464:74;;25420:128;25204:351;;;;:::o;25561:148::-;25663:11;25700:3;25685:18;;25561:148;;;;:::o;25715:377::-;25821:3;25849:39;25882:5;25849:39;:::i;:::-;25904:89;25986:6;25981:3;25904:89;:::i;:::-;25897:96;;26002:52;26047:6;26042:3;26035:4;26028:5;26024:16;26002:52;:::i;:::-;26079:6;26074:3;26070:16;26063:23;;25825:267;25715:377;;;;:::o;26098:435::-;26278:3;26300:95;26391:3;26382:6;26300:95;:::i;:::-;26293:102;;26412:95;26503:3;26494:6;26412:95;:::i;:::-;26405:102;;26524:3;26517:10;;26098:435;;;;;:::o;26539:225::-;26679:34;26675:1;26667:6;26663:14;26656:58;26748:8;26743:2;26735:6;26731:15;26724:33;26539:225;:::o;26770:366::-;26912:3;26933:67;26997:2;26992:3;26933:67;:::i;:::-;26926:74;;27009:93;27098:3;27009:93;:::i;:::-;27127:2;27122:3;27118:12;27111:19;;26770:366;;;:::o;27142:419::-;27308:4;27346:2;27335:9;27331:18;27323:26;;27395:9;27389:4;27385:20;27381:1;27370:9;27366:17;27359:47;27423:131;27549:4;27423:131;:::i;:::-;27415:139;;27142:419;;;:::o;27567:180::-;27615:77;27612:1;27605:88;27712:4;27709:1;27702:15;27736:4;27733:1;27726:15;27753:176;27785:1;27802:20;27820:1;27802:20;:::i;:::-;27797:25;;27836:20;27854:1;27836:20;:::i;:::-;27831:25;;27875:1;27865:35;;27880:18;;:::i;:::-;27865:35;27921:1;27918;27914:9;27909:14;;27753:176;;;;:::o;27935:348::-;28064:4;28102:2;28091:9;28087:18;28079:26;;28115:79;28191:1;28180:9;28176:17;28167:6;28115:79;:::i;:::-;28204:72;28272:2;28261:9;28257:18;28248:6;28204:72;:::i;:::-;27935:348;;;;;:::o;28289:224::-;28429:34;28425:1;28417:6;28413:14;28406:58;28498:7;28493:2;28485:6;28481:15;28474:32;28289:224;:::o;28519:366::-;28661:3;28682:67;28746:2;28741:3;28682:67;:::i;:::-;28675:74;;28758:93;28847:3;28758:93;:::i;:::-;28876:2;28871:3;28867:12;28860:19;;28519:366;;;:::o;28891:419::-;29057:4;29095:2;29084:9;29080:18;29072:26;;29144:9;29138:4;29134:20;29130:1;29119:9;29115:17;29108:47;29172:131;29298:4;29172:131;:::i;:::-;29164:139;;28891:419;;;:::o;29316:223::-;29456:34;29452:1;29444:6;29440:14;29433:58;29525:6;29520:2;29512:6;29508:15;29501:31;29316:223;:::o;29545:366::-;29687:3;29708:67;29772:2;29767:3;29708:67;:::i;:::-;29701:74;;29784:93;29873:3;29784:93;:::i;:::-;29902:2;29897:3;29893:12;29886:19;;29545:366;;;:::o;29917:419::-;30083:4;30121:2;30110:9;30106:18;30098:26;;30170:9;30164:4;30160:20;30156:1;30145:9;30141:17;30134:47;30198:131;30324:4;30198:131;:::i;:::-;30190:139;;29917:419;;;:::o;30342:182::-;30482:34;30478:1;30470:6;30466:14;30459:58;30342:182;:::o;30530:366::-;30672:3;30693:67;30757:2;30752:3;30693:67;:::i;:::-;30686:74;;30769:93;30858:3;30769:93;:::i;:::-;30887:2;30882:3;30878:12;30871:19;;30530:366;;;:::o;30902:419::-;31068:4;31106:2;31095:9;31091:18;31083:26;;31155:9;31149:4;31145:20;31141:1;31130:9;31126:17;31119:47;31183:131;31309:4;31183:131;:::i;:::-;31175:139;;30902:419;;;:::o;31327:175::-;31467:27;31463:1;31455:6;31451:14;31444:51;31327:175;:::o;31508:366::-;31650:3;31671:67;31735:2;31730:3;31671:67;:::i;:::-;31664:74;;31747:93;31836:3;31747:93;:::i;:::-;31865:2;31860:3;31856:12;31849:19;;31508:366;;;:::o;31880:419::-;32046:4;32084:2;32073:9;32069:18;32061:26;;32133:9;32127:4;32123:20;32119:1;32108:9;32104:17;32097:47;32161:131;32287:4;32161:131;:::i;:::-;32153:139;;31880:419;;;:::o;32305:237::-;32445:34;32441:1;32433:6;32429:14;32422:58;32514:20;32509:2;32501:6;32497:15;32490:45;32305:237;:::o;32548:366::-;32690:3;32711:67;32775:2;32770:3;32711:67;:::i;:::-;32704:74;;32787:93;32876:3;32787:93;:::i;:::-;32905:2;32900:3;32896:12;32889:19;;32548:366;;;:::o;32920:419::-;33086:4;33124:2;33113:9;33109:18;33101:26;;33173:9;33167:4;33163:20;33159:1;33148:9;33144:17;33137:47;33201:131;33327:4;33201:131;:::i;:::-;33193:139;;32920:419;;;:::o;33345:233::-;33485:34;33481:1;33473:6;33469:14;33462:58;33554:16;33549:2;33541:6;33537:15;33530:41;33345:233;:::o;33584:366::-;33726:3;33747:67;33811:2;33806:3;33747:67;:::i;:::-;33740:74;;33823:93;33912:3;33823:93;:::i;:::-;33941:2;33936:3;33932:12;33925:19;;33584:366;;;:::o;33956:419::-;34122:4;34160:2;34149:9;34145:18;34137:26;;34209:9;34203:4;34199:20;34195:1;34184:9;34180:17;34173:47;34237:131;34363:4;34237:131;:::i;:::-;34229:139;;33956:419;;;:::o;34381:98::-;34432:6;34466:5;34460:12;34450:22;;34381:98;;;:::o;34485:168::-;34568:11;34602:6;34597:3;34590:19;34642:4;34637:3;34633:14;34618:29;;34485:168;;;;:::o;34659:360::-;34745:3;34773:38;34805:5;34773:38;:::i;:::-;34827:70;34890:6;34885:3;34827:70;:::i;:::-;34820:77;;34906:52;34951:6;34946:3;34939:4;34932:5;34928:16;34906:52;:::i;:::-;34983:29;35005:6;34983:29;:::i;:::-;34978:3;34974:39;34967:46;;34749:270;34659:360;;;;:::o;35025:640::-;35220:4;35258:3;35247:9;35243:19;35235:27;;35272:71;35340:1;35329:9;35325:17;35316:6;35272:71;:::i;:::-;35353:72;35421:2;35410:9;35406:18;35397:6;35353:72;:::i;:::-;35435;35503:2;35492:9;35488:18;35479:6;35435:72;:::i;:::-;35554:9;35548:4;35544:20;35539:2;35528:9;35524:18;35517:48;35582:76;35653:4;35644:6;35582:76;:::i;:::-;35574:84;;35025:640;;;;;;;:::o;35671:141::-;35727:5;35758:6;35752:13;35743:22;;35774:32;35800:5;35774:32;:::i;:::-;35671:141;;;;:::o;35818:349::-;35887:6;35936:2;35924:9;35915:7;35911:23;35907:32;35904:119;;;35942:79;;:::i;:::-;35904:119;36062:1;36087:63;36142:7;36133:6;36122:9;36118:22;36087:63;:::i;:::-;36077:73;;36033:127;35818:349;;;;:::o;36173:182::-;36313:34;36309:1;36301:6;36297:14;36290:58;36173:182;:::o;36361:366::-;36503:3;36524:67;36588:2;36583:3;36524:67;:::i;:::-;36517:74;;36600:93;36689:3;36600:93;:::i;:::-;36718:2;36713:3;36709:12;36702:19;;36361:366;;;:::o;36733:419::-;36899:4;36937:2;36926:9;36922:18;36914:26;;36986:9;36980:4;36976:20;36972:1;36961:9;36957:17;36950:47;37014:131;37140:4;37014:131;:::i;:::-;37006:139;;36733:419;;;:::o;37158:178::-;37298:30;37294:1;37286:6;37282:14;37275:54;37158:178;:::o;37342:366::-;37484:3;37505:67;37569:2;37564:3;37505:67;:::i;:::-;37498:74;;37581:93;37670:3;37581:93;:::i;:::-;37699:2;37694:3;37690:12;37683:19;;37342:366;;;:::o;37714:419::-;37880:4;37918:2;37907:9;37903:18;37895:26;;37967:9;37961:4;37957:20;37953:1;37942:9;37938:17;37931:47;37995:131;38121:4;37995:131;:::i;:::-;37987:139;;37714:419;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"2991400","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2902","getApproved(uint256)":"5300","getBreedFromModdedRng(uint256)":"infinite","getChanceArray()":"infinite","getDogTokenUris(uint256)":"infinite","getMintFee()":"infinite","getTokenCounter()":"2570","isApprovedForAll(address,address)":"infinite","name()":"infinite","owner()":"2611","ownerOf(uint256)":"3113","rawFulfillRandomWords(uint256,uint256[])":"infinite","renounceOwnership()":"30443","requestNft()":"infinite","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"892","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","transferOwnership(address)":"30879","withdraw()":"infinite"},"internal":{"fulfillRandomWords(uint256,uint256[] memory)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getBreedFromModdedRng(uint256)":"a51cccf3","getChanceArray()":"5dacf5f4","getDogTokenUris(uint256)":"3af25975","getMintFee()":"7a5caab3","getTokenCounter()":"6e02007d","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","requestNft()":"aa152491","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vrfCoordinatorV2\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"gasLane\",\"type\":\"bytes32\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"string[3]\",\"name\":\"dogTokenUris\",\"type\":\"string[3]\"},{\"internalType\":\"uint256\",\"name\":\"mintFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"randomIpfsNft_NeedMoreETHSent\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"randomIpfsNft_RangeOutOfBounds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"randomIpfsNft_TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"requester\",\"type\":\"address\"}],\"name\":\"NftRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"dogBreed\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"Nftminted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moddedRng\",\"type\":\"uint256\"}],\"name\":\"getBreedFromModdedRng\",\"outputs\":[{\"internalType\":\"enum RandomIpfsNft.Breed\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getChanceArray\",\"outputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"\",\"type\":\"uint256[3]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDogTokenUris\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMintFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestNft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RandomIpfsNft.sol\":\"RandomIpfsNft\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\n/** ****************************************************************************\\n * @notice Interface for contracts using VRF randomness\\n * *****************************************************************************\\n * @dev PURPOSE\\n *\\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\\n * @dev making his output up to suit himself. Reggie provides Vera a public key\\n * @dev to which he knows the secret key. Each time Vera provides a seed to\\n * @dev Reggie, he gives back a value which is computed completely\\n * @dev deterministically from the seed and the secret key.\\n *\\n * @dev Reggie provides a proof by which Vera can verify that the output was\\n * @dev correctly computed once Reggie tells it to her, but without that proof,\\n * @dev the output is indistinguishable to her from a uniform random sample\\n * @dev from the output space.\\n *\\n * @dev The purpose of this contract is to make it easy for unrelated contracts\\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\\n * @dev 1. The fulfillment came from the VRFCoordinator\\n * @dev 2. The consumer contract implements fulfillRandomWords.\\n * *****************************************************************************\\n * @dev USAGE\\n *\\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\\n * @dev initialize VRFConsumerBase's attributes in their constructor as\\n * @dev shown:\\n *\\n * @dev   contract VRFConsumer {\\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\\n * @dev         <initialization with other arguments goes here>\\n * @dev       }\\n * @dev   }\\n *\\n * @dev The oracle will have given you an ID for the VRF keypair they have\\n * @dev committed to (let's call it keyHash). Create subscription, fund it\\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\\n * @dev subscription management functions).\\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\\n * @dev callbackGasLimit, numWords),\\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\\n *\\n * @dev Once the VRFCoordinator has received and validated the oracle's response\\n * @dev to your request, it will call your contract's fulfillRandomWords method.\\n *\\n * @dev The randomness argument to fulfillRandomWords is a set of random words\\n * @dev generated from your requestId and the blockHash of the request.\\n *\\n * @dev If your contract could have concurrent requests open, you can use the\\n * @dev requestId returned from requestRandomWords to track which response is associated\\n * @dev with which randomness request.\\n * @dev See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,\\n * @dev if your contract could have multiple requests in flight simultaneously.\\n *\\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\\n * @dev differ.\\n *\\n * *****************************************************************************\\n * @dev SECURITY CONSIDERATIONS\\n *\\n * @dev A method with the ability to call your fulfillRandomness method directly\\n * @dev could spoof a VRF response with any random value, so it's critical that\\n * @dev it cannot be directly called by anything other than this base contract\\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\\n *\\n * @dev For your users to trust that your contract's random behavior is free\\n * @dev from malicious interference, it's best if you can write it so that all\\n * @dev behaviors implied by a VRF response are executed *during* your\\n * @dev fulfillRandomness method. If your contract must store the response (or\\n * @dev anything derived from it) and use it later, you must ensure that any\\n * @dev user-significant behavior which depends on that stored value cannot be\\n * @dev manipulated by a subsequent VRF request.\\n *\\n * @dev Similarly, both miners and the VRF oracle itself have some influence\\n * @dev over the order in which VRF responses appear on the blockchain, so if\\n * @dev your contract could have multiple VRF requests in flight simultaneously,\\n * @dev you must ensure that the order in which the VRF responses arrive cannot\\n * @dev be used to manipulate your contract's user-significant behavior.\\n *\\n * @dev Since the block hash of the block which contains the requestRandomness\\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\\n * @dev miner could, in principle, fork the blockchain to evict the block\\n * @dev containing the request, forcing the request to be included in a\\n * @dev different block with a different hash, and therefore a different input\\n * @dev to the VRF. However, such an attack would incur a substantial economic\\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\\n * @dev until it calls responds to a request. It is for this reason that\\n * @dev that you can signal to an oracle you'd like them to wait longer before\\n * @dev responding to the request (however this is not enforced in the contract\\n * @dev and so remains effective only in the case of unmodified oracle software).\\n */\\nabstract contract VRFConsumerBaseV2 {\\n  error OnlyCoordinatorCanFulfill(address have, address want);\\n  address private immutable vrfCoordinator;\\n\\n  /**\\n   * @param _vrfCoordinator address of VRFCoordinator contract\\n   */\\n  constructor(address _vrfCoordinator) {\\n    vrfCoordinator = _vrfCoordinator;\\n  }\\n\\n  /**\\n   * @notice fulfillRandomness handles the VRF response. Your contract must\\n   * @notice implement it. See \\\"SECURITY CONSIDERATIONS\\\" above for important\\n   * @notice principles to keep in mind when implementing your fulfillRandomness\\n   * @notice method.\\n   *\\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\\n   * @dev signature, and will call it once it has verified the proof\\n   * @dev associated with the randomness. (It is triggered via a call to\\n   * @dev rawFulfillRandomness, below.)\\n   *\\n   * @param requestId The Id initially returned by requestRandomness\\n   * @param randomWords the VRF output expanded to the requested number of words\\n   */\\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\\n\\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\\n  // the origin of the call\\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\\n    if (msg.sender != vrfCoordinator) {\\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\\n    }\\n    fulfillRandomWords(requestId, randomWords);\\n  }\\n}\\n\",\"keccak256\":\"0x3d709a5e0f1f9b8841172b10ba8af785dd51a13eda9fc395723a706e51329904\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface VRFCoordinatorV2Interface {\\n  /**\\n   * @notice Get configuration relevant for making requests\\n   * @return minimumRequestConfirmations global min for request confirmations\\n   * @return maxGasLimit global max for request gas limit\\n   * @return s_provingKeyHashes list of registered key hashes\\n   */\\n  function getRequestConfig()\\n    external\\n    view\\n    returns (\\n      uint16,\\n      uint32,\\n      bytes32[] memory\\n    );\\n\\n  /**\\n   * @notice Request a set of random words.\\n   * @param keyHash - Corresponds to a particular oracle job which uses\\n   * that key for generating the VRF proof. Different keyHash's have different gas price\\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\\n   * @param subId  - The ID of the VRF subscription. Must be funded\\n   * with the minimum subscription balance required for the selected keyHash.\\n   * @param minimumRequestConfirmations - How many blocks you'd like the\\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\\n   * for why you may want to request more. The acceptable range is\\n   * [minimumRequestBlockConfirmations, 200].\\n   * @param callbackGasLimit - How much gas you'd like to receive in your\\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\\n   * may be slightly less than this amount because of gas used calling the function\\n   * (argument decoding etc.), so you may need to request slightly more than you expect\\n   * to have inside fulfillRandomWords. The acceptable range is\\n   * [0, maxGasLimit]\\n   * @param numWords - The number of uint256 random values you'd like to receive\\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\\n   * @return requestId - A unique identifier of the request. Can be used to match\\n   * a request to a response in fulfillRandomWords.\\n   */\\n  function requestRandomWords(\\n    bytes32 keyHash,\\n    uint64 subId,\\n    uint16 minimumRequestConfirmations,\\n    uint32 callbackGasLimit,\\n    uint32 numWords\\n  ) external returns (uint256 requestId);\\n\\n  /**\\n   * @notice Create a VRF subscription.\\n   * @return subId - A unique subscription id.\\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\\n   * @dev Note to fund the subscription, use transferAndCall. For example\\n   * @dev  LINKTOKEN.transferAndCall(\\n   * @dev    address(COORDINATOR),\\n   * @dev    amount,\\n   * @dev    abi.encode(subId));\\n   */\\n  function createSubscription() external returns (uint64 subId);\\n\\n  /**\\n   * @notice Get a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @return balance - LINK balance of the subscription in juels.\\n   * @return reqCount - number of requests for this subscription, determines fee tier.\\n   * @return owner - owner of the subscription.\\n   * @return consumers - list of consumer address which are able to use this subscription.\\n   */\\n  function getSubscription(uint64 subId)\\n    external\\n    view\\n    returns (\\n      uint96 balance,\\n      uint64 reqCount,\\n      address owner,\\n      address[] memory consumers\\n    );\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @param newOwner - proposed new owner of the subscription\\n   */\\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\\n\\n  /**\\n   * @notice Request subscription owner transfer.\\n   * @param subId - ID of the subscription\\n   * @dev will revert if original owner of subId has\\n   * not requested that msg.sender become the new owner.\\n   */\\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\\n\\n  /**\\n   * @notice Add a consumer to a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - New consumer which can use the subscription\\n   */\\n  function addConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Remove a consumer from a VRF subscription.\\n   * @param subId - ID of the subscription\\n   * @param consumer - Consumer to remove from the subscription\\n   */\\n  function removeConsumer(uint64 subId, address consumer) external;\\n\\n  /**\\n   * @notice Cancel a subscription\\n   * @param subId - ID of the subscription\\n   * @param to - Where to send the remaining LINK to\\n   */\\n  function cancelSubscription(uint64 subId, address to) external;\\n\\n  /*\\n   * @notice Check to see if there exists a request commitment consumers\\n   * for all consumers and keyhashes for a given sub.\\n   * @param subId - ID of the subscription\\n   * @return true if there exists at least one unfulfilled request for the subscription, false\\n   * otherwise.\\n   */\\n  function pendingRequestExists(uint64 subId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x54cdc97717cbae1a51a5500c8ee4875ebf056c95b54d2155a9544a79cb4f4494\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../interfaces/IERC4906.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n\\n        emit MetadataUpdate(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/RandomIpfsNft.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/VRFCoordinatorV2Interface.sol\\\";\\r\\nimport \\\"@chainlink/contracts/src/v0.8/VRFConsumerBaseV2.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\nerror randomIpfsNft_RangeOutOfBounds();\\r\\nerror randomIpfsNft_NeedMoreETHSent();\\r\\nerror randomIpfsNft_TransferFailed();\\r\\n\\r\\ncontract RandomIpfsNft is VRFConsumerBaseV2, ERC721URIStorage, Ownable {\\r\\n    VRFCoordinatorV2Interface private immutable i_vrfCoordinator;\\r\\n    uint64 private immutable i_subscriptionId;\\r\\n    bytes32 private immutable i_gasLane;\\r\\n    uint32 private immutable i_callbackGasLimit;\\r\\n    uint16 private constant REQUEST_CONFIRMATIONS = 3;\\r\\n    uint32 private constant NUM_WORDS = 1;\\r\\n\\r\\n    mapping(uint256 => address) s_requestIdToSender;\\r\\n\\r\\n    enum Breed {\\r\\n        PUG,\\r\\n        SHIBA_INU,\\r\\n        ST_BERNARD\\r\\n    }\\r\\n\\r\\n    uint256 internal constant MAX_CHANCE_VALUE = 100;\\r\\n    uint256 private s_tokenCounter;\\r\\n    uint256 internal immutable i_mintFee;\\r\\n\\r\\n    string[] internal s_dogTokenUris;\\r\\n\\r\\n    event NftRequested(uint256 indexed requestId, address requester);\\r\\n    event Nftminted(Breed dogBreed, address minter);\\r\\n\\r\\n    constructor(\\r\\n        address vrfCoordinatorV2,\\r\\n        uint64 subscriptionId,\\r\\n        bytes32 gasLane,\\r\\n        uint32 callbackGasLimit,\\r\\n        string[3] memory dogTokenUris,\\r\\n        uint256 mintFee\\r\\n    ) VRFConsumerBaseV2(vrfCoordinatorV2) ERC721(\\\"Random IPFS NFT\\\", \\\"RIN\\\") {\\r\\n        i_vrfCoordinator = VRFCoordinatorV2Interface(vrfCoordinatorV2);\\r\\n        i_subscriptionId = subscriptionId;\\r\\n        i_gasLane = gasLane;\\r\\n        i_callbackGasLimit = callbackGasLimit;\\r\\n        s_dogTokenUris = dogTokenUris;\\r\\n        i_mintFee = mintFee;\\r\\n    }\\r\\n\\r\\n    function requestNft() public payable returns (uint256 requestId) {\\r\\n        if (msg.value < i_mintFee) {\\r\\n            revert randomIpfsNft_NeedMoreETHSent();\\r\\n        }\\r\\n        requestId = i_vrfCoordinator.requestRandomWords(\\r\\n            i_gasLane,\\r\\n            i_subscriptionId,\\r\\n            REQUEST_CONFIRMATIONS,\\r\\n            i_callbackGasLimit,\\r\\n            NUM_WORDS\\r\\n        );\\r\\n        s_requestIdToSender[requestId] = msg.sender;\\r\\n        emit NftRequested(requestId, msg.sender);\\r\\n    }\\r\\n\\r\\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\\r\\n        address dogOwner = s_requestIdToSender[requestId];\\r\\n        uint256 newTokenId = s_tokenCounter;\\r\\n\\r\\n        uint256 moddedRng = randomWords[0] % MAX_CHANCE_VALUE;\\r\\n        Breed dogBreed = getBreedFromModdedRng(moddedRng);\\r\\n        s_tokenCounter += s_tokenCounter;\\r\\n\\r\\n        _safeMint(dogOwner, newTokenId);\\r\\n        _setTokenURI(newTokenId, s_dogTokenUris[uint256(dogBreed)]);\\r\\n\\r\\n        emit Nftminted(dogBreed, dogOwner);\\r\\n    }\\r\\n\\r\\n    function withdraw() public onlyOwner {\\r\\n        uint256 amount = address(this).balance;\\r\\n        (bool success, ) = payable(msg.sender).call{value: amount}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            revert randomIpfsNft_TransferFailed();\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function getBreedFromModdedRng(uint256 moddedRng) public pure returns (Breed) {\\r\\n        uint256 cumulativeSum = 0;\\r\\n        uint[3] memory chanceArray = getChanceArray();\\r\\n\\r\\n        for (uint256 i = 0; i > chanceArray.length; i++) {\\r\\n            if (moddedRng >= cumulativeSum && moddedRng < cumulativeSum + chanceArray[i]) {\\r\\n                return Breed(i);\\r\\n            }\\r\\n            cumulativeSum += chanceArray[i];\\r\\n        }\\r\\n        revert randomIpfsNft_RangeOutOfBounds();\\r\\n    }\\r\\n\\r\\n    function getChanceArray() public pure returns (uint256[3] memory) {\\r\\n        return [10, 30, MAX_CHANCE_VALUE];\\r\\n    }\\r\\n\\r\\n    function getMintFee() public view returns (uint256) {\\r\\n        return i_mintFee;\\r\\n    }\\r\\n\\r\\n    function getDogTokenUris(uint256 index) public view returns (string memory) {\\r\\n        return s_dogTokenUris[index];\\r\\n    }\\r\\n\\r\\n    function getTokenCounter() public view returns (uint256) {\\r\\n        return s_tokenCounter;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xea78fc633272116391159f9795d200f974b82b242f2e42a40510afce3c553b9c\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1324,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":1326,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":1330,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":1334,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":1338,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":1344,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":2375,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":1165,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"_owner","offset":0,"slot":"7","type":"t_address"},{"astId":4548,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_requestIdToSender","offset":0,"slot":"8","type":"t_mapping(t_uint256,t_address)"},{"astId":4557,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_tokenCounter","offset":0,"slot":"9","type":"t_uint256"},{"astId":4562,"contract":"contracts/RandomIpfsNft.sol:RandomIpfsNft","label":"s_dogTokenUris","offset":0,"slot":"10","type":"t_array(t_string_storage)dyn_storage"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_array(t_string_storage)dyn_storage":{"base":"t_string_storage","encoding":"dynamic_array","label":"string[]","numberOfBytes":"32"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}